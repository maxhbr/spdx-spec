{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The Software Package Data Exchange\u00ae (SPDX\u00ae) Specification Version 2.3 Copyright \u00a9 2010-2022 Linux Foundation and its Contributors. This work is licensed under the Creative Commons Attribution License 3.0 Unported (CC-BY-3.0) reproduced in its entirety in Annex J herein. All other rights are expressly reserved. With thanks to Adam Cohn, Alan Tse, Alexios Zavras, Andrew Back, Ann Thornton, Basil Peace, Bill Schineller, Bradlee Edmondson, Bruno Cornec, Ciaran Farrell, Daniel German, David Edelsohn, David Kemp, David A. Wheeler, Debra McGlade, Dennis Clark, Dick Brooks, Ed Warnicke, Eran Strod, Eric Thomas, Esteban Rockett, Gary O'Neall, Guillaume Rousseau, Hassib Khanafer, Henk Birkholz, Hiroyuki Fukuchi, Jack Manbeck, Jaime Garcia, Jeff Luszcz, Jilayne Lovejoy, John Ellis, Jonas Oberg, Kamsang Salima, Karen Copenhaver, Kate Stewart, Kevin Mitchell, Kim Weins, Kirsten Newcomer, Kris Reeves, Liang Cao, Lon Hohberger, Marc-Etienne Vargenau, Mark Gisi, Marshall Clow, Martin Michlmayr, Martin von Willebrand, Mark Atwood, Matija \u0160uklje, Matt Germonprez, Maximilian Huber, Michael J. Herzog, Michel Ruffin, Nisha Kumar, Norio Kobota, Nuno Brito, Oliver Fendt, Paul Madick, Peter Williams, Phil Robb, Philip Koltun, Philip Odence, Phillippe Ombredanne, Pierre Lapointe, Rana Rahal, Robert Martin, Robin Gandhi, Rose Judge, Sam Ellis, Sameer Ahmed, Scott K Peterson, Scott Lamons, Scott Sterling, Sean Barnum, Sebastian Crane, Shane Coughlan, Steve Cropper, Steve Winslow, Stuart Hughes, Thomas F. Incorvia, Thomas Steenbergen, Tom Callaway, Tom Vidal, Toru Taima, Venkata Krishna, W. Trevor King, William Bartholomew, Yev Bronshteyn, Yoshiko Ouchi, Yoshiyuki Ito, Yuji Nomura and Zachary McFarland for their contributions and assistance.","title":"Copyright"},{"location":"#the-software-package-data-exchange-spdx-specification-version-23","text":"Copyright \u00a9 2010-2022 Linux Foundation and its Contributors. This work is licensed under the Creative Commons Attribution License 3.0 Unported (CC-BY-3.0) reproduced in its entirety in Annex J herein. All other rights are expressly reserved. With thanks to Adam Cohn, Alan Tse, Alexios Zavras, Andrew Back, Ann Thornton, Basil Peace, Bill Schineller, Bradlee Edmondson, Bruno Cornec, Ciaran Farrell, Daniel German, David Edelsohn, David Kemp, David A. Wheeler, Debra McGlade, Dennis Clark, Dick Brooks, Ed Warnicke, Eran Strod, Eric Thomas, Esteban Rockett, Gary O'Neall, Guillaume Rousseau, Hassib Khanafer, Henk Birkholz, Hiroyuki Fukuchi, Jack Manbeck, Jaime Garcia, Jeff Luszcz, Jilayne Lovejoy, John Ellis, Jonas Oberg, Kamsang Salima, Karen Copenhaver, Kate Stewart, Kevin Mitchell, Kim Weins, Kirsten Newcomer, Kris Reeves, Liang Cao, Lon Hohberger, Marc-Etienne Vargenau, Mark Gisi, Marshall Clow, Martin Michlmayr, Martin von Willebrand, Mark Atwood, Matija \u0160uklje, Matt Germonprez, Maximilian Huber, Michael J. Herzog, Michel Ruffin, Nisha Kumar, Norio Kobota, Nuno Brito, Oliver Fendt, Paul Madick, Peter Williams, Phil Robb, Philip Koltun, Philip Odence, Phillippe Ombredanne, Pierre Lapointe, Rana Rahal, Robert Martin, Robin Gandhi, Rose Judge, Sam Ellis, Sameer Ahmed, Scott K Peterson, Scott Lamons, Scott Sterling, Sean Barnum, Sebastian Crane, Shane Coughlan, Steve Cropper, Steve Winslow, Stuart Hughes, Thomas F. Incorvia, Thomas Steenbergen, Tom Callaway, Tom Vidal, Toru Taima, Venkata Krishna, W. Trevor King, William Bartholomew, Yev Bronshteyn, Yoshiko Ouchi, Yoshiyuki Ito, Yuji Nomura and Zachary McFarland for their contributions and assistance.","title":"The Software Package Data Exchange\u00ae (SPDX\u00ae) Specification Version 2.3"},{"location":"RDF-object-model-and-identifier-syntax/","text":"Annex C RDF object model and identifier syntax (Normative) C.1 Introduction SPDX \u00ae Vocabulary Specification See: http://spdx.org/rdf/ontology/spdx-2-3 Version: 2.3 Figure C.1 \u2014 SPDX ontology This figure is licensed under the Creative Commons Attribution 3.0 Unported . C.2 Agent and tool identifiers Fields that identify entities that have acted in relation to the SPDX document are single line of text which name the agent or tool and, optionally, provide contact information. For example, \"Person: Jane Doe (jane.doe@example.com)\", \"Organization: ExampleCodeInspect (contact@example.com)\" and \"Tool: LicenseFind - 1.0\". The exact syntax of agent and tool identifications is described below in ABNF . agent = person / organization tool = \"Tool: \" name 0*1( \" \" DASH \" \" version) person = \"Person: \" name 0*1contact-info organization = \"Organization: \" name 0*1contact-info name = 1*( UNRESERVED ) / U+0022 1*( VCHAR-SANS-QUOTE ) U+0022 contact-info = \" (\" email-addr \")\" email-addr = local-name-atom *( \".\" local-name-atom ) \"@\" domain-name-atom 1*( \".\" domain-name-atom ) version = 1*VCHAR-SANS-QUOTE local-name-atom = 1*( ALPHA / DIGIT / ; Printable US-ASCII \"!\" / \"#\" / ; characters not including \"$\" / \"%\" / ; specials. \"&\" / \"'\" / \"*\" / \"+\" / \"-\" / \"/\" / \"=\" / \"?\" / \"^\" / \"_\" / \"`\" / \"{\" / \"|\" / \"}\" / \"~\" ) domain-name-atom = 1*( ALPHA / DIGIT / \"-\" ) DASH = U+2010 / U+2212 / ; hyphen, minus, em dash and U+2013 / U+2014 ; en dash UNRESERVED = U+0020-U+0027 / ; visible unicode characters U+0029-U+0080 / ; except '(' and dashes U+00A0-U+200F / U+2011-U+2027 / U+202A-U+2211 / U+2213-U+E01EF VCHAR-SANS-QUOTE = U+0020-U+0021 / ; visible unicode characters U+0023-U+0080 / ; except quotation mark U+00a0-U+E01EF","title":"Annex C: RDF Object Model and Identifier Syntax"},{"location":"RDF-object-model-and-identifier-syntax/#annex-c-rdf-object-model-and-identifier-syntax-normative","text":"","title":"Annex C RDF object model and identifier syntax (Normative)"},{"location":"RDF-object-model-and-identifier-syntax/#c1-introduction","text":"SPDX \u00ae Vocabulary Specification See: http://spdx.org/rdf/ontology/spdx-2-3 Version: 2.3 Figure C.1 \u2014 SPDX ontology This figure is licensed under the Creative Commons Attribution 3.0 Unported .","title":"C.1 Introduction "},{"location":"RDF-object-model-and-identifier-syntax/#c2-agent-and-tool-identifiers","text":"Fields that identify entities that have acted in relation to the SPDX document are single line of text which name the agent or tool and, optionally, provide contact information. For example, \"Person: Jane Doe (jane.doe@example.com)\", \"Organization: ExampleCodeInspect (contact@example.com)\" and \"Tool: LicenseFind - 1.0\". The exact syntax of agent and tool identifications is described below in ABNF . agent = person / organization tool = \"Tool: \" name 0*1( \" \" DASH \" \" version) person = \"Person: \" name 0*1contact-info organization = \"Organization: \" name 0*1contact-info name = 1*( UNRESERVED ) / U+0022 1*( VCHAR-SANS-QUOTE ) U+0022 contact-info = \" (\" email-addr \")\" email-addr = local-name-atom *( \".\" local-name-atom ) \"@\" domain-name-atom 1*( \".\" domain-name-atom ) version = 1*VCHAR-SANS-QUOTE local-name-atom = 1*( ALPHA / DIGIT / ; Printable US-ASCII \"!\" / \"#\" / ; characters not including \"$\" / \"%\" / ; specials. \"&\" / \"'\" / \"*\" / \"+\" / \"-\" / \"/\" / \"=\" / \"?\" / \"^\" / \"_\" / \"`\" / \"{\" / \"|\" / \"}\" / \"~\" ) domain-name-atom = 1*( ALPHA / DIGIT / \"-\" ) DASH = U+2010 / U+2212 / ; hyphen, minus, em dash and U+2013 / U+2014 ; en dash UNRESERVED = U+0020-U+0027 / ; visible unicode characters U+0029-U+0080 / ; except '(' and dashes U+00A0-U+200F / U+2011-U+2027 / U+202A-U+2211 / U+2213-U+E01EF VCHAR-SANS-QUOTE = U+0020-U+0021 / ; visible unicode characters U+0023-U+0080 / ; except quotation mark U+00a0-U+E01EF","title":"C.2 Agent and tool identifiers "},{"location":"SPDX-Lite/","text":"Annex G SPDX Lite (Normative) G.1 Explanation of SPDX Lite The SPDX Lite profile defines a subset of the SPDX specification, from the point of view of use cases in some industries. SPDX Lite aims at the balance between the SPDX standard and actual workflows in some industries. The SPDX Lite profile consists of mandatory fields from the Document Creation and Package Information sections and other basic information. The mandatory part of the Package information in SPDX Lite is basic but useful for complying with licenses. It is easy to understand licensing information by reading an SPDX Lite file. It is easy to create manually an SPDX Lite file by anyone who does not have enough knowledge about licensing information, so that tools are not necessarily required to create an SPDX Lite file. SPDX Lite has affinity with SPDX tools due to its containing the mandatory part of the Document Creation and Package Information in the SPDX Lite definition. An SPDX Lite document can be used in parallel with SPDX documents in software supply chains. G.2 Format of SPDX Lite The SPDX Lite profile is a subset of the SPDX specification. SPDX Lite consists of mandatory fields of the Document Creation and Package Information sections and other basic information. Cardinality of each item is not changed. The mandatory part of the SPDX document creation information section (which consists of SPDX Version, Data License, SPDX Identifier, Document Name, SPDX Document Namespace, Creator and Created) is used for keeping compatibility with SPDX tools. The main part of the Package Information (those are Package Name, Package Version, Package File Name, Package Supplier, Package Download Location, Package Home Page, Concluded License, Declared License, Comments on License and Copyright Text) is used for exchanging license information. In the Package Information, Package SPDX Identifier and Files Analyzed are used for keeping compatibility with SPDX tools. Files Analyzed shall be set to \"false\" when SPDX Lite is used. Package Comment can be used to describe additional details, such as compiling options, where a license may change with a different compiling option. External Reference field can be used to express correlated external resources information such as security CPE strings as described in Annex F of SPDX spec. The Other License information section (License Identifier, Extracted Text, License Name and License Comment) is used for exchanging license information for licenses that are not on the SPDX License List . G.3 Table of SPDX Lite fields Table G.1 \u2014 SPDX Lite fields # SPDX subclause Field name L1.1 6.1 SPDX Version L1.2 6.2 Data License L1.3 6.3 SPDX Identifier L1.4 6.4 Document Name L1.5 6.5 SPDX Document Namespace L1.6 6.8 Creator L1.7 6.9 Created L2.1 7.1 Package Name L2.2 7.2 Package SPDX Identifier L2.3 7.3 Package Version L2.4 7.4 Package File Name L2.5 7.5 Package Supplier L2.6 7.7 Package Download Location L2.7 7.8 Files Analyzed L2.8 7.11 Package Home Page L2.9 7.13 Concluded License L2.10 7.15 Declared License L2.11 7.16 Comments on License L2.12 7.17 Copyright Text L2.13 7.20 Package Comment L2.14 7.21 External Reference field L3.1 10.1 License Identifier L3.2 10.2 Extracted Text L3.3 10.3 License Name L3.4 10.5 License Comment","title":"Annex G: SPDX Lite"},{"location":"SPDX-Lite/#annex-g-spdx-lite-normative","text":"","title":"Annex G SPDX Lite (Normative)"},{"location":"SPDX-Lite/#g1-explanation-of-spdx-lite","text":"The SPDX Lite profile defines a subset of the SPDX specification, from the point of view of use cases in some industries. SPDX Lite aims at the balance between the SPDX standard and actual workflows in some industries. The SPDX Lite profile consists of mandatory fields from the Document Creation and Package Information sections and other basic information. The mandatory part of the Package information in SPDX Lite is basic but useful for complying with licenses. It is easy to understand licensing information by reading an SPDX Lite file. It is easy to create manually an SPDX Lite file by anyone who does not have enough knowledge about licensing information, so that tools are not necessarily required to create an SPDX Lite file. SPDX Lite has affinity with SPDX tools due to its containing the mandatory part of the Document Creation and Package Information in the SPDX Lite definition. An SPDX Lite document can be used in parallel with SPDX documents in software supply chains.","title":"G.1 Explanation of SPDX Lite "},{"location":"SPDX-Lite/#g2-format-of-spdx-lite","text":"The SPDX Lite profile is a subset of the SPDX specification. SPDX Lite consists of mandatory fields of the Document Creation and Package Information sections and other basic information. Cardinality of each item is not changed. The mandatory part of the SPDX document creation information section (which consists of SPDX Version, Data License, SPDX Identifier, Document Name, SPDX Document Namespace, Creator and Created) is used for keeping compatibility with SPDX tools. The main part of the Package Information (those are Package Name, Package Version, Package File Name, Package Supplier, Package Download Location, Package Home Page, Concluded License, Declared License, Comments on License and Copyright Text) is used for exchanging license information. In the Package Information, Package SPDX Identifier and Files Analyzed are used for keeping compatibility with SPDX tools. Files Analyzed shall be set to \"false\" when SPDX Lite is used. Package Comment can be used to describe additional details, such as compiling options, where a license may change with a different compiling option. External Reference field can be used to express correlated external resources information such as security CPE strings as described in Annex F of SPDX spec. The Other License information section (License Identifier, Extracted Text, License Name and License Comment) is used for exchanging license information for licenses that are not on the SPDX License List .","title":"G.2 Format of SPDX Lite "},{"location":"SPDX-Lite/#g3-table-of-spdx-lite-fields","text":"Table G.1 \u2014 SPDX Lite fields # SPDX subclause Field name L1.1 6.1 SPDX Version L1.2 6.2 Data License L1.3 6.3 SPDX Identifier L1.4 6.4 Document Name L1.5 6.5 SPDX Document Namespace L1.6 6.8 Creator L1.7 6.9 Created L2.1 7.1 Package Name L2.2 7.2 Package SPDX Identifier L2.3 7.3 Package Version L2.4 7.4 Package File Name L2.5 7.5 Package Supplier L2.6 7.7 Package Download Location L2.7 7.8 Files Analyzed L2.8 7.11 Package Home Page L2.9 7.13 Concluded License L2.10 7.15 Declared License L2.11 7.16 Comments on License L2.12 7.17 Copyright Text L2.13 7.20 Package Comment L2.14 7.21 External Reference field L3.1 10.1 License Identifier L3.2 10.2 Extracted Text L3.3 10.3 License Name L3.4 10.5 License Comment","title":"G.3 Table of SPDX Lite fields "},{"location":"SPDX-license-expressions/","text":"Annex D SPDX license expressions (Normative) D.1 Overview Often a single license can be used to represent the licensing terms of a source code or binary file, but there are situations where a single license identifier is not sufficient. A common example is when software is offered under a choice of one or more licenses (e.g., GPL-2.0-only OR BSD-3-Clause). Another example is when a set of licenses is needed to represent a binary program constructed by compiling and linking two (or more) different source files each governed by different licenses (e.g., LGPL-2.1-only AND BSD-3-Clause). SPDX License Expressions provide a way for one to construct expressions that more accurately represent the licensing terms typically found in open source software source code. A license expression could be a single license identifier found on the SPDX License List; a user defined license reference denoted by the LicenseRef- [idString] ; a license identifier combined with an SPDX exception; or some combination of license identifiers, license references and exceptions constructed using a small set of defined operators (e.g., AND , OR , WITH and + ). We provide the definition of what constitutes a valid an SPDX License Expression in this section. The exact syntax of license expressions is described below in ABNF . idstring = 1*(ALPHA / DIGIT / \"-\" / \".\" ) license-id = <short form license identifier in Annex A.1> license-exception-id = <short form license exception identifier in Annex A.2> license-ref = [\"DocumentRef-\"(idstring)\":\"]\"LicenseRef-\"(idstring) simple-expression = license-id / license-id\"+\" / license-ref compound-expression = (simple-expression / simple-expression \"WITH\" license-exception-id / compound-expression \"AND\" compound-expression / compound-expression \"OR\" compound-expression / \"(\" compound-expression \")\" ) license-expression = (simple-expression / compound-expression) In the following sections we describe in more detail <license-expression> construct, a licensing expression string that enables a more accurate representation of the licensing terms of modern-day software. A valid <license-expression> string consists of either: (i) a simple license expression, such as a single license identifier; or (ii) a more complex expression constructed by combining smaller valid expressions using Boolean license operators. There MUST NOT be white space between a license-id and any following + . This supports easy parsing and backwards compatibility. There MUST be white space on either side of the operator \"WITH\". There MUST be white space and/or parentheses on either side of the operators AND and OR . In the tag:value format, a license expression MUST be on a single line, and MUST NOT include a line break in the middle of the expression. D.2 Case sensitivity License expression operators ( AND , OR and WITH ) should be matched in a case-sensitive manner. License identifiers (including license exception identifiers) used in SPDX documents or source code files should be matched in a case-insensitive manner. In other words, MIT , Mit and mIt should all be treated as the same identifier and referring to the same license. However, please be aware that it is often important to match with the case of the canonical identifier on the SPDX License List . This is because the canonical identifier's case is used in the URL of the license's or exception's entry on the List, and because the canonical identifier is translated to a URI in RDF documents. D.3 Simple license expressions A simple <license-expression> is composed one of the following: An SPDX License List Short Form Identifier. For example: CDDL-1.0 An SPDX License List Short Form Identifier with a unary \"+\" operator suffix to represent the current version of the license or any later version. For example: CDDL-1.0+ An SPDX user defined license reference: [\"DocumentRef-\"1*(idstring)\":\"]\"LicenseRef-\"1*(idstring) Some examples: LicenseRef-23 LicenseRef-MIT-Style-1 DocumentRef-spdx-tool-1.2:LicenseRef-MIT-Style-2 D.4 Composite license expressions D.4.1 Introduction More expressive composite license expressions can be constructed using \"OR\", \"AND\", and \"WITH\" operators similar to constructing mathematical expressions using arithmetic operators. For the tag:value format, any license expression that consists of more than one license identifier and/or LicenseRef, may optionally be encapsulated by parentheses: \"( )\". Nested parentheses can also be used to specify an order of precedence which is discussed in more detail in D.4.5 . D.4.2 Disjunctive \"OR\" operator If presented with a choice between two or more licenses, use the disjunctive binary \"OR\" operator to construct a new license expression, where both the left and right operands are valid license expression values. For example, when given a choice between the LGPL-2.1-only or MIT licenses, a valid expression would be: LGPL-2.1-only OR MIT The \"OR\" operator is commutative, meaning that the above expression should be considered equivalent to: MIT OR LGPL-2.1-only An example representing a choice between three different licenses would be: LGPL-2.1-only OR MIT OR BSD-3-Clause D.4.3 Conjunctive \"AND\" operator If required to simultaneously comply with two or more licenses, use the conjunctive binary \"AND\" operator to construct a new license expression, where both the left and right operands are a valid license expression values. For example, when one is required to comply with both the LGPL-2.1-only or MIT licenses, a valid expression would be: LGPL-2.1-only AND MIT The \"AND\" operator is commutative, meaning that the above expression should be considered equivalent to: MIT AND LGPL-2.1-only An example where all three different licenses apply would be: LGPL-2.1-only AND MIT AND BSD-2-Clause D.4.4 Exception \"WITH\" operator Sometimes a set of license terms apply except under special circumstances. In this case, use the binary \"WITH\" operator to construct a new license expression to represent the special exception situation. A valid <license-expression> is where the left operand is a <simple-expression> value and the right operand is a <license-exception-id> that represents the special exception terms. For example, when the Bison exception is to be applied to GPL-2.0-or-later, the expression would be: GPL-2.0-or-later WITH Bison-exception-2.2 The current set of valid exceptions can be found in Annex A.2 . For the most up to date set of exceptions please see spdx.org/licenses . If the applicable exception is not found on the SPDX License Exception List, then use a single <license-ref> to represent the entire license terms (including the exception). D.4.5 Order of precedence and parentheses The order of application of the operators in an expression matters (similar to mathematical operators). The default operator order of precedence of a <license-expression> a is: + WITH AND OR where a lower order operator is applied before a higher order operator. For example, the following expression: LGPL-2.1-only OR BSD-3-Clause AND MIT represents a license choice between either LGPL-2.1-only and the expression BSD-3-Clause AND MIT because the AND operator takes precedence over (is applied before) the OR operator. When required to express an order of precedence that is different from the default order a <license-expression> can be encapsulated in pairs of parentheses: ( ), to indicate that the operators found inside the parentheses takes precedence over operators outside. This is also similar to the use of parentheses in an algebraic expression e.g., (5+7)/2. For instance, the following expression: MIT AND (LGPL-2.1-or-later OR BSD-3-Clause) states the OR operator should be applied before the AND operator. That is, one should first select between the LGPL-2.1-or-later or the BSD-3-Clause license before applying the MIT license. D.4.6 License expressions in RDF A conjunctive license can be expressed in RDF via a <spdx:ConjunctiveLicenseSet> element, with an spdx:member property for each element in the conjunctive license. Two or more members are required. <spdx:ConjunctiveLicenseSet> <spdx:member rdf:resource=\"http://spdx.org/licenses/GPL-2.0-only\"/> <spdx:ExtractedLicensingInfo rdf:about =\"http://example.org#LicenseRef-EternalSurrender\"> <spdx:extractedText> In exchange for using this software, you agree to give its author all your worldly possessions. You will not hold the author liable for all the damage this software will inevitably cause not only to your person and property, but to the entire fabric of the cosmos. </spdx:extractedText> <spdx:licenseId>LicenseRef-EternalSurrender</spdx:licenseId> </spdx:ExtractedLicensingInfo> </spdx:ConjunctiveLicenseSet> A disjunctive license can be expressed in RDF via a <spdx:DisjunctiveLicenseSet> element, with an spdx:member property for each element in the disjunctive license. Two or more members are required. <spdx:DisjunctiveLicenseSet> <spdx:member rdf:resource=\"http://spdx.org/licenses/GPL-2.0-only\"/> <spdx:member> <spdx:ExtractedLicensingInfo rdf:about =\"http://example.org#LicenseRef-EternalSurrender\"> <spdx:extractedText> In exchange for using this software, you agree to give its author all your worldly possessions. You will not hold the author liable for all the damage this software will inevitably cause not only to your person and property, but to the entire fabric of the cosmos. </spdx:extractedText> <spdx:licenseId>LicenseRef-EternalSurrender</spdx:licenseId> </spdx:ExtractedLicensingInfo> </spdx:member> </spdx:DisjunctiveLicenseSet> A License Exception can be expressed in RDF via a <spdx:LicenseException> element. This element has the following unique mandatory (unless specified otherwise) attributes: comment - An rdfs:comment element describing the nature of the exception. seeAlso (optional, one or more)- An rdfs:seeAlso element referencing external sources of information on the exception. example (optional) - Text describing examples of this exception. name - The full human readable name of the item. licenseExceptionId - The identifier of an exception in the SPDX License List to which the exception applies. licenseExceptionText - Full text of the license exception. <rdf:Description rdf:about =\"http://example.org#SPDXRef-ButIdDontWantToException\"> <rdfs:comment>This exception may be invalid in some jurisdictions.</rdfs:comment> <rdfs:seeAlso>http://dilbert.com/strip/1997-01-15</rdfs:seeAlso> <spdx:example>So this one time, I had a license exception \u2026</spdx:example> <spdx:licenseExceptionText> A user of this software may decline to follow any subset of the terms of this license upon finding any or all such terms unfavorable. </spdx:licenseExceptionText> <spdx:name>&quot;But I Don&apos;t Want To&quot; Exception</spdx:name> <spdx:licenseExceptionId>SPDXRef-ButIdDontWantToException</spdx:licenseExceptionId> <rdf:type rdf:resource =\"http://spdx.org/rdf/terms#LicenseException\"/> </rdf:Description>","title":"Annex D: SPDX License Expressions"},{"location":"SPDX-license-expressions/#annex-d-spdx-license-expressions-normative","text":"","title":"Annex D SPDX license expressions (Normative)"},{"location":"SPDX-license-expressions/#d1-overview","text":"Often a single license can be used to represent the licensing terms of a source code or binary file, but there are situations where a single license identifier is not sufficient. A common example is when software is offered under a choice of one or more licenses (e.g., GPL-2.0-only OR BSD-3-Clause). Another example is when a set of licenses is needed to represent a binary program constructed by compiling and linking two (or more) different source files each governed by different licenses (e.g., LGPL-2.1-only AND BSD-3-Clause). SPDX License Expressions provide a way for one to construct expressions that more accurately represent the licensing terms typically found in open source software source code. A license expression could be a single license identifier found on the SPDX License List; a user defined license reference denoted by the LicenseRef- [idString] ; a license identifier combined with an SPDX exception; or some combination of license identifiers, license references and exceptions constructed using a small set of defined operators (e.g., AND , OR , WITH and + ). We provide the definition of what constitutes a valid an SPDX License Expression in this section. The exact syntax of license expressions is described below in ABNF . idstring = 1*(ALPHA / DIGIT / \"-\" / \".\" ) license-id = <short form license identifier in Annex A.1> license-exception-id = <short form license exception identifier in Annex A.2> license-ref = [\"DocumentRef-\"(idstring)\":\"]\"LicenseRef-\"(idstring) simple-expression = license-id / license-id\"+\" / license-ref compound-expression = (simple-expression / simple-expression \"WITH\" license-exception-id / compound-expression \"AND\" compound-expression / compound-expression \"OR\" compound-expression / \"(\" compound-expression \")\" ) license-expression = (simple-expression / compound-expression) In the following sections we describe in more detail <license-expression> construct, a licensing expression string that enables a more accurate representation of the licensing terms of modern-day software. A valid <license-expression> string consists of either: (i) a simple license expression, such as a single license identifier; or (ii) a more complex expression constructed by combining smaller valid expressions using Boolean license operators. There MUST NOT be white space between a license-id and any following + . This supports easy parsing and backwards compatibility. There MUST be white space on either side of the operator \"WITH\". There MUST be white space and/or parentheses on either side of the operators AND and OR . In the tag:value format, a license expression MUST be on a single line, and MUST NOT include a line break in the middle of the expression.","title":"D.1 Overview "},{"location":"SPDX-license-expressions/#d2-case-sensitivity","text":"License expression operators ( AND , OR and WITH ) should be matched in a case-sensitive manner. License identifiers (including license exception identifiers) used in SPDX documents or source code files should be matched in a case-insensitive manner. In other words, MIT , Mit and mIt should all be treated as the same identifier and referring to the same license. However, please be aware that it is often important to match with the case of the canonical identifier on the SPDX License List . This is because the canonical identifier's case is used in the URL of the license's or exception's entry on the List, and because the canonical identifier is translated to a URI in RDF documents.","title":"D.2 Case sensitivity "},{"location":"SPDX-license-expressions/#d3-simple-license-expressions","text":"A simple <license-expression> is composed one of the following: An SPDX License List Short Form Identifier. For example: CDDL-1.0 An SPDX License List Short Form Identifier with a unary \"+\" operator suffix to represent the current version of the license or any later version. For example: CDDL-1.0+ An SPDX user defined license reference: [\"DocumentRef-\"1*(idstring)\":\"]\"LicenseRef-\"1*(idstring) Some examples: LicenseRef-23 LicenseRef-MIT-Style-1 DocumentRef-spdx-tool-1.2:LicenseRef-MIT-Style-2","title":"D.3 Simple license expressions "},{"location":"SPDX-license-expressions/#d4-composite-license-expressions","text":"","title":"D.4 Composite license expressions "},{"location":"SPDX-license-expressions/#d41-introduction","text":"More expressive composite license expressions can be constructed using \"OR\", \"AND\", and \"WITH\" operators similar to constructing mathematical expressions using arithmetic operators. For the tag:value format, any license expression that consists of more than one license identifier and/or LicenseRef, may optionally be encapsulated by parentheses: \"( )\". Nested parentheses can also be used to specify an order of precedence which is discussed in more detail in D.4.5 .","title":"D.4.1 Introduction "},{"location":"SPDX-license-expressions/#d42-disjunctive-or-operator","text":"If presented with a choice between two or more licenses, use the disjunctive binary \"OR\" operator to construct a new license expression, where both the left and right operands are valid license expression values. For example, when given a choice between the LGPL-2.1-only or MIT licenses, a valid expression would be: LGPL-2.1-only OR MIT The \"OR\" operator is commutative, meaning that the above expression should be considered equivalent to: MIT OR LGPL-2.1-only An example representing a choice between three different licenses would be: LGPL-2.1-only OR MIT OR BSD-3-Clause","title":"D.4.2 Disjunctive \"OR\" operator "},{"location":"SPDX-license-expressions/#d43-conjunctive-and-operator","text":"If required to simultaneously comply with two or more licenses, use the conjunctive binary \"AND\" operator to construct a new license expression, where both the left and right operands are a valid license expression values. For example, when one is required to comply with both the LGPL-2.1-only or MIT licenses, a valid expression would be: LGPL-2.1-only AND MIT The \"AND\" operator is commutative, meaning that the above expression should be considered equivalent to: MIT AND LGPL-2.1-only An example where all three different licenses apply would be: LGPL-2.1-only AND MIT AND BSD-2-Clause","title":"D.4.3 Conjunctive \"AND\" operator "},{"location":"SPDX-license-expressions/#d44-exception-with-operator","text":"Sometimes a set of license terms apply except under special circumstances. In this case, use the binary \"WITH\" operator to construct a new license expression to represent the special exception situation. A valid <license-expression> is where the left operand is a <simple-expression> value and the right operand is a <license-exception-id> that represents the special exception terms. For example, when the Bison exception is to be applied to GPL-2.0-or-later, the expression would be: GPL-2.0-or-later WITH Bison-exception-2.2 The current set of valid exceptions can be found in Annex A.2 . For the most up to date set of exceptions please see spdx.org/licenses . If the applicable exception is not found on the SPDX License Exception List, then use a single <license-ref> to represent the entire license terms (including the exception).","title":"D.4.4 Exception \"WITH\" operator "},{"location":"SPDX-license-expressions/#d45-order-of-precedence-and-parentheses","text":"The order of application of the operators in an expression matters (similar to mathematical operators). The default operator order of precedence of a <license-expression> a is: + WITH AND OR where a lower order operator is applied before a higher order operator. For example, the following expression: LGPL-2.1-only OR BSD-3-Clause AND MIT represents a license choice between either LGPL-2.1-only and the expression BSD-3-Clause AND MIT because the AND operator takes precedence over (is applied before) the OR operator. When required to express an order of precedence that is different from the default order a <license-expression> can be encapsulated in pairs of parentheses: ( ), to indicate that the operators found inside the parentheses takes precedence over operators outside. This is also similar to the use of parentheses in an algebraic expression e.g., (5+7)/2. For instance, the following expression: MIT AND (LGPL-2.1-or-later OR BSD-3-Clause) states the OR operator should be applied before the AND operator. That is, one should first select between the LGPL-2.1-or-later or the BSD-3-Clause license before applying the MIT license.","title":"D.4.5 Order of precedence and parentheses "},{"location":"SPDX-license-expressions/#d46-license-expressions-in-rdf","text":"A conjunctive license can be expressed in RDF via a <spdx:ConjunctiveLicenseSet> element, with an spdx:member property for each element in the conjunctive license. Two or more members are required. <spdx:ConjunctiveLicenseSet> <spdx:member rdf:resource=\"http://spdx.org/licenses/GPL-2.0-only\"/> <spdx:ExtractedLicensingInfo rdf:about =\"http://example.org#LicenseRef-EternalSurrender\"> <spdx:extractedText> In exchange for using this software, you agree to give its author all your worldly possessions. You will not hold the author liable for all the damage this software will inevitably cause not only to your person and property, but to the entire fabric of the cosmos. </spdx:extractedText> <spdx:licenseId>LicenseRef-EternalSurrender</spdx:licenseId> </spdx:ExtractedLicensingInfo> </spdx:ConjunctiveLicenseSet> A disjunctive license can be expressed in RDF via a <spdx:DisjunctiveLicenseSet> element, with an spdx:member property for each element in the disjunctive license. Two or more members are required. <spdx:DisjunctiveLicenseSet> <spdx:member rdf:resource=\"http://spdx.org/licenses/GPL-2.0-only\"/> <spdx:member> <spdx:ExtractedLicensingInfo rdf:about =\"http://example.org#LicenseRef-EternalSurrender\"> <spdx:extractedText> In exchange for using this software, you agree to give its author all your worldly possessions. You will not hold the author liable for all the damage this software will inevitably cause not only to your person and property, but to the entire fabric of the cosmos. </spdx:extractedText> <spdx:licenseId>LicenseRef-EternalSurrender</spdx:licenseId> </spdx:ExtractedLicensingInfo> </spdx:member> </spdx:DisjunctiveLicenseSet> A License Exception can be expressed in RDF via a <spdx:LicenseException> element. This element has the following unique mandatory (unless specified otherwise) attributes: comment - An rdfs:comment element describing the nature of the exception. seeAlso (optional, one or more)- An rdfs:seeAlso element referencing external sources of information on the exception. example (optional) - Text describing examples of this exception. name - The full human readable name of the item. licenseExceptionId - The identifier of an exception in the SPDX License List to which the exception applies. licenseExceptionText - Full text of the license exception. <rdf:Description rdf:about =\"http://example.org#SPDXRef-ButIdDontWantToException\"> <rdfs:comment>This exception may be invalid in some jurisdictions.</rdfs:comment> <rdfs:seeAlso>http://dilbert.com/strip/1997-01-15</rdfs:seeAlso> <spdx:example>So this one time, I had a license exception \u2026</spdx:example> <spdx:licenseExceptionText> A user of this software may decline to follow any subset of the terms of this license upon finding any or all such terms unfavorable. </spdx:licenseExceptionText> <spdx:name>&quot;But I Don&apos;t Want To&quot; Exception</spdx:name> <spdx:licenseExceptionId>SPDXRef-ButIdDontWantToException</spdx:licenseExceptionId> <rdf:type rdf:resource =\"http://spdx.org/rdf/terms#LicenseException\"/> </rdf:Description>","title":"D.4.6 License expressions in RDF "},{"location":"SPDX-license-list/","text":"Annex A SPDX license List (Informative) The SPDX License List is an integral part of the SPDX Specification. The SPDX License List itself is a list of commonly found licenses and exceptions used in free and open or collaborative software, data, hardware, or documentation. The SPDX License List includes a standardized short identifier, the full name, the license text, and a canonical permanent URL for each license and exception. The purpose of the SPDX License List is to enable efficient and reliable identification of such licenses and exceptions in an SPDX document, in source files or elsewhere. Overview : For general information about the SPDX License List, including principles for inclusion of a license and an explanation of the fields contained on the list. Matching Guidelines : Guidelines for what constitutes a license match to the SPDX License List. For licenses that include markup, the license text on the HTML pages here will display omitable text in blue and replaceable text in red (see Guideline #2 for more information). License Exceptions : The list of commonly found exceptions to open source licenses, which can be used with the License Expression operator, \"WITH\" to create a license with an exception. License List Repository : The HTML pages you see here are generated from the SPDX license-list-XML Repository. The repository contains XML files for all licenses, deprecated licenses, and license exceptions. Request New License : For instructions on how to propose additional licenses or license exceptions be added to the SPDX License List. The following table contains the full names and short identifiers for the SPDX License List, v3.17 which was released 2022-05-08. For the full and most up-to-date version of the SPDX License List as well as other related information, please see http://spdx.org/licenses/ A.1 Licenses with short identifiers The OSI column in Table A.1 refers to Open Source Initiative licenses [see Reference 2]. Table A.1 \u2014 License names and corresponding short identifiers Full Name of License Short Identifier FSF? OSI? BSD Zero Clause License 0BSD Y Attribution Assurance License AAL Y Abstyles License Abstyles Adobe Systems Incorporated Source Code License Agreement Adobe-2006 Adobe Glyph List License Adobe-Glyph Amazon Digital Services License ADSL Academic Free License v1.1 AFL-1.1 Y Y Academic Free License v1.2 AFL-1.2 Y Y Academic Free License v2.0 AFL-2.0 Y Y Academic Free License v2.1 AFL-2.1 Y Y Academic Free License v3.0 AFL-3.0 Y Y Afmparse License Afmparse Affero General Public License v1.0 only AGPL-1.0-only Affero General Public License v1.0 or later AGPL-1.0-or-later GNU Affero General Public License v3.0 only AGPL-3.0-only Y Y GNU Affero General Public License v3.0 or later AGPL-3.0-or-later Y Y Aladdin Free Public License Aladdin AMD's plpa_map.c License AMDPLPA Apple MIT License AML Academy of Motion Picture Arts and Sciences BSD AMPAS ANTLR Software Rights Notice ANTLR-PD ANTLR Software Rights Notice with license fallback ANTLR-PD-fallback Apache License 1.0 Apache-1.0 Y Apache License 1.1 Apache-1.1 Y Y Apache License 2.0 Apache-2.0 Y Y Adobe Postscript AFM License APAFML Adaptive Public License 1.0 APL-1.0 Y App::s2p License App-s2p Apple Public Source License 1.0 APSL-1.0 Y Apple Public Source License 1.1 APSL-1.1 Y Apple Public Source License 1.2 APSL-1.2 Y Apple Public Source License 2.0 APSL-2.0 Y Y Arphic Public License Arphic-1999 Artistic License 1.0 Artistic-1.0 Y Artistic License 1.0 w/clause 8 Artistic-1.0-cl8 Y Artistic License 1.0 (Perl) Artistic-1.0-Perl Y Artistic License 2.0 Artistic-2.0 Y Y Baekmuk License Baekmuk Bahyph License Bahyph Barr License Barr Beerware License Beerware BitStream Vera Font License Bitstream-Vera BitTorrent Open Source License v1.0 BitTorrent-1.0 BitTorrent Open Source License v1.1 BitTorrent-1.1 Y SQLite Blessing blessing Blue Oak Model License 1.0.0 BlueOak-1.0.0 Borceux license Borceux BSD 1-Clause License BSD-1-Clause Y BSD 2-Clause \"Simplified\" License BSD-2-Clause Y Y BSD-2-Clause Plus Patent License BSD-2-Clause-Patent Y BSD 2-Clause with views sentence BSD-2-Clause-Views BSD 3-Clause \"New\" or \"Revised\" License BSD-3-Clause Y Y BSD with attribution BSD-3-Clause-Attribution BSD 3-Clause Clear License BSD-3-Clause-Clear Y Lawrence Berkeley National Labs BSD variant license BSD-3-Clause-LBNL Y BSD 3-Clause Modification BSD-3-Clause-Modification BSD 3-Clause No Military License BSD-3-Clause-No-Military-License BSD 3-Clause No Nuclear License BSD-3-Clause-No-Nuclear-License BSD 3-Clause No Nuclear License 2014 BSD-3-Clause-No-Nuclear-License-2014 BSD 3-Clause No Nuclear Warranty BSD-3-Clause-No-Nuclear-Warranty BSD 3-Clause Open MPI variant BSD-3-Clause-Open-MPI BSD 4-Clause \"Original\" or \"Old\" License BSD-4-Clause Y BSD 4 Clause Shortened BSD-4-Clause-Shortened BSD-4-Clause (University of California-Specific) BSD-4-Clause-UC BSD Protection License BSD-Protection BSD Source Code Attribution BSD-Source-Code Boost Software License 1.0 BSL-1.0 Y Y Business Source License 1.1 BUSL-1.1 bzip2 and libbzip2 License v1.0.6 bzip2-1.0.6 Computational Use of Data Agreement v1.0 C-UDA-1.0 Cryptographic Autonomy License 1.0 CAL-1.0 Y Cryptographic Autonomy License 1.0 (Combined Work Exception) CAL-1.0-Combined-Work-Exception Y Caldera License Caldera Computer Associates Trusted Open Source License 1.1 CATOSL-1.1 Y Creative Commons Attribution 1.0 Generic CC-BY-1.0 Creative Commons Attribution 2.0 Generic CC-BY-2.0 Creative Commons Attribution 2.5 Generic CC-BY-2.5 Creative Commons Attribution 2.5 Australia CC-BY-2.5-AU Creative Commons Attribution 3.0 Unported CC-BY-3.0 Creative Commons Attribution 3.0 Austria CC-BY-3.0-AT Creative Commons Attribution 3.0 Germany CC-BY-3.0-DE Creative Commons Attribution 3.0 Netherlands CC-BY-3.0-NL Creative Commons Attribution 3.0 United States CC-BY-3.0-US Creative Commons Attribution 4.0 International CC-BY-4.0 Y Creative Commons Attribution Non Commercial 1.0 Generic CC-BY-NC-1.0 Creative Commons Attribution Non Commercial 2.0 Generic CC-BY-NC-2.0 Creative Commons Attribution Non Commercial 2.5 Generic CC-BY-NC-2.5 Creative Commons Attribution Non Commercial 3.0 Unported CC-BY-NC-3.0 Creative Commons Attribution Non Commercial 3.0 Germany CC-BY-NC-3.0-DE Creative Commons Attribution Non Commercial 4.0 International CC-BY-NC-4.0 Creative Commons Attribution Non Commercial No Derivatives 1.0 Generic CC-BY-NC-ND-1.0 Creative Commons Attribution Non Commercial No Derivatives 2.0 Generic CC-BY-NC-ND-2.0 Creative Commons Attribution Non Commercial No Derivatives 2.5 Generic CC-BY-NC-ND-2.5 Creative Commons Attribution Non Commercial No Derivatives 3.0 Unported CC-BY-NC-ND-3.0 Creative Commons Attribution Non Commercial No Derivatives 3.0 Germany CC-BY-NC-ND-3.0-DE Creative Commons Attribution Non Commercial No Derivatives 3.0 IGO CC-BY-NC-ND-3.0-IGO Creative Commons Attribution Non Commercial No Derivatives 4.0 International CC-BY-NC-ND-4.0 Creative Commons Attribution Non Commercial Share Alike 1.0 Generic CC-BY-NC-SA-1.0 Creative Commons Attribution Non Commercial Share Alike 2.0 Generic CC-BY-NC-SA-2.0 Creative Commons Attribution-NonCommercial-ShareAlike 2.0 France CC-BY-NC-SA-2.0-FR Creative Commons Attribution Non Commercial Share Alike 2.0 England and Wales CC-BY-NC-SA-2.0-UK Creative Commons Attribution Non Commercial Share Alike 2.5 Generic CC-BY-NC-SA-2.5 Creative Commons Attribution Non Commercial Share Alike 3.0 Unported CC-BY-NC-SA-3.0 Creative Commons Attribution Non Commercial Share Alike 3.0 Germany CC-BY-NC-SA-3.0-DE Creative Commons Attribution Non Commercial Share Alike 3.0 IGO CC-BY-NC-SA-3.0-IGO Creative Commons Attribution Non Commercial Share Alike 4.0 International CC-BY-NC-SA-4.0 Creative Commons Attribution No Derivatives 1.0 Generic CC-BY-ND-1.0 Creative Commons Attribution No Derivatives 2.0 Generic CC-BY-ND-2.0 Creative Commons Attribution No Derivatives 2.5 Generic CC-BY-ND-2.5 Creative Commons Attribution No Derivatives 3.0 Unported CC-BY-ND-3.0 Creative Commons Attribution No Derivatives 3.0 Germany CC-BY-ND-3.0-DE Creative Commons Attribution No Derivatives 4.0 International CC-BY-ND-4.0 Creative Commons Attribution Share Alike 1.0 Generic CC-BY-SA-1.0 Creative Commons Attribution Share Alike 2.0 Generic CC-BY-SA-2.0 Creative Commons Attribution Share Alike 2.0 England and Wales CC-BY-SA-2.0-UK Creative Commons Attribution Share Alike 2.1 Japan CC-BY-SA-2.1-JP Creative Commons Attribution Share Alike 2.5 Generic CC-BY-SA-2.5 Creative Commons Attribution Share Alike 3.0 Unported CC-BY-SA-3.0 Creative Commons Attribution Share Alike 3.0 Austria CC-BY-SA-3.0-AT Creative Commons Attribution Share Alike 3.0 Germany CC-BY-SA-3.0-DE Creative Commons Attribution Share Alike 4.0 International CC-BY-SA-4.0 Y Creative Commons Public Domain Dedication and Certification CC-PDDC Creative Commons Zero v1.0 Universal CC0-1.0 Y Common Development and Distribution License 1.0 CDDL-1.0 Y Y Common Development and Distribution License 1.1 CDDL-1.1 Common Documentation License 1.0 CDL-1.0 Community Data License Agreement Permissive 1.0 CDLA-Permissive-1.0 Community Data License Agreement Permissive 2.0 CDLA-Permissive-2.0 Community Data License Agreement Sharing 1.0 CDLA-Sharing-1.0 CeCILL Free Software License Agreement v1.0 CECILL-1.0 CeCILL Free Software License Agreement v1.1 CECILL-1.1 CeCILL Free Software License Agreement v2.0 CECILL-2.0 Y CeCILL Free Software License Agreement v2.1 CECILL-2.1 Y CeCILL-B Free Software License Agreement CECILL-B Y CeCILL-C Free Software License Agreement CECILL-C Y CERN Open Hardware Licence v1.1 CERN-OHL-1.1 CERN Open Hardware Licence v1.2 CERN-OHL-1.2 CERN Open Hardware Licence Version 2 - Permissive CERN-OHL-P-2.0 Y CERN Open Hardware Licence Version 2 - Strongly Reciprocal CERN-OHL-S-2.0 Y CERN Open Hardware Licence Version 2 - Weakly Reciprocal CERN-OHL-W-2.0 Y Clarified Artistic License ClArtistic Y CNRI Jython License CNRI-Jython CNRI Python License CNRI-Python Y CNRI Python Open Source GPL Compatible License Agreement CNRI-Python-GPL-Compatible Copyfree Open Innovation License COIL-1.0 Community Specification License 1.0 Community-Spec-1.0 Condor Public License v1.1 Condor-1.1 Y copyleft-next 0.3.0 copyleft-next-0.3.0 copyleft-next 0.3.1 copyleft-next-0.3.1 Common Public Attribution License 1.0 CPAL-1.0 Y Y Common Public License 1.0 CPL-1.0 Y Y Code Project Open License 1.02 CPOL-1.02 Crossword License Crossword CrystalStacker License CrystalStacker CUA Office Public License v1.0 CUA-OPL-1.0 Y Cube License Cube curl License curl Deutsche Freie Software Lizenz D-FSL-1.0 diffmark license diffmark Data licence Germany \u2013 attribution \u2013 version 2.0 DL-DE-BY-2.0 DOC License DOC Dotseqn License Dotseqn Detection Rule License 1.0 DRL-1.0 DSDP License DSDP dvipdfm License dvipdfm Educational Community License v1.0 ECL-1.0 Y Educational Community License v2.0 ECL-2.0 Y Y Eiffel Forum License v1.0 EFL-1.0 Y Eiffel Forum License v2.0 EFL-2.0 Y Y eGenix.com Public License 1.1.0 eGenix Elastic License 2.0 Elastic-2.0 Entessa Public License v1.0 Entessa Y EPICS Open License EPICS Eclipse Public License 1.0 EPL-1.0 Y Y Eclipse Public License 2.0 EPL-2.0 Y Y Erlang Public License v1.1 ErlPL-1.1 Etalab Open License 2.0 etalab-2.0 EU DataGrid Software License EUDatagrid Y Y European Union Public License 1.0 EUPL-1.0 European Union Public License 1.1 EUPL-1.1 Y Y European Union Public License 1.2 EUPL-1.2 Y Y Eurosym License Eurosym Fair License Fair Y Fraunhofer FDK AAC Codec Library FDK-AAC Frameworx Open License 1.0 Frameworx-1.0 Y FreeBSD Documentation License FreeBSD-DOC FreeImage Public License v1.0 FreeImage FSF All Permissive License FSFAP Y FSF Unlimited License FSFUL FSF Unlimited License (with License Retention) FSFULLR Freetype Project License FTL Y GD License GD GNU Free Documentation License v1.1 only - invariants GFDL-1.1-invariants-only GNU Free Documentation License v1.1 or later - invariants GFDL-1.1-invariants-or-later GNU Free Documentation License v1.1 only - no invariants GFDL-1.1-no-invariants-only GNU Free Documentation License v1.1 or later - no invariants GFDL-1.1-no-invariants-or-later GNU Free Documentation License v1.1 only GFDL-1.1-only Y GNU Free Documentation License v1.1 or later GFDL-1.1-or-later Y GNU Free Documentation License v1.2 only - invariants GFDL-1.2-invariants-only GNU Free Documentation License v1.2 or later - invariants GFDL-1.2-invariants-or-later GNU Free Documentation License v1.2 only - no invariants GFDL-1.2-no-invariants-only GNU Free Documentation License v1.2 or later - no invariants GFDL-1.2-no-invariants-or-later GNU Free Documentation License v1.2 only GFDL-1.2-only Y GNU Free Documentation License v1.2 or later GFDL-1.2-or-later Y GNU Free Documentation License v1.3 only - invariants GFDL-1.3-invariants-only GNU Free Documentation License v1.3 or later - invariants GFDL-1.3-invariants-or-later GNU Free Documentation License v1.3 only - no invariants GFDL-1.3-no-invariants-only GNU Free Documentation License v1.3 or later - no invariants GFDL-1.3-no-invariants-or-later GNU Free Documentation License v1.3 only GFDL-1.3-only Y GNU Free Documentation License v1.3 or later GFDL-1.3-or-later Y Giftware License Giftware GL2PS License GL2PS 3dfx Glide License Glide Glulxe License Glulxe Good Luck With That Public License GLWTPL gnuplot License gnuplot Y GNU General Public License v1.0 only GPL-1.0-only GNU General Public License v1.0 or later GPL-1.0-or-later GNU General Public License v2.0 only GPL-2.0-only Y Y GNU General Public License v2.0 or later GPL-2.0-or-later Y Y GNU General Public License v3.0 only GPL-3.0-only Y Y GNU General Public License v3.0 or later GPL-3.0-or-later Y Y gSOAP Public License v1.3b gSOAP-1.3b Haskell Language Report License HaskellReport Hippocratic License 2.1 Hippocratic-2.1 Historical Permission Notice and Disclaimer HPND Y Y Historical Permission Notice and Disclaimer - sell variant HPND-sell-variant HTML Tidy License HTMLTIDY IBM PowerPC Initialization and Boot Software IBM-pibs ICU License ICU Independent JPEG Group License IJG Y ImageMagick License ImageMagick iMatix Standard Function Library Agreement iMatix Y Imlib2 License Imlib2 Y Info-ZIP License Info-ZIP Intel Open Source License Intel Y Y Intel ACPI Software License Agreement Intel-ACPI Interbase Public License v1.0 Interbase-1.0 IPA Font License IPA Y Y IBM Public License v1.0 IPL-1.0 Y Y ISC License ISC Y Y Jam License Jam Y JasPer License JasPer-2.0 Japan Network Information Center License JPNIC JSON License JSON KiCad Libraries Exception KiCad-libraries-exception Licence Art Libre 1.2 LAL-1.2 Licence Art Libre 1.3 LAL-1.3 Latex2e License Latex2e Leptonica License Leptonica GNU Library General Public License v2 only LGPL-2.0-only Y GNU Library General Public License v2 or later LGPL-2.0-or-later Y GNU Lesser General Public License v2.1 only LGPL-2.1-only Y Y GNU Lesser General Public License v2.1 or later LGPL-2.1-or-later Y Y GNU Lesser General Public License v3.0 only LGPL-3.0-only Y Y GNU Lesser General Public License v3.0 or later LGPL-3.0-or-later Y Y Lesser General Public License For Linguistic Resources LGPLLR libpng License Libpng PNG Reference Library version 2 libpng-2.0 libselinux public domain notice libselinux-1.0 libtiff License libtiff Licence Libre du Qu\u00e9bec \u2013 Permissive version 1.1 LiLiQ-P-1.1 Y Licence Libre du Qu\u00e9bec \u2013 R\u00e9ciprocit\u00e9 version 1.1 LiLiQ-R-1.1 Y Licence Libre du Qu\u00e9bec \u2013 R\u00e9ciprocit\u00e9 forte version 1.1 LiLiQ-Rplus-1.1 Y Linux man-pages Copyleft Linux-man-pages-copyleft Linux Kernel Variant of OpenIB.org license Linux-OpenIB Lucent Public License Version 1.0 LPL-1.0 Y Lucent Public License v1.02 LPL-1.02 Y Y LaTeX Project Public License v1.0 LPPL-1.0 LaTeX Project Public License v1.1 LPPL-1.1 LaTeX Project Public License v1.2 LPPL-1.2 Y LaTeX Project Public License v1.3a LPPL-1.3a Y LaTeX Project Public License v1.3c LPPL-1.3c Y MakeIndex License MakeIndex The MirOS Licence MirOS Y MIT License MIT Y Y MIT No Attribution MIT-0 Y Enlightenment License (e16) MIT-advertising CMU License MIT-CMU enna License MIT-enna feh License MIT-feh MIT License Modern Variant MIT-Modern-Variant Y MIT Open Group variant MIT-open-group MIT +no-false-attribs license MITNFA Motosoto License Motosoto Y mpich2 License mpich2 Mozilla Public License 1.0 MPL-1.0 Y Mozilla Public License 1.1 MPL-1.1 Y Y Mozilla Public License 2.0 MPL-2.0 Y Y Mozilla Public License 2.0 (no copyleft exception) MPL-2.0-no-copyleft-exception Y mplus Font License mplus Microsoft Public License MS-PL Y Y Microsoft Reciprocal License MS-RL Y Y Matrix Template Library License MTLL Mulan Permissive Software License, Version 1 MulanPSL-1.0 Mulan Permissive Software License, Version 2 MulanPSL-2.0 Y Multics License Multics Y Mup License Mup Nara Institute of Science and Technology License (2003) NAIST-2003 NASA Open Source Agreement 1.3 NASA-1.3 Y Naumen Public License Naumen Y Net Boolean Public License v1 NBPL-1.0 Non-Commercial Government Licence NCGL-UK-2.0 University of Illinois/NCSA Open Source License NCSA Y Y Net-SNMP License Net-SNMP NetCDF license NetCDF Newsletr License Newsletr Nethack General Public License NGPL Y NIST Public Domain Notice NIST-PD NIST Public Domain Notice with license fallback NIST-PD-fallback Norwegian Licence for Open Government Data (NLOD) 1.0 NLOD-1.0 Norwegian Licence for Open Government Data (NLOD) 2.0 NLOD-2.0 No Limit Public License NLPL Nokia Open Source License Nokia Y Y Netizen Open Source License NOSL Y Noweb License Noweb Netscape Public License v1.0 NPL-1.0 Y Netscape Public License v1.1 NPL-1.1 Y Non-Profit Open Software License 3.0 NPOSL-3.0 Y NRL License NRL NTP License NTP Y NTP No Attribution NTP-0 Open Use of Data Agreement v1.0 O-UDA-1.0 Open CASCADE Technology Public License OCCT-PL OCLC Research Public License 2.0 OCLC-2.0 Y Open Data Commons Open Database License v1.0 ODbL-1.0 Y Open Data Commons Attribution License v1.0 ODC-By-1.0 SIL Open Font License 1.0 OFL-1.0 Y SIL Open Font License 1.0 with no Reserved Font Name OFL-1.0-no-RFN SIL Open Font License 1.0 with Reserved Font Name OFL-1.0-RFN SIL Open Font License 1.1 OFL-1.1 Y Y SIL Open Font License 1.1 with no Reserved Font Name OFL-1.1-no-RFN Y SIL Open Font License 1.1 with Reserved Font Name OFL-1.1-RFN Y OGC Software License, Version 1.0 OGC-1.0 Taiwan Open Government Data License, version 1.0 OGDL-Taiwan-1.0 Open Government Licence - Canada OGL-Canada-2.0 Open Government Licence v1.0 OGL-UK-1.0 Open Government Licence v2.0 OGL-UK-2.0 Open Government Licence v3.0 OGL-UK-3.0 Open Group Test Suite License OGTSL Y Open LDAP Public License v1.1 OLDAP-1.1 Open LDAP Public License v1.2 OLDAP-1.2 Open LDAP Public License v1.3 OLDAP-1.3 Open LDAP Public License v1.4 OLDAP-1.4 Open LDAP Public License v2.0 (or possibly 2.0A and 2.0B) OLDAP-2.0 Open LDAP Public License v2.0.1 OLDAP-2.0.1 Open LDAP Public License v2.1 OLDAP-2.1 Open LDAP Public License v2.2 OLDAP-2.2 Open LDAP Public License v2.2.1 OLDAP-2.2.1 Open LDAP Public License 2.2.2 OLDAP-2.2.2 Open LDAP Public License v2.3 OLDAP-2.3 Y Open LDAP Public License v2.4 OLDAP-2.4 Open LDAP Public License v2.5 OLDAP-2.5 Open LDAP Public License v2.6 OLDAP-2.6 Open LDAP Public License v2.7 OLDAP-2.7 Y Open LDAP Public License v2.8 OLDAP-2.8 Y Open Market License OML OpenSSL License OpenSSL Y Open Public License v1.0 OPL-1.0 Open Publication License v1.0 OPUBL-1.0 OSET Public License version 2.1 OSET-PL-2.1 Y Open Software License 1.0 OSL-1.0 Y Y Open Software License 1.1 OSL-1.1 Y Open Software License 2.0 OSL-2.0 Y Y Open Software License 2.1 OSL-2.1 Y Y Open Software License 3.0 OSL-3.0 Y Y The Parity Public License 6.0.0 Parity-6.0.0 The Parity Public License 7.0.0 Parity-7.0.0 Open Data Commons Public Domain Dedication & License 1.0 PDDL-1.0 PHP License v3.0 PHP-3.0 Y PHP License v3.01 PHP-3.01 Y Y Plexus Classworlds License Plexus PolyForm Noncommercial License 1.0.0 PolyForm-Noncommercial-1.0.0 PolyForm Small Business License 1.0.0 PolyForm-Small-Business-1.0.0 PostgreSQL License PostgreSQL Y Python Software Foundation License 2.0 PSF-2.0 psfrag License psfrag psutils License psutils Python License 2.0 Python-2.0 Y Y Qhull License Qhull Q Public License 1.0 QPL-1.0 Y Y Rdisc License Rdisc Red Hat eCos Public License v1.1 RHeCos-1.1 Reciprocal Public License 1.1 RPL-1.1 Y Reciprocal Public License 1.5 RPL-1.5 Y RealNetworks Public Source License v1.0 RPSL-1.0 Y Y RSA Message-Digest License RSA-MD Ricoh Source Code Public License RSCPL Y Ruby License Ruby Y Sax Public Domain Notice SAX-PD Saxpath License Saxpath SCEA Shared Source License SCEA Scheme Language Report License SchemeReport Sendmail License Sendmail Sendmail License 8.23 Sendmail-8.23 SGI Free Software License B v1.0 SGI-B-1.0 SGI Free Software License B v1.1 SGI-B-1.1 SGI Free Software License B v2.0 SGI-B-2.0 Y Solderpad Hardware License v0.5 SHL-0.5 Solderpad Hardware License, Version 0.51 SHL-0.51 Simple Public License 2.0 SimPL-2.0 Y Sun Industry Standards Source License v1.1 SISSL Y Y Sun Industry Standards Source License v1.2 SISSL-1.2 Sleepycat License Sleepycat Y Y Standard ML of New Jersey License SMLNJ Y Secure Messaging Protocol Public License SMPPL SNIA Public License 1.1 SNIA Spencer License 86 Spencer-86 Spencer License 94 Spencer-94 Spencer License 99 Spencer-99 Sun Public License v1.0 SPL-1.0 Y Y SSH OpenSSH license SSH-OpenSSH SSH short notice SSH-short Server Side Public License, v 1 SSPL-1.0 SugarCRM Public License v1.1.3 SugarCRM-1.1.3 Scheme Widget Library (SWL) Software License Agreement SWL TAPR Open Hardware License v1.0 TAPR-OHL-1.0 TCL/TK License TCL TCP Wrappers License TCP-wrappers TMate Open Source License TMate TORQUE v2.5+ Software License v1.1 TORQUE-1.1 Trusster Open Source License TOSL Technische Universitaet Berlin License 1.0 TU-Berlin-1.0 Technische Universitaet Berlin License 2.0 TU-Berlin-2.0 Upstream Compatibility License v1.0 UCL-1.0 Y Unicode License Agreement - Data Files and Software (2015) Unicode-DFS-2015 Unicode License Agreement - Data Files and Software (2016) Unicode-DFS-2016 Y Unicode Terms of Use Unicode-TOU The Unlicense Unlicense Y Y Universal Permissive License v1.0 UPL-1.0 Y Y Vim License Vim Y VOSTROM Public License for Open Source VOSTROM Vovida Software License v1.0 VSL-1.0 Y W3C Software Notice and License (2002-12-31) W3C Y Y W3C Software Notice and License (1998-07-20) W3C-19980720 W3C Software Notice and Document License (2015-05-13) W3C-20150513 Sybase Open Watcom Public License 1.0 Watcom-1.0 Y Wsuipa License Wsuipa Do What The F*ck You Want To Public License WTFPL Y X11 License X11 Y X11 License Distribution Modification Variant X11-distribute-modifications-variant Xerox License Xerox XFree86 License 1.1 XFree86-1.1 Y xinetd License xinetd Y X.Net License Xnet Y XPP License xpp XSkat License XSkat Yahoo! Public License v1.0 YPL-1.0 Yahoo! Public License v1.1 YPL-1.1 Y Zed License Zed Zend License v2.0 Zend-2.0 Y Zimbra Public License v1.3 Zimbra-1.3 Y Zimbra Public License v1.4 Zimbra-1.4 zlib License Zlib Y Y zlib/libpng License with Acknowledgement zlib-acknowledgement Zope Public License 1.1 ZPL-1.1 Zope Public License 2.0 ZPL-2.0 Y Y Zope Public License 2.1 ZPL-2.1 Y Y A.2 Exceptions list The SPDX License List includes a list of exceptions. These exceptions grant an exception to a license condition or additional permissions beyond those granted in a license; they are not stand-alone licenses. Exceptions are added to a license using the License Expression operator, \"WITH\". Table A.2 \u2014 Exception names and license links Full Name of Exception SPDX License Exception 389 Directory Server Exception 389-exception Autoconf exception 2.0 Autoconf-exception-2.0 Autoconf exception 3.0 Autoconf-exception-3.0 Bison exception 2.2 Bison-exception-2.2 Bootloader Distribution Exception Bootloader-exception Classpath exception 2.0 Classpath-exception-2.0 CLISP exception 2.0 CLISP-exception-2.0 DigiRule FOSS License Exception DigiRule-FOSS-exception eCos exception 2.0 eCos-exception-2.0 Fawkes Runtime Exception Fawkes-Runtime-exception FLTK exception FLTK-exception Font exception 2.0 Font-exception-2.0 FreeRTOS Exception 2.0 freertos-exception-2.0 GCC Runtime Library exception 2.0 GCC-exception-2.0 GCC Runtime Library exception 3.1 GCC-exception-3.1 GNU JavaMail exception gnu-javamail-exception GPL-3.0 Linking Exception GPL-3.0-linking-exception GPL-3.0 Linking Exception (with Corresponding Source) GPL-3.0-linking-source-exception GPL Cooperation Commitment 1.0 GPL-CC-1.0 i2p GPL+Java Exception i2p-gpl-java-exception LGPL-3.0 Linking Exception LGPL-3.0-linking-exception Libtool Exception Libtool-exception Linux Syscall Note Linux-syscall-note LLVM Exception LLVM-exception LZMA exception LZMA-exception Macros and Inline Functions Exception mif-exception OCaml LGPL Linking Exception OCaml-LGPL-linking-exception Open CASCADE Exception 1.0 OCCT-exception-1.0 OpenJDK Assembly exception 1.0 OpenJDK-assembly-exception-1.0 OpenVPN OpenSSL Exception openvpn-openssl-exception PS/PDF font exception (2017-08-17) PS-or-PDF-font-exception-20170817 Qt GPL exception 1.0 Qt-GPL-exception-1.0 Qt LGPL exception 1.1 Qt-LGPL-exception-1.1 Qwt exception 1.0 Qwt-exception-1.0 Solderpad Hardware License v2.0 SHL-2.0 Solderpad Hardware License v2.1 SHL-2.1 Swift Exception Swift-exception U-Boot exception 2.0 u-boot-exception-2.0 Universal FOSS Exception, Version 1.0 Universal-FOSS-exception-1.0 WxWindows Library Exception 3.1 WxWindows-exception-3.1 A.3 Deprecated licenses SPDX endeavors to never change the SPDX license identifiers. However, sometimes there has been a compelling reason to deprecate a license identifier, such as to accommodate improved SPDX license expressions or when we have found a duplicate license. When a license identifier is \"deprecated\" on the SPDX License List, it effectively means that there is an updated license identifier and the deprecated license identifier, while remaining valid, should no longer be used. The URL to each deprecated license is retained and those license pages are updated to note the deprecation. Table A.3 \u2014 Deprecated license short identifiers Full Name of License Deprecated SDPX Short Identifier Affero General Public License v1.0 AGPL-1.0 GNU Affero General Public License v3.0 AGPL-3.0 BSD 2-Clause FreeBSD License BSD-2-Clause-FreeBSD BSD 2-Clause NetBSD License BSD-2-Clause-NetBSD bzip2 and libbzip2 License v1.0.5 bzip2-1.0.5 eCos license version 2.0 eCos-2.0 GNU Free Documentation License v1.1 GFDL-1.1 GNU Free Documentation License v1.2 GFDL-1.2 GNU Free Documentation License v1.3 GFDL-1.3 GNU General Public License v1.0 only GPL-1.0 GNU General Public License v1.0 or later GPL-1.0+ GNU General Public License v2.0 only GPL-2.0 GNU General Public License v2.0 or later GPL-2.0+ GNU General Public License v2.0 w/Autoconf exception GPL-2.0-with-autoconf-exception GNU General Public License v2.0 w/Bison exception GPL-2.0-with-bison-exception GNU General Public License v2.0 w/Classpath exception GPL-2.0-with-classpath-exception GNU General Public License v2.0 w/Font exception GPL-2.0-with-font-exception GNU General Public License v2.0 w/GCC Runtime Library exception GPL-2.0-with-GCC-exception GNU General Public License v3.0 only GPL-3.0 GNU General Public License v3.0 or later GPL-3.0+ GNU General Public License v3.0 w/Autoconf exception GPL-3.0-with-autoconf-exception GNU General Public License v3.0 w/GCC Runtime Library exception GPL-3.0-with-GCC-exception GNU Library General Public License v2 only LGPL-2.0 GNU Library General Public License v2 or later LGPL-2.0+ GNU Lesser General Public License v2.1 only LGPL-2.1 GNU Library General Public License v2.1 or later LGPL-2.1+ GNU Lesser General Public License v3.0 only LGPL-3.0 GNU Lesser General Public License v3.0 or later LGPL-3.0+ Nunit License Nunit Standard ML of New Jersey License StandardML-NJ wxWindows Library License wxWindows","title":"Annex A: SPDX License List"},{"location":"SPDX-license-list/#annex-a-spdx-license-list-informative","text":"The SPDX License List is an integral part of the SPDX Specification. The SPDX License List itself is a list of commonly found licenses and exceptions used in free and open or collaborative software, data, hardware, or documentation. The SPDX License List includes a standardized short identifier, the full name, the license text, and a canonical permanent URL for each license and exception. The purpose of the SPDX License List is to enable efficient and reliable identification of such licenses and exceptions in an SPDX document, in source files or elsewhere. Overview : For general information about the SPDX License List, including principles for inclusion of a license and an explanation of the fields contained on the list. Matching Guidelines : Guidelines for what constitutes a license match to the SPDX License List. For licenses that include markup, the license text on the HTML pages here will display omitable text in blue and replaceable text in red (see Guideline #2 for more information). License Exceptions : The list of commonly found exceptions to open source licenses, which can be used with the License Expression operator, \"WITH\" to create a license with an exception. License List Repository : The HTML pages you see here are generated from the SPDX license-list-XML Repository. The repository contains XML files for all licenses, deprecated licenses, and license exceptions. Request New License : For instructions on how to propose additional licenses or license exceptions be added to the SPDX License List. The following table contains the full names and short identifiers for the SPDX License List, v3.17 which was released 2022-05-08. For the full and most up-to-date version of the SPDX License List as well as other related information, please see http://spdx.org/licenses/","title":"Annex A SPDX license List (Informative)"},{"location":"SPDX-license-list/#a1-licenses-with-short-identifiers","text":"The OSI column in Table A.1 refers to Open Source Initiative licenses [see Reference 2]. Table A.1 \u2014 License names and corresponding short identifiers Full Name of License Short Identifier FSF? OSI? BSD Zero Clause License 0BSD Y Attribution Assurance License AAL Y Abstyles License Abstyles Adobe Systems Incorporated Source Code License Agreement Adobe-2006 Adobe Glyph List License Adobe-Glyph Amazon Digital Services License ADSL Academic Free License v1.1 AFL-1.1 Y Y Academic Free License v1.2 AFL-1.2 Y Y Academic Free License v2.0 AFL-2.0 Y Y Academic Free License v2.1 AFL-2.1 Y Y Academic Free License v3.0 AFL-3.0 Y Y Afmparse License Afmparse Affero General Public License v1.0 only AGPL-1.0-only Affero General Public License v1.0 or later AGPL-1.0-or-later GNU Affero General Public License v3.0 only AGPL-3.0-only Y Y GNU Affero General Public License v3.0 or later AGPL-3.0-or-later Y Y Aladdin Free Public License Aladdin AMD's plpa_map.c License AMDPLPA Apple MIT License AML Academy of Motion Picture Arts and Sciences BSD AMPAS ANTLR Software Rights Notice ANTLR-PD ANTLR Software Rights Notice with license fallback ANTLR-PD-fallback Apache License 1.0 Apache-1.0 Y Apache License 1.1 Apache-1.1 Y Y Apache License 2.0 Apache-2.0 Y Y Adobe Postscript AFM License APAFML Adaptive Public License 1.0 APL-1.0 Y App::s2p License App-s2p Apple Public Source License 1.0 APSL-1.0 Y Apple Public Source License 1.1 APSL-1.1 Y Apple Public Source License 1.2 APSL-1.2 Y Apple Public Source License 2.0 APSL-2.0 Y Y Arphic Public License Arphic-1999 Artistic License 1.0 Artistic-1.0 Y Artistic License 1.0 w/clause 8 Artistic-1.0-cl8 Y Artistic License 1.0 (Perl) Artistic-1.0-Perl Y Artistic License 2.0 Artistic-2.0 Y Y Baekmuk License Baekmuk Bahyph License Bahyph Barr License Barr Beerware License Beerware BitStream Vera Font License Bitstream-Vera BitTorrent Open Source License v1.0 BitTorrent-1.0 BitTorrent Open Source License v1.1 BitTorrent-1.1 Y SQLite Blessing blessing Blue Oak Model License 1.0.0 BlueOak-1.0.0 Borceux license Borceux BSD 1-Clause License BSD-1-Clause Y BSD 2-Clause \"Simplified\" License BSD-2-Clause Y Y BSD-2-Clause Plus Patent License BSD-2-Clause-Patent Y BSD 2-Clause with views sentence BSD-2-Clause-Views BSD 3-Clause \"New\" or \"Revised\" License BSD-3-Clause Y Y BSD with attribution BSD-3-Clause-Attribution BSD 3-Clause Clear License BSD-3-Clause-Clear Y Lawrence Berkeley National Labs BSD variant license BSD-3-Clause-LBNL Y BSD 3-Clause Modification BSD-3-Clause-Modification BSD 3-Clause No Military License BSD-3-Clause-No-Military-License BSD 3-Clause No Nuclear License BSD-3-Clause-No-Nuclear-License BSD 3-Clause No Nuclear License 2014 BSD-3-Clause-No-Nuclear-License-2014 BSD 3-Clause No Nuclear Warranty BSD-3-Clause-No-Nuclear-Warranty BSD 3-Clause Open MPI variant BSD-3-Clause-Open-MPI BSD 4-Clause \"Original\" or \"Old\" License BSD-4-Clause Y BSD 4 Clause Shortened BSD-4-Clause-Shortened BSD-4-Clause (University of California-Specific) BSD-4-Clause-UC BSD Protection License BSD-Protection BSD Source Code Attribution BSD-Source-Code Boost Software License 1.0 BSL-1.0 Y Y Business Source License 1.1 BUSL-1.1 bzip2 and libbzip2 License v1.0.6 bzip2-1.0.6 Computational Use of Data Agreement v1.0 C-UDA-1.0 Cryptographic Autonomy License 1.0 CAL-1.0 Y Cryptographic Autonomy License 1.0 (Combined Work Exception) CAL-1.0-Combined-Work-Exception Y Caldera License Caldera Computer Associates Trusted Open Source License 1.1 CATOSL-1.1 Y Creative Commons Attribution 1.0 Generic CC-BY-1.0 Creative Commons Attribution 2.0 Generic CC-BY-2.0 Creative Commons Attribution 2.5 Generic CC-BY-2.5 Creative Commons Attribution 2.5 Australia CC-BY-2.5-AU Creative Commons Attribution 3.0 Unported CC-BY-3.0 Creative Commons Attribution 3.0 Austria CC-BY-3.0-AT Creative Commons Attribution 3.0 Germany CC-BY-3.0-DE Creative Commons Attribution 3.0 Netherlands CC-BY-3.0-NL Creative Commons Attribution 3.0 United States CC-BY-3.0-US Creative Commons Attribution 4.0 International CC-BY-4.0 Y Creative Commons Attribution Non Commercial 1.0 Generic CC-BY-NC-1.0 Creative Commons Attribution Non Commercial 2.0 Generic CC-BY-NC-2.0 Creative Commons Attribution Non Commercial 2.5 Generic CC-BY-NC-2.5 Creative Commons Attribution Non Commercial 3.0 Unported CC-BY-NC-3.0 Creative Commons Attribution Non Commercial 3.0 Germany CC-BY-NC-3.0-DE Creative Commons Attribution Non Commercial 4.0 International CC-BY-NC-4.0 Creative Commons Attribution Non Commercial No Derivatives 1.0 Generic CC-BY-NC-ND-1.0 Creative Commons Attribution Non Commercial No Derivatives 2.0 Generic CC-BY-NC-ND-2.0 Creative Commons Attribution Non Commercial No Derivatives 2.5 Generic CC-BY-NC-ND-2.5 Creative Commons Attribution Non Commercial No Derivatives 3.0 Unported CC-BY-NC-ND-3.0 Creative Commons Attribution Non Commercial No Derivatives 3.0 Germany CC-BY-NC-ND-3.0-DE Creative Commons Attribution Non Commercial No Derivatives 3.0 IGO CC-BY-NC-ND-3.0-IGO Creative Commons Attribution Non Commercial No Derivatives 4.0 International CC-BY-NC-ND-4.0 Creative Commons Attribution Non Commercial Share Alike 1.0 Generic CC-BY-NC-SA-1.0 Creative Commons Attribution Non Commercial Share Alike 2.0 Generic CC-BY-NC-SA-2.0 Creative Commons Attribution-NonCommercial-ShareAlike 2.0 France CC-BY-NC-SA-2.0-FR Creative Commons Attribution Non Commercial Share Alike 2.0 England and Wales CC-BY-NC-SA-2.0-UK Creative Commons Attribution Non Commercial Share Alike 2.5 Generic CC-BY-NC-SA-2.5 Creative Commons Attribution Non Commercial Share Alike 3.0 Unported CC-BY-NC-SA-3.0 Creative Commons Attribution Non Commercial Share Alike 3.0 Germany CC-BY-NC-SA-3.0-DE Creative Commons Attribution Non Commercial Share Alike 3.0 IGO CC-BY-NC-SA-3.0-IGO Creative Commons Attribution Non Commercial Share Alike 4.0 International CC-BY-NC-SA-4.0 Creative Commons Attribution No Derivatives 1.0 Generic CC-BY-ND-1.0 Creative Commons Attribution No Derivatives 2.0 Generic CC-BY-ND-2.0 Creative Commons Attribution No Derivatives 2.5 Generic CC-BY-ND-2.5 Creative Commons Attribution No Derivatives 3.0 Unported CC-BY-ND-3.0 Creative Commons Attribution No Derivatives 3.0 Germany CC-BY-ND-3.0-DE Creative Commons Attribution No Derivatives 4.0 International CC-BY-ND-4.0 Creative Commons Attribution Share Alike 1.0 Generic CC-BY-SA-1.0 Creative Commons Attribution Share Alike 2.0 Generic CC-BY-SA-2.0 Creative Commons Attribution Share Alike 2.0 England and Wales CC-BY-SA-2.0-UK Creative Commons Attribution Share Alike 2.1 Japan CC-BY-SA-2.1-JP Creative Commons Attribution Share Alike 2.5 Generic CC-BY-SA-2.5 Creative Commons Attribution Share Alike 3.0 Unported CC-BY-SA-3.0 Creative Commons Attribution Share Alike 3.0 Austria CC-BY-SA-3.0-AT Creative Commons Attribution Share Alike 3.0 Germany CC-BY-SA-3.0-DE Creative Commons Attribution Share Alike 4.0 International CC-BY-SA-4.0 Y Creative Commons Public Domain Dedication and Certification CC-PDDC Creative Commons Zero v1.0 Universal CC0-1.0 Y Common Development and Distribution License 1.0 CDDL-1.0 Y Y Common Development and Distribution License 1.1 CDDL-1.1 Common Documentation License 1.0 CDL-1.0 Community Data License Agreement Permissive 1.0 CDLA-Permissive-1.0 Community Data License Agreement Permissive 2.0 CDLA-Permissive-2.0 Community Data License Agreement Sharing 1.0 CDLA-Sharing-1.0 CeCILL Free Software License Agreement v1.0 CECILL-1.0 CeCILL Free Software License Agreement v1.1 CECILL-1.1 CeCILL Free Software License Agreement v2.0 CECILL-2.0 Y CeCILL Free Software License Agreement v2.1 CECILL-2.1 Y CeCILL-B Free Software License Agreement CECILL-B Y CeCILL-C Free Software License Agreement CECILL-C Y CERN Open Hardware Licence v1.1 CERN-OHL-1.1 CERN Open Hardware Licence v1.2 CERN-OHL-1.2 CERN Open Hardware Licence Version 2 - Permissive CERN-OHL-P-2.0 Y CERN Open Hardware Licence Version 2 - Strongly Reciprocal CERN-OHL-S-2.0 Y CERN Open Hardware Licence Version 2 - Weakly Reciprocal CERN-OHL-W-2.0 Y Clarified Artistic License ClArtistic Y CNRI Jython License CNRI-Jython CNRI Python License CNRI-Python Y CNRI Python Open Source GPL Compatible License Agreement CNRI-Python-GPL-Compatible Copyfree Open Innovation License COIL-1.0 Community Specification License 1.0 Community-Spec-1.0 Condor Public License v1.1 Condor-1.1 Y copyleft-next 0.3.0 copyleft-next-0.3.0 copyleft-next 0.3.1 copyleft-next-0.3.1 Common Public Attribution License 1.0 CPAL-1.0 Y Y Common Public License 1.0 CPL-1.0 Y Y Code Project Open License 1.02 CPOL-1.02 Crossword License Crossword CrystalStacker License CrystalStacker CUA Office Public License v1.0 CUA-OPL-1.0 Y Cube License Cube curl License curl Deutsche Freie Software Lizenz D-FSL-1.0 diffmark license diffmark Data licence Germany \u2013 attribution \u2013 version 2.0 DL-DE-BY-2.0 DOC License DOC Dotseqn License Dotseqn Detection Rule License 1.0 DRL-1.0 DSDP License DSDP dvipdfm License dvipdfm Educational Community License v1.0 ECL-1.0 Y Educational Community License v2.0 ECL-2.0 Y Y Eiffel Forum License v1.0 EFL-1.0 Y Eiffel Forum License v2.0 EFL-2.0 Y Y eGenix.com Public License 1.1.0 eGenix Elastic License 2.0 Elastic-2.0 Entessa Public License v1.0 Entessa Y EPICS Open License EPICS Eclipse Public License 1.0 EPL-1.0 Y Y Eclipse Public License 2.0 EPL-2.0 Y Y Erlang Public License v1.1 ErlPL-1.1 Etalab Open License 2.0 etalab-2.0 EU DataGrid Software License EUDatagrid Y Y European Union Public License 1.0 EUPL-1.0 European Union Public License 1.1 EUPL-1.1 Y Y European Union Public License 1.2 EUPL-1.2 Y Y Eurosym License Eurosym Fair License Fair Y Fraunhofer FDK AAC Codec Library FDK-AAC Frameworx Open License 1.0 Frameworx-1.0 Y FreeBSD Documentation License FreeBSD-DOC FreeImage Public License v1.0 FreeImage FSF All Permissive License FSFAP Y FSF Unlimited License FSFUL FSF Unlimited License (with License Retention) FSFULLR Freetype Project License FTL Y GD License GD GNU Free Documentation License v1.1 only - invariants GFDL-1.1-invariants-only GNU Free Documentation License v1.1 or later - invariants GFDL-1.1-invariants-or-later GNU Free Documentation License v1.1 only - no invariants GFDL-1.1-no-invariants-only GNU Free Documentation License v1.1 or later - no invariants GFDL-1.1-no-invariants-or-later GNU Free Documentation License v1.1 only GFDL-1.1-only Y GNU Free Documentation License v1.1 or later GFDL-1.1-or-later Y GNU Free Documentation License v1.2 only - invariants GFDL-1.2-invariants-only GNU Free Documentation License v1.2 or later - invariants GFDL-1.2-invariants-or-later GNU Free Documentation License v1.2 only - no invariants GFDL-1.2-no-invariants-only GNU Free Documentation License v1.2 or later - no invariants GFDL-1.2-no-invariants-or-later GNU Free Documentation License v1.2 only GFDL-1.2-only Y GNU Free Documentation License v1.2 or later GFDL-1.2-or-later Y GNU Free Documentation License v1.3 only - invariants GFDL-1.3-invariants-only GNU Free Documentation License v1.3 or later - invariants GFDL-1.3-invariants-or-later GNU Free Documentation License v1.3 only - no invariants GFDL-1.3-no-invariants-only GNU Free Documentation License v1.3 or later - no invariants GFDL-1.3-no-invariants-or-later GNU Free Documentation License v1.3 only GFDL-1.3-only Y GNU Free Documentation License v1.3 or later GFDL-1.3-or-later Y Giftware License Giftware GL2PS License GL2PS 3dfx Glide License Glide Glulxe License Glulxe Good Luck With That Public License GLWTPL gnuplot License gnuplot Y GNU General Public License v1.0 only GPL-1.0-only GNU General Public License v1.0 or later GPL-1.0-or-later GNU General Public License v2.0 only GPL-2.0-only Y Y GNU General Public License v2.0 or later GPL-2.0-or-later Y Y GNU General Public License v3.0 only GPL-3.0-only Y Y GNU General Public License v3.0 or later GPL-3.0-or-later Y Y gSOAP Public License v1.3b gSOAP-1.3b Haskell Language Report License HaskellReport Hippocratic License 2.1 Hippocratic-2.1 Historical Permission Notice and Disclaimer HPND Y Y Historical Permission Notice and Disclaimer - sell variant HPND-sell-variant HTML Tidy License HTMLTIDY IBM PowerPC Initialization and Boot Software IBM-pibs ICU License ICU Independent JPEG Group License IJG Y ImageMagick License ImageMagick iMatix Standard Function Library Agreement iMatix Y Imlib2 License Imlib2 Y Info-ZIP License Info-ZIP Intel Open Source License Intel Y Y Intel ACPI Software License Agreement Intel-ACPI Interbase Public License v1.0 Interbase-1.0 IPA Font License IPA Y Y IBM Public License v1.0 IPL-1.0 Y Y ISC License ISC Y Y Jam License Jam Y JasPer License JasPer-2.0 Japan Network Information Center License JPNIC JSON License JSON KiCad Libraries Exception KiCad-libraries-exception Licence Art Libre 1.2 LAL-1.2 Licence Art Libre 1.3 LAL-1.3 Latex2e License Latex2e Leptonica License Leptonica GNU Library General Public License v2 only LGPL-2.0-only Y GNU Library General Public License v2 or later LGPL-2.0-or-later Y GNU Lesser General Public License v2.1 only LGPL-2.1-only Y Y GNU Lesser General Public License v2.1 or later LGPL-2.1-or-later Y Y GNU Lesser General Public License v3.0 only LGPL-3.0-only Y Y GNU Lesser General Public License v3.0 or later LGPL-3.0-or-later Y Y Lesser General Public License For Linguistic Resources LGPLLR libpng License Libpng PNG Reference Library version 2 libpng-2.0 libselinux public domain notice libselinux-1.0 libtiff License libtiff Licence Libre du Qu\u00e9bec \u2013 Permissive version 1.1 LiLiQ-P-1.1 Y Licence Libre du Qu\u00e9bec \u2013 R\u00e9ciprocit\u00e9 version 1.1 LiLiQ-R-1.1 Y Licence Libre du Qu\u00e9bec \u2013 R\u00e9ciprocit\u00e9 forte version 1.1 LiLiQ-Rplus-1.1 Y Linux man-pages Copyleft Linux-man-pages-copyleft Linux Kernel Variant of OpenIB.org license Linux-OpenIB Lucent Public License Version 1.0 LPL-1.0 Y Lucent Public License v1.02 LPL-1.02 Y Y LaTeX Project Public License v1.0 LPPL-1.0 LaTeX Project Public License v1.1 LPPL-1.1 LaTeX Project Public License v1.2 LPPL-1.2 Y LaTeX Project Public License v1.3a LPPL-1.3a Y LaTeX Project Public License v1.3c LPPL-1.3c Y MakeIndex License MakeIndex The MirOS Licence MirOS Y MIT License MIT Y Y MIT No Attribution MIT-0 Y Enlightenment License (e16) MIT-advertising CMU License MIT-CMU enna License MIT-enna feh License MIT-feh MIT License Modern Variant MIT-Modern-Variant Y MIT Open Group variant MIT-open-group MIT +no-false-attribs license MITNFA Motosoto License Motosoto Y mpich2 License mpich2 Mozilla Public License 1.0 MPL-1.0 Y Mozilla Public License 1.1 MPL-1.1 Y Y Mozilla Public License 2.0 MPL-2.0 Y Y Mozilla Public License 2.0 (no copyleft exception) MPL-2.0-no-copyleft-exception Y mplus Font License mplus Microsoft Public License MS-PL Y Y Microsoft Reciprocal License MS-RL Y Y Matrix Template Library License MTLL Mulan Permissive Software License, Version 1 MulanPSL-1.0 Mulan Permissive Software License, Version 2 MulanPSL-2.0 Y Multics License Multics Y Mup License Mup Nara Institute of Science and Technology License (2003) NAIST-2003 NASA Open Source Agreement 1.3 NASA-1.3 Y Naumen Public License Naumen Y Net Boolean Public License v1 NBPL-1.0 Non-Commercial Government Licence NCGL-UK-2.0 University of Illinois/NCSA Open Source License NCSA Y Y Net-SNMP License Net-SNMP NetCDF license NetCDF Newsletr License Newsletr Nethack General Public License NGPL Y NIST Public Domain Notice NIST-PD NIST Public Domain Notice with license fallback NIST-PD-fallback Norwegian Licence for Open Government Data (NLOD) 1.0 NLOD-1.0 Norwegian Licence for Open Government Data (NLOD) 2.0 NLOD-2.0 No Limit Public License NLPL Nokia Open Source License Nokia Y Y Netizen Open Source License NOSL Y Noweb License Noweb Netscape Public License v1.0 NPL-1.0 Y Netscape Public License v1.1 NPL-1.1 Y Non-Profit Open Software License 3.0 NPOSL-3.0 Y NRL License NRL NTP License NTP Y NTP No Attribution NTP-0 Open Use of Data Agreement v1.0 O-UDA-1.0 Open CASCADE Technology Public License OCCT-PL OCLC Research Public License 2.0 OCLC-2.0 Y Open Data Commons Open Database License v1.0 ODbL-1.0 Y Open Data Commons Attribution License v1.0 ODC-By-1.0 SIL Open Font License 1.0 OFL-1.0 Y SIL Open Font License 1.0 with no Reserved Font Name OFL-1.0-no-RFN SIL Open Font License 1.0 with Reserved Font Name OFL-1.0-RFN SIL Open Font License 1.1 OFL-1.1 Y Y SIL Open Font License 1.1 with no Reserved Font Name OFL-1.1-no-RFN Y SIL Open Font License 1.1 with Reserved Font Name OFL-1.1-RFN Y OGC Software License, Version 1.0 OGC-1.0 Taiwan Open Government Data License, version 1.0 OGDL-Taiwan-1.0 Open Government Licence - Canada OGL-Canada-2.0 Open Government Licence v1.0 OGL-UK-1.0 Open Government Licence v2.0 OGL-UK-2.0 Open Government Licence v3.0 OGL-UK-3.0 Open Group Test Suite License OGTSL Y Open LDAP Public License v1.1 OLDAP-1.1 Open LDAP Public License v1.2 OLDAP-1.2 Open LDAP Public License v1.3 OLDAP-1.3 Open LDAP Public License v1.4 OLDAP-1.4 Open LDAP Public License v2.0 (or possibly 2.0A and 2.0B) OLDAP-2.0 Open LDAP Public License v2.0.1 OLDAP-2.0.1 Open LDAP Public License v2.1 OLDAP-2.1 Open LDAP Public License v2.2 OLDAP-2.2 Open LDAP Public License v2.2.1 OLDAP-2.2.1 Open LDAP Public License 2.2.2 OLDAP-2.2.2 Open LDAP Public License v2.3 OLDAP-2.3 Y Open LDAP Public License v2.4 OLDAP-2.4 Open LDAP Public License v2.5 OLDAP-2.5 Open LDAP Public License v2.6 OLDAP-2.6 Open LDAP Public License v2.7 OLDAP-2.7 Y Open LDAP Public License v2.8 OLDAP-2.8 Y Open Market License OML OpenSSL License OpenSSL Y Open Public License v1.0 OPL-1.0 Open Publication License v1.0 OPUBL-1.0 OSET Public License version 2.1 OSET-PL-2.1 Y Open Software License 1.0 OSL-1.0 Y Y Open Software License 1.1 OSL-1.1 Y Open Software License 2.0 OSL-2.0 Y Y Open Software License 2.1 OSL-2.1 Y Y Open Software License 3.0 OSL-3.0 Y Y The Parity Public License 6.0.0 Parity-6.0.0 The Parity Public License 7.0.0 Parity-7.0.0 Open Data Commons Public Domain Dedication & License 1.0 PDDL-1.0 PHP License v3.0 PHP-3.0 Y PHP License v3.01 PHP-3.01 Y Y Plexus Classworlds License Plexus PolyForm Noncommercial License 1.0.0 PolyForm-Noncommercial-1.0.0 PolyForm Small Business License 1.0.0 PolyForm-Small-Business-1.0.0 PostgreSQL License PostgreSQL Y Python Software Foundation License 2.0 PSF-2.0 psfrag License psfrag psutils License psutils Python License 2.0 Python-2.0 Y Y Qhull License Qhull Q Public License 1.0 QPL-1.0 Y Y Rdisc License Rdisc Red Hat eCos Public License v1.1 RHeCos-1.1 Reciprocal Public License 1.1 RPL-1.1 Y Reciprocal Public License 1.5 RPL-1.5 Y RealNetworks Public Source License v1.0 RPSL-1.0 Y Y RSA Message-Digest License RSA-MD Ricoh Source Code Public License RSCPL Y Ruby License Ruby Y Sax Public Domain Notice SAX-PD Saxpath License Saxpath SCEA Shared Source License SCEA Scheme Language Report License SchemeReport Sendmail License Sendmail Sendmail License 8.23 Sendmail-8.23 SGI Free Software License B v1.0 SGI-B-1.0 SGI Free Software License B v1.1 SGI-B-1.1 SGI Free Software License B v2.0 SGI-B-2.0 Y Solderpad Hardware License v0.5 SHL-0.5 Solderpad Hardware License, Version 0.51 SHL-0.51 Simple Public License 2.0 SimPL-2.0 Y Sun Industry Standards Source License v1.1 SISSL Y Y Sun Industry Standards Source License v1.2 SISSL-1.2 Sleepycat License Sleepycat Y Y Standard ML of New Jersey License SMLNJ Y Secure Messaging Protocol Public License SMPPL SNIA Public License 1.1 SNIA Spencer License 86 Spencer-86 Spencer License 94 Spencer-94 Spencer License 99 Spencer-99 Sun Public License v1.0 SPL-1.0 Y Y SSH OpenSSH license SSH-OpenSSH SSH short notice SSH-short Server Side Public License, v 1 SSPL-1.0 SugarCRM Public License v1.1.3 SugarCRM-1.1.3 Scheme Widget Library (SWL) Software License Agreement SWL TAPR Open Hardware License v1.0 TAPR-OHL-1.0 TCL/TK License TCL TCP Wrappers License TCP-wrappers TMate Open Source License TMate TORQUE v2.5+ Software License v1.1 TORQUE-1.1 Trusster Open Source License TOSL Technische Universitaet Berlin License 1.0 TU-Berlin-1.0 Technische Universitaet Berlin License 2.0 TU-Berlin-2.0 Upstream Compatibility License v1.0 UCL-1.0 Y Unicode License Agreement - Data Files and Software (2015) Unicode-DFS-2015 Unicode License Agreement - Data Files and Software (2016) Unicode-DFS-2016 Y Unicode Terms of Use Unicode-TOU The Unlicense Unlicense Y Y Universal Permissive License v1.0 UPL-1.0 Y Y Vim License Vim Y VOSTROM Public License for Open Source VOSTROM Vovida Software License v1.0 VSL-1.0 Y W3C Software Notice and License (2002-12-31) W3C Y Y W3C Software Notice and License (1998-07-20) W3C-19980720 W3C Software Notice and Document License (2015-05-13) W3C-20150513 Sybase Open Watcom Public License 1.0 Watcom-1.0 Y Wsuipa License Wsuipa Do What The F*ck You Want To Public License WTFPL Y X11 License X11 Y X11 License Distribution Modification Variant X11-distribute-modifications-variant Xerox License Xerox XFree86 License 1.1 XFree86-1.1 Y xinetd License xinetd Y X.Net License Xnet Y XPP License xpp XSkat License XSkat Yahoo! Public License v1.0 YPL-1.0 Yahoo! Public License v1.1 YPL-1.1 Y Zed License Zed Zend License v2.0 Zend-2.0 Y Zimbra Public License v1.3 Zimbra-1.3 Y Zimbra Public License v1.4 Zimbra-1.4 zlib License Zlib Y Y zlib/libpng License with Acknowledgement zlib-acknowledgement Zope Public License 1.1 ZPL-1.1 Zope Public License 2.0 ZPL-2.0 Y Y Zope Public License 2.1 ZPL-2.1 Y Y","title":"A.1 Licenses with short identifiers "},{"location":"SPDX-license-list/#a2-exceptions-list","text":"The SPDX License List includes a list of exceptions. These exceptions grant an exception to a license condition or additional permissions beyond those granted in a license; they are not stand-alone licenses. Exceptions are added to a license using the License Expression operator, \"WITH\". Table A.2 \u2014 Exception names and license links Full Name of Exception SPDX License Exception 389 Directory Server Exception 389-exception Autoconf exception 2.0 Autoconf-exception-2.0 Autoconf exception 3.0 Autoconf-exception-3.0 Bison exception 2.2 Bison-exception-2.2 Bootloader Distribution Exception Bootloader-exception Classpath exception 2.0 Classpath-exception-2.0 CLISP exception 2.0 CLISP-exception-2.0 DigiRule FOSS License Exception DigiRule-FOSS-exception eCos exception 2.0 eCos-exception-2.0 Fawkes Runtime Exception Fawkes-Runtime-exception FLTK exception FLTK-exception Font exception 2.0 Font-exception-2.0 FreeRTOS Exception 2.0 freertos-exception-2.0 GCC Runtime Library exception 2.0 GCC-exception-2.0 GCC Runtime Library exception 3.1 GCC-exception-3.1 GNU JavaMail exception gnu-javamail-exception GPL-3.0 Linking Exception GPL-3.0-linking-exception GPL-3.0 Linking Exception (with Corresponding Source) GPL-3.0-linking-source-exception GPL Cooperation Commitment 1.0 GPL-CC-1.0 i2p GPL+Java Exception i2p-gpl-java-exception LGPL-3.0 Linking Exception LGPL-3.0-linking-exception Libtool Exception Libtool-exception Linux Syscall Note Linux-syscall-note LLVM Exception LLVM-exception LZMA exception LZMA-exception Macros and Inline Functions Exception mif-exception OCaml LGPL Linking Exception OCaml-LGPL-linking-exception Open CASCADE Exception 1.0 OCCT-exception-1.0 OpenJDK Assembly exception 1.0 OpenJDK-assembly-exception-1.0 OpenVPN OpenSSL Exception openvpn-openssl-exception PS/PDF font exception (2017-08-17) PS-or-PDF-font-exception-20170817 Qt GPL exception 1.0 Qt-GPL-exception-1.0 Qt LGPL exception 1.1 Qt-LGPL-exception-1.1 Qwt exception 1.0 Qwt-exception-1.0 Solderpad Hardware License v2.0 SHL-2.0 Solderpad Hardware License v2.1 SHL-2.1 Swift Exception Swift-exception U-Boot exception 2.0 u-boot-exception-2.0 Universal FOSS Exception, Version 1.0 Universal-FOSS-exception-1.0 WxWindows Library Exception 3.1 WxWindows-exception-3.1","title":"A.2 Exceptions list "},{"location":"SPDX-license-list/#a3-deprecated-licenses","text":"SPDX endeavors to never change the SPDX license identifiers. However, sometimes there has been a compelling reason to deprecate a license identifier, such as to accommodate improved SPDX license expressions or when we have found a duplicate license. When a license identifier is \"deprecated\" on the SPDX License List, it effectively means that there is an updated license identifier and the deprecated license identifier, while remaining valid, should no longer be used. The URL to each deprecated license is retained and those license pages are updated to note the deprecation. Table A.3 \u2014 Deprecated license short identifiers Full Name of License Deprecated SDPX Short Identifier Affero General Public License v1.0 AGPL-1.0 GNU Affero General Public License v3.0 AGPL-3.0 BSD 2-Clause FreeBSD License BSD-2-Clause-FreeBSD BSD 2-Clause NetBSD License BSD-2-Clause-NetBSD bzip2 and libbzip2 License v1.0.5 bzip2-1.0.5 eCos license version 2.0 eCos-2.0 GNU Free Documentation License v1.1 GFDL-1.1 GNU Free Documentation License v1.2 GFDL-1.2 GNU Free Documentation License v1.3 GFDL-1.3 GNU General Public License v1.0 only GPL-1.0 GNU General Public License v1.0 or later GPL-1.0+ GNU General Public License v2.0 only GPL-2.0 GNU General Public License v2.0 or later GPL-2.0+ GNU General Public License v2.0 w/Autoconf exception GPL-2.0-with-autoconf-exception GNU General Public License v2.0 w/Bison exception GPL-2.0-with-bison-exception GNU General Public License v2.0 w/Classpath exception GPL-2.0-with-classpath-exception GNU General Public License v2.0 w/Font exception GPL-2.0-with-font-exception GNU General Public License v2.0 w/GCC Runtime Library exception GPL-2.0-with-GCC-exception GNU General Public License v3.0 only GPL-3.0 GNU General Public License v3.0 or later GPL-3.0+ GNU General Public License v3.0 w/Autoconf exception GPL-3.0-with-autoconf-exception GNU General Public License v3.0 w/GCC Runtime Library exception GPL-3.0-with-GCC-exception GNU Library General Public License v2 only LGPL-2.0 GNU Library General Public License v2 or later LGPL-2.0+ GNU Lesser General Public License v2.1 only LGPL-2.1 GNU Library General Public License v2.1 or later LGPL-2.1+ GNU Lesser General Public License v3.0 only LGPL-3.0 GNU Lesser General Public License v3.0 or later LGPL-3.0+ Nunit License Nunit Standard ML of New Jersey License StandardML-NJ wxWindows Library License wxWindows","title":"A.3 Deprecated licenses "},{"location":"annotations/","text":"12 Annotations information section 12.1 Annotator field 12.1.1 Description This field identifies the person, organization or tool that has commented on a snippet, file, package, or the entire document. The metadata for the annotator field is shown in Table 71. Table 71 \u2014 Metadata for the annotator field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one), if there is an Annotation. Format Single line of text with the following keywords. \"Person: person name\" and optional \"(email)\" \"Organization: organization\" and optional \"(email)\" \"Tool: tool identifier - version\" 12.1.2 Intent It may also be important for participants in the software supply chain to validate and add information on ambiguous snippets, files and packages. 12.1.3 Examples EXAMPLE 1 Tag: Annotator: Annotator: Person: Jane Doe EXAMPLE 2 RDF: Property spdx:annotator in class spdx:Annotation <Annotation> <annotator> Person: Jane Doe</annotator> </Annotation> 12.2 Annotation date field 12.2.1 Description Identify when the comment was made. This shall be specified according to the combined date and time in the UTC format, as specified in the ISO 8601 standard. The metadata for the annotation date field is shown in Table 72. Table 72 \u2014 Metadata for the annotation date field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one), if there is an Annotation. Format YYYY-MM-DDThh:mm:ssZ where: YYYY is year MM is month with leading zero DD is day with leading zero T is delimiter for time hh is hours with leading zero in 24-hour time mm is minutes with leading zero ss is seconds with leading zero Z is universal time indicator 12.2.2 Intent Here, the Annotation Date can serve as a verification as to when the actual review was done. 12.2.3 Examples EXAMPLE 1 Tag: AnnotationDate: AnnotationDate: 2010-01-29T18:30:22Z EXAMPLE 2 RDF: Property spdx:annotationDate in class spdx:Annotation </Annotation> <annotationDate> 2010-01-29T18:30:22Z </annotationDate> </Annotation> 12.3 Annotation type field 12.3.1 Description This field describes the type of annotation. Annotations are usually created when someone reviews the SPDX document, and if this is the case the annotation type should be REVIEW . If the author wants to store extra information about one of the elements during creation, it is recommended to use the type of OTHER . The metadata for the annotation type field is shown in Table 73. Table 73 \u2014 Metadata for the annotation type field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one), if there is an Annotation. Format REVIEW | OTHER 12.3.2 Intent This allows the type of annotation to be recorded. 12.3.3 Examples EXAMPLE 1 Tag: AnnotationType: AnnotationType: REVIEW EXAMPLE 2 RDF: Property spdx:annotationType in class spdx:Annotation <Annotation> <annotationType rdf:resource =\"http://spdx.org/rdf/terms#annotationType_other\"/> </Annotation> 12.4 SPDX identifier reference field 12.4.1 Description Uniquely identify the element in an SPDX document which is being referenced. These may be referenced internally and externally with the addition of the SPDX document identifier. The metadata for the SPDX identifier reference field is shown in Table 74. Table 74 \u2014 Metadata for the SPDX identifier reference field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one), if there is an Annotation. Format [DocumentRef-[idstring]:]SPDXID where: [\"DocumentRef-\"[idstring]\":\"] is an optional reference to an external SPDX document as described in 6.6 SPDXID is a unique string containing letters, numbers, . and/or - as described in 6.3 , 7.2 and 8.2 . 12.4.2 Intent There may be several versions of the same snippet, package or file within an SPDX document. Each element needs to be able to be referred to uniquely so that relationships between elements can be clearly articulated. 12.4.3 Examples EXAMPLE 1 Tag: SPDXREF: SPDXREF: SPDXRef-45 SPDXREF: DocumentRef-spdx-tool-1.2:SPDXRef-5 EXAMPLE 2 RDF: For RDF, the annotations are a property of the SPDX document, package, file, or snippet they are annotating. <File rdf:about=\"#SPDXRef-45\"> <annotation> <Annotation> ... </Annotation> </annotation> </File> 12.5 Annotation comment field 12.5.1 Description This required free form text field permits the annotator to provide commentary on the analysis. The metadata for the annotation comment field is shown in Table 75. Table 75 \u2014 Metadata for the annotation comment field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one), if there is an Annotation. Format Free form text that may span multiple lines. 12.5.2 Intent This allows the annotator to provide independent assessment and note any points where there is disagreement with the analysis. 12.5.3 Examples EXAMPLE 1 Tag: AnnotationComment: In tag:value format multiple lines are delimited by <text> .. </text> . AnnotationComment: <text>All of the licenses seen in the file, are matching what was seen during manual inspection. There are some terms that can influence the concluded license, and some alternatives may be possible, but the concluded license is one of the options.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:Annotation <Annotation> <rdfs:comment>All of the licenses seen in the file, are matching what was seen during manual inspection. There are some terms that can influence the concluded license, and some alternatives may be possible, but the concluded license is one of the options. </rdfs:comment> </Annotation>","title":"Clause 12: Annotation Information"},{"location":"annotations/#12-annotations-information-section","text":"","title":"12 Annotations information section"},{"location":"annotations/#121-annotator-field","text":"","title":"12.1 Annotator field "},{"location":"annotations/#1211-description","text":"This field identifies the person, organization or tool that has commented on a snippet, file, package, or the entire document. The metadata for the annotator field is shown in Table 71. Table 71 \u2014 Metadata for the annotator field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one), if there is an Annotation. Format Single line of text with the following keywords. \"Person: person name\" and optional \"(email)\" \"Organization: organization\" and optional \"(email)\" \"Tool: tool identifier - version\"","title":"12.1.1 Description"},{"location":"annotations/#1212-intent","text":"It may also be important for participants in the software supply chain to validate and add information on ambiguous snippets, files and packages.","title":"12.1.2 Intent"},{"location":"annotations/#1213-examples","text":"EXAMPLE 1 Tag: Annotator: Annotator: Person: Jane Doe EXAMPLE 2 RDF: Property spdx:annotator in class spdx:Annotation <Annotation> <annotator> Person: Jane Doe</annotator> </Annotation>","title":"12.1.3 Examples"},{"location":"annotations/#122-annotation-date-field","text":"","title":"12.2 Annotation date field "},{"location":"annotations/#1221-description","text":"Identify when the comment was made. This shall be specified according to the combined date and time in the UTC format, as specified in the ISO 8601 standard. The metadata for the annotation date field is shown in Table 72. Table 72 \u2014 Metadata for the annotation date field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one), if there is an Annotation. Format YYYY-MM-DDThh:mm:ssZ where: YYYY is year MM is month with leading zero DD is day with leading zero T is delimiter for time hh is hours with leading zero in 24-hour time mm is minutes with leading zero ss is seconds with leading zero Z is universal time indicator","title":"12.2.1 Description"},{"location":"annotations/#1222-intent","text":"Here, the Annotation Date can serve as a verification as to when the actual review was done.","title":"12.2.2 Intent"},{"location":"annotations/#1223-examples","text":"EXAMPLE 1 Tag: AnnotationDate: AnnotationDate: 2010-01-29T18:30:22Z EXAMPLE 2 RDF: Property spdx:annotationDate in class spdx:Annotation </Annotation> <annotationDate> 2010-01-29T18:30:22Z </annotationDate> </Annotation>","title":"12.2.3 Examples"},{"location":"annotations/#123-annotation-type-field","text":"","title":"12.3 Annotation type field "},{"location":"annotations/#1231-description","text":"This field describes the type of annotation. Annotations are usually created when someone reviews the SPDX document, and if this is the case the annotation type should be REVIEW . If the author wants to store extra information about one of the elements during creation, it is recommended to use the type of OTHER . The metadata for the annotation type field is shown in Table 73. Table 73 \u2014 Metadata for the annotation type field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one), if there is an Annotation. Format REVIEW | OTHER","title":"12.3.1 Description"},{"location":"annotations/#1232-intent","text":"This allows the type of annotation to be recorded.","title":"12.3.2 Intent"},{"location":"annotations/#1233-examples","text":"EXAMPLE 1 Tag: AnnotationType: AnnotationType: REVIEW EXAMPLE 2 RDF: Property spdx:annotationType in class spdx:Annotation <Annotation> <annotationType rdf:resource =\"http://spdx.org/rdf/terms#annotationType_other\"/> </Annotation>","title":"12.3.3 Examples"},{"location":"annotations/#124-spdx-identifier-reference-field","text":"","title":"12.4 SPDX identifier reference field "},{"location":"annotations/#1241-description","text":"Uniquely identify the element in an SPDX document which is being referenced. These may be referenced internally and externally with the addition of the SPDX document identifier. The metadata for the SPDX identifier reference field is shown in Table 74. Table 74 \u2014 Metadata for the SPDX identifier reference field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one), if there is an Annotation. Format [DocumentRef-[idstring]:]SPDXID where: [\"DocumentRef-\"[idstring]\":\"] is an optional reference to an external SPDX document as described in 6.6 SPDXID is a unique string containing letters, numbers, . and/or - as described in 6.3 , 7.2 and 8.2 .","title":"12.4.1 Description"},{"location":"annotations/#1242-intent","text":"There may be several versions of the same snippet, package or file within an SPDX document. Each element needs to be able to be referred to uniquely so that relationships between elements can be clearly articulated.","title":"12.4.2 Intent"},{"location":"annotations/#1243-examples","text":"EXAMPLE 1 Tag: SPDXREF: SPDXREF: SPDXRef-45 SPDXREF: DocumentRef-spdx-tool-1.2:SPDXRef-5 EXAMPLE 2 RDF: For RDF, the annotations are a property of the SPDX document, package, file, or snippet they are annotating. <File rdf:about=\"#SPDXRef-45\"> <annotation> <Annotation> ... </Annotation> </annotation> </File>","title":"12.4.3 Examples"},{"location":"annotations/#125-annotation-comment-field","text":"","title":"12.5 Annotation comment field "},{"location":"annotations/#1251-description","text":"This required free form text field permits the annotator to provide commentary on the analysis. The metadata for the annotation comment field is shown in Table 75. Table 75 \u2014 Metadata for the annotation comment field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one), if there is an Annotation. Format Free form text that may span multiple lines.","title":"12.5.1 Description"},{"location":"annotations/#1252-intent","text":"This allows the annotator to provide independent assessment and note any points where there is disagreement with the analysis.","title":"12.5.2 Intent"},{"location":"annotations/#1253-examples","text":"EXAMPLE 1 Tag: AnnotationComment: In tag:value format multiple lines are delimited by <text> .. </text> . AnnotationComment: <text>All of the licenses seen in the file, are matching what was seen during manual inspection. There are some terms that can influence the concluded license, and some alternatives may be possible, but the concluded license is one of the options.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:Annotation <Annotation> <rdfs:comment>All of the licenses seen in the file, are matching what was seen during manual inspection. There are some terms that can influence the concluded license, and some alternatives may be possible, but the concluded license is one of the options. </rdfs:comment> </Annotation>","title":"12.5.3 Examples"},{"location":"bibliography/","text":"Bibliography The following documents are useful references for implementers and users of this document: [1] Software Package Data Exchange (SPDX\u00ae) Specification Version 1.0 and 1.1, 1.2, 2.0, 2.1, and 2.2; SPDX.dev, https://spdx.dev/specifications [2] Open Source Initiative (OSI) ; https://opensource.org/licenses","title":"Bibliography"},{"location":"bibliography/#bibliography","text":"The following documents are useful references for implementers and users of this document: [1] Software Package Data Exchange (SPDX\u00ae) Specification Version 1.0 and 1.1, 1.2, 2.0, 2.1, and 2.2; SPDX.dev, https://spdx.dev/specifications [2] Open Source Initiative (OSI) ; https://opensource.org/licenses","title":"Bibliography"},{"location":"composition-of-an-SPDX-document/","text":"5 Composition of an SPDX document 5.1 What this specification covers This document contains the specification for an SPDX document, which is made up of a set of one or more sections, instances of which contain information in the form of fields . The following subclauses introduce the different kinds of sections allowed. The fields for each kind of section are defined in the clause corresponding to that section. Within an SPDX document, sections may be organized, as follows: The object model is illustrated by Annex C . 5.2 Sections 5.2.1 SPDX document creation information section An instance of this section provides the necessary information for forward and backward compatibility for processing tools. One instance shall be present for each SPDX document produced. Cardinality: Mandatory, one. See Clause 6 for details of the fields in this kind of section. 5.2.2 Package information section If SPDX information is being used to describe packages, then one instance of the package information per package being described shall exist. It provides important meta information about the package as a whole. Packages are an abstract concept that can be used to refer to any distribution of software, typically consisting of one or more files and capable of containing sub-packages. Starting with SPDX 2.0, it is not necessary to have a package wrapping a set of files. A package refers to any unit of content that can be associated with a distribution of software. Typically, a package is composed of one or more files. An SPDX document may, but is not required to, provide details about the individual files comprising a package (see Clause 8 ). Any of the following non-limiting examples may be (but are not required to be) represented in SPDX as a package: a tarball, zip file or other archive a directory or sub-directory a separately distributed piece of software which another Package or File uses or depends upon (e.g., a Python package, a Go module, ...) a container image, and/or each image layer within a container image a collection of one or more sub-packages a Git repository snapshot from a particular point in time Note that some of these could be represented in SPDX as a file as well. In an SPDX document, relationship elements can be used to indicate relationships between packages, such as dependency relationships. Cardinality: Optional, zero or many. See Clause 7 for details of the fields in this kind of section. In tag:value format, the order in which package and files occur is syntactically significant. A new package Information section is denoted by the package name ( 7.1 ) field. All package information fields shall be grouped together before the start of a files section ( Clause 8 ), if file(s) are present. All files contained in a package shall immediately follow the applicable package information. A new package information section (via package name) denotes the start of another package. Sub-packages shall not be nested inside a package information section, but shall be separate and shall use a relationship to clarify. Annotations and relationships for the package may appear after the package information before any file information. 5.2.3 File information section One instance of the file information may exist for each file in the software package. It provides important meta information about a given file including licenses and copyright. Starting with SPDX 2.0, it is not necessary to have a package wrapping a set of files. Cardinality: Optional, zero or many. See Clause 8 for details of the fields in this kind of section. When implementing tag:value format, the positioning of file elements is syntactically significant: Files are assumed to be associated with the package information that immediately precedes it, if a package exists. Presence of a new package information signals the end of the set of files associated with the preceding package, unless an explicit relationship is used. If a package contains files, the file information sections shall follow its package information section. If a file is not part of any package, it shall precede any package information section reference in the SPDX document. The first field to start off the description of a file shall be the file name in tag:value format. File information is associated with the file name that precedes it. Annotations on the file and relationships from the file may appear after the file information, before the next file or package information section. When implementing file information in RDF, the spdx:hasFile property is used to associate the package with the file. 5.2.4 Snippet information section Snippets can optionally be used when a file is known to have some content that has been included from another original source. They are useful for denoting when part of a file may have been originally created under another license or copied from a place with a known vulnerability. Each instance of Snippet Information shall be associated with a specific file in an SPDX document. Cardinality: Optional, zero or many. See Clause 9 for details of the fields in this kind of section. When implementing tag:value format, the positioning of snippet elements is syntactically significant: If a file contains snippets, the snippet information section shall follow a related file information section (if it exists in the document). Presence of a new file or package section signals the end of the set of snippets associated with the original file, unless an explicit relationship is used. The first field to start off the description of a snippet shall be the snippet identifier in tag:value format. Annotations on the snippet and relationships from the snippet may appear after the snippet information, before the next file or package section. 5.2.5 Other licensing information detected section This section is used for any detected, declared or concluded licenses that are NOT on the SPDX License List. For the most up-to-date version of the list, see https://spdx.org/licenses/ . The SPDX License List can also be found in Annex A . One instance shall be created for every unique license or licensing information being referenced that does not match one of the licenses on the SPDX License List. Cardinality: Optional, zero or many. See Clause 10 for details of the fields in this kind of section. 5.2.6 Relationships between SPDX elements information section Packages, files, and snippets are all considered to be SPDX elements, and relationships can be made explicit between these SPDX elements by using the fields in this section. Cardinality: Optional, zero or many. See Clause 11 for details of the fields in this kind of section. 5.2.7 Annotations information section Annotations permit the addition of information to validate and clarify ambiguous SPDX elements (packages, files or snippets). Cardinality: Optional, zero or many. See Clause 12 for details of the fields in this kind of section. This section is now the preferred home for review information. 5.2.8 Review information section The review information section is included for compatibility with SPDX 1.2, and is deprecated since SPDX 2.0. Any review information shall use an annotation (as described in Clause 12 ) with an annotation type of REVIEW . Review information may be added after the initial SPDX document has been created. The set of fields are optional and multiple instances may be added. Once a reviewer entry is added, the review date associated with the review is mandatory. The created date shall not be modified as a result of the addition of information regarding the conduct of a review. A review comments is optional. See Clause 13 for details of the fields in this kind of section. 5.3 What this specification does not cover This document does not address the following: Information that cannot be derived from an inspection (whether manual or using automated tools) of the package to be analyzed. How the data stored in an SPDX document is used by the recipient. Any identification of any patent(s) which may or may not relate to the package. Legal interpretation of the licenses or any compliance actions that have been or may need to be taken.","title":"Clause 5: Composition of an SPDX document"},{"location":"composition-of-an-SPDX-document/#5-composition-of-an-spdx-document","text":"","title":"5 Composition of an SPDX document"},{"location":"composition-of-an-SPDX-document/#51-what-this-specification-covers","text":"This document contains the specification for an SPDX document, which is made up of a set of one or more sections, instances of which contain information in the form of fields . The following subclauses introduce the different kinds of sections allowed. The fields for each kind of section are defined in the clause corresponding to that section. Within an SPDX document, sections may be organized, as follows: The object model is illustrated by Annex C .","title":"5.1 What this specification covers "},{"location":"composition-of-an-SPDX-document/#52-sections","text":"","title":"5.2 Sections "},{"location":"composition-of-an-SPDX-document/#521-spdx-document-creation-information-section","text":"An instance of this section provides the necessary information for forward and backward compatibility for processing tools. One instance shall be present for each SPDX document produced. Cardinality: Mandatory, one. See Clause 6 for details of the fields in this kind of section.","title":"5.2.1 SPDX document creation information section "},{"location":"composition-of-an-SPDX-document/#522-package-information-section","text":"If SPDX information is being used to describe packages, then one instance of the package information per package being described shall exist. It provides important meta information about the package as a whole. Packages are an abstract concept that can be used to refer to any distribution of software, typically consisting of one or more files and capable of containing sub-packages. Starting with SPDX 2.0, it is not necessary to have a package wrapping a set of files. A package refers to any unit of content that can be associated with a distribution of software. Typically, a package is composed of one or more files. An SPDX document may, but is not required to, provide details about the individual files comprising a package (see Clause 8 ). Any of the following non-limiting examples may be (but are not required to be) represented in SPDX as a package: a tarball, zip file or other archive a directory or sub-directory a separately distributed piece of software which another Package or File uses or depends upon (e.g., a Python package, a Go module, ...) a container image, and/or each image layer within a container image a collection of one or more sub-packages a Git repository snapshot from a particular point in time Note that some of these could be represented in SPDX as a file as well. In an SPDX document, relationship elements can be used to indicate relationships between packages, such as dependency relationships. Cardinality: Optional, zero or many. See Clause 7 for details of the fields in this kind of section. In tag:value format, the order in which package and files occur is syntactically significant. A new package Information section is denoted by the package name ( 7.1 ) field. All package information fields shall be grouped together before the start of a files section ( Clause 8 ), if file(s) are present. All files contained in a package shall immediately follow the applicable package information. A new package information section (via package name) denotes the start of another package. Sub-packages shall not be nested inside a package information section, but shall be separate and shall use a relationship to clarify. Annotations and relationships for the package may appear after the package information before any file information.","title":"5.2.2 Package information section "},{"location":"composition-of-an-SPDX-document/#523-file-information-section","text":"One instance of the file information may exist for each file in the software package. It provides important meta information about a given file including licenses and copyright. Starting with SPDX 2.0, it is not necessary to have a package wrapping a set of files. Cardinality: Optional, zero or many. See Clause 8 for details of the fields in this kind of section. When implementing tag:value format, the positioning of file elements is syntactically significant: Files are assumed to be associated with the package information that immediately precedes it, if a package exists. Presence of a new package information signals the end of the set of files associated with the preceding package, unless an explicit relationship is used. If a package contains files, the file information sections shall follow its package information section. If a file is not part of any package, it shall precede any package information section reference in the SPDX document. The first field to start off the description of a file shall be the file name in tag:value format. File information is associated with the file name that precedes it. Annotations on the file and relationships from the file may appear after the file information, before the next file or package information section. When implementing file information in RDF, the spdx:hasFile property is used to associate the package with the file.","title":"5.2.3 File information section "},{"location":"composition-of-an-SPDX-document/#524-snippet-information-section","text":"Snippets can optionally be used when a file is known to have some content that has been included from another original source. They are useful for denoting when part of a file may have been originally created under another license or copied from a place with a known vulnerability. Each instance of Snippet Information shall be associated with a specific file in an SPDX document. Cardinality: Optional, zero or many. See Clause 9 for details of the fields in this kind of section. When implementing tag:value format, the positioning of snippet elements is syntactically significant: If a file contains snippets, the snippet information section shall follow a related file information section (if it exists in the document). Presence of a new file or package section signals the end of the set of snippets associated with the original file, unless an explicit relationship is used. The first field to start off the description of a snippet shall be the snippet identifier in tag:value format. Annotations on the snippet and relationships from the snippet may appear after the snippet information, before the next file or package section.","title":"5.2.4 Snippet information section "},{"location":"composition-of-an-SPDX-document/#525-other-licensing-information-detected-section","text":"This section is used for any detected, declared or concluded licenses that are NOT on the SPDX License List. For the most up-to-date version of the list, see https://spdx.org/licenses/ . The SPDX License List can also be found in Annex A . One instance shall be created for every unique license or licensing information being referenced that does not match one of the licenses on the SPDX License List. Cardinality: Optional, zero or many. See Clause 10 for details of the fields in this kind of section.","title":"5.2.5 Other licensing information detected section "},{"location":"composition-of-an-SPDX-document/#526-relationships-between-spdx-elements-information-section","text":"Packages, files, and snippets are all considered to be SPDX elements, and relationships can be made explicit between these SPDX elements by using the fields in this section. Cardinality: Optional, zero or many. See Clause 11 for details of the fields in this kind of section.","title":"5.2.6 Relationships between SPDX elements information section "},{"location":"composition-of-an-SPDX-document/#527-annotations-information-section","text":"Annotations permit the addition of information to validate and clarify ambiguous SPDX elements (packages, files or snippets). Cardinality: Optional, zero or many. See Clause 12 for details of the fields in this kind of section. This section is now the preferred home for review information.","title":"5.2.7 Annotations information section "},{"location":"composition-of-an-SPDX-document/#528-review-information-section","text":"The review information section is included for compatibility with SPDX 1.2, and is deprecated since SPDX 2.0. Any review information shall use an annotation (as described in Clause 12 ) with an annotation type of REVIEW . Review information may be added after the initial SPDX document has been created. The set of fields are optional and multiple instances may be added. Once a reviewer entry is added, the review date associated with the review is mandatory. The created date shall not be modified as a result of the addition of information regarding the conduct of a review. A review comments is optional. See Clause 13 for details of the fields in this kind of section.","title":"5.2.8 Review information section "},{"location":"composition-of-an-SPDX-document/#53-what-this-specification-does-not-cover","text":"This document does not address the following: Information that cannot be derived from an inspection (whether manual or using automated tools) of the package to be analyzed. How the data stored in an SPDX document is used by the recipient. Any identification of any patent(s) which may or may not relate to the package. Legal interpretation of the licenses or any compliance actions that have been or may need to be taken.","title":"5.3 What this specification does not cover "},{"location":"conformance/","text":"4 Conformance 4.1 SPDX Current and Previous Versions This edition has the version number 2.3 as part of its title. This is a follow on from ISO/IEC 5962:2021 Information technology \u2014 SPDX\u00ae Specification V2.2.1 , and includes new fields. Earlier editions were published by the SPDX workgroup via the Linux Foundation. The SPDX Specification was subsequently transposed into the Joint Development Foundation. [Those earlier editions are: 1.0 (August 2011), 1.1 (August 2012), 1.2 (October 2013), 2.0 (May 2015), 2.1 (November 2016), and 2.2 (May 2020).] Differences between this edition and earlier ones are reported in Annex J ; see also [1] . 4.2 Obsolete features Over the life of a standard, some older approaches can become obsolete and are dropped from subsequent editions, possibly with a replacement approach being provided. Such action involves deprecating those outdated features. This edition identifies all currently deprecated features. No features present in 2.2.1 have been deprecated in this 2.3 release. 4.3 Alternate notation for some conformance requirements This standard contains more than a few cardinality assertions , each of which indicates absolute, optional, or conditional requirements. Here are some examples: Cardinality: Mandatory, one. Cardinality: Optional, one or many. Cardinality: Mandatory, one if {condition} is true or {feature} omitted, zero (shall be omitted) if {condition} is false. Cardinality: 0..1 Cardinality: 0..* Cardinality: 1..1 Cardinality: 1..* Each of these assertions can easily be understood as to whether a feature is required, and if so, how many occurrences are required; also, whether a feature is permitted, and if so, in what number. As this is the format long familiar to the SPDX community, it has been preserved in this document. 4.4 Standard data format requirements The data format specification and recommendations are subject to the following constraints: Shall be in a human readable form. Shall be in a syntax that a software tool can read and write. Shall be suitable to be checked for syntactic correctness automatically, independent of how it was generated (human or tool). The SPDX document character set shall support UTF-8 encoding. Multiple serialization formats may be used to represent the information being exchanged. Current supported formats include: YAML 1.2 see: https://yaml.org/spec/1.2/spec.html JavaScript Object Notation (JSON) see: ECMA-404 The JSON Schema for SPDX can be found in the SPDX Spec Git Repository Schema directory Resource Description Framework (RDF also referred to as RDF/XML) see: https://www.w3.org/TR/rdf-syntax-grammar/ tag:value flat text file as described in this specification .xls spreadsheets In addition to the supported formats, the following format is in development with a plan to complete the specification in the next release: Extensible Markup Language (XML) see: https://www.w3.org/TR/2008/REC-xml-20081126/ Interoperability between all the supported file formats shall be preserved. SPDX defines how to validate a document in each supported format, and how to translate a valid document without loss to each other supported format. Tags and format properties are case sensitive. Should be easy to recognize in a file system without opening the file. A suggested naming convention is: Format Extension tag:value *.spdx RDF *.spdx.rdf JSON *.spdx.json XML *.spdx.xml YAML *.spdx.yaml or *.spdx.yml The convention in this specification is for the RDF examples to use rdf:about=\"...\" to represent that a proper Uniform Resource Indicator (URI) should be present. 4.5 Trademark Compliance To be designated an SPDX document, a file shall comply with the requirements of the SPDX Trademark License (See the SPDX Trademark Page ). The official copyright notice that shall be used with any verbatim reproduction and/or distribution of this SPDX Specification 2.3 is: \"Official SPDX Specification 2.3 Copyright \u00a9 2010-2022 Linux Foundation and its Contributors. Licensed under the Creative Commons Attribution License 3.0 Unported. All other rights are expressly reserved.\" The official copyright notice that shall be used with any non-verbatim reproduction and/or distribution of this SPDX Specification 2.3, including without limitation any partial use or combining this SPDX Specification with another work, is: \"This is not an official SPDX Specification. Portions herein have been reproduced from SPDX Specification 2.3 found at spdx.dev. These portions are Copyright \u00a9 2010-2022 Linux Foundation and its Contributors, and are licensed under the Creative Commons Attribution License 3.0 Unported by the Linux Foundation and its Contributors. All other rights are expressly reserved by Linux Foundation and its Contributors.\" 4.6 The SPDX Lite profile Rather than conforming to this whole specification, an implementation may conform with SPDX Lite only, a profile that defines a subset of the SPDX specification. SPDX Lite aims at the balance between the SPDX standard and actual workflows in some industries. See Annex G for more information.","title":"Clause 4: Conformance"},{"location":"conformance/#4-conformance","text":"","title":"4 Conformance"},{"location":"conformance/#41-spdx-current-and-previous-versions","text":"This edition has the version number 2.3 as part of its title. This is a follow on from ISO/IEC 5962:2021 Information technology \u2014 SPDX\u00ae Specification V2.2.1 , and includes new fields. Earlier editions were published by the SPDX workgroup via the Linux Foundation. The SPDX Specification was subsequently transposed into the Joint Development Foundation. [Those earlier editions are: 1.0 (August 2011), 1.1 (August 2012), 1.2 (October 2013), 2.0 (May 2015), 2.1 (November 2016), and 2.2 (May 2020).] Differences between this edition and earlier ones are reported in Annex J ; see also [1] .","title":"4.1 SPDX Current and Previous Versions "},{"location":"conformance/#42-obsolete-features","text":"Over the life of a standard, some older approaches can become obsolete and are dropped from subsequent editions, possibly with a replacement approach being provided. Such action involves deprecating those outdated features. This edition identifies all currently deprecated features. No features present in 2.2.1 have been deprecated in this 2.3 release.","title":"4.2 Obsolete features "},{"location":"conformance/#43-alternate-notation-for-some-conformance-requirements","text":"This standard contains more than a few cardinality assertions , each of which indicates absolute, optional, or conditional requirements. Here are some examples: Cardinality: Mandatory, one. Cardinality: Optional, one or many. Cardinality: Mandatory, one if {condition} is true or {feature} omitted, zero (shall be omitted) if {condition} is false. Cardinality: 0..1 Cardinality: 0..* Cardinality: 1..1 Cardinality: 1..* Each of these assertions can easily be understood as to whether a feature is required, and if so, how many occurrences are required; also, whether a feature is permitted, and if so, in what number. As this is the format long familiar to the SPDX community, it has been preserved in this document.","title":"4.3 Alternate notation for some conformance requirements "},{"location":"conformance/#44-standard-data-format-requirements","text":"The data format specification and recommendations are subject to the following constraints: Shall be in a human readable form. Shall be in a syntax that a software tool can read and write. Shall be suitable to be checked for syntactic correctness automatically, independent of how it was generated (human or tool). The SPDX document character set shall support UTF-8 encoding. Multiple serialization formats may be used to represent the information being exchanged. Current supported formats include: YAML 1.2 see: https://yaml.org/spec/1.2/spec.html JavaScript Object Notation (JSON) see: ECMA-404 The JSON Schema for SPDX can be found in the SPDX Spec Git Repository Schema directory Resource Description Framework (RDF also referred to as RDF/XML) see: https://www.w3.org/TR/rdf-syntax-grammar/ tag:value flat text file as described in this specification .xls spreadsheets In addition to the supported formats, the following format is in development with a plan to complete the specification in the next release: Extensible Markup Language (XML) see: https://www.w3.org/TR/2008/REC-xml-20081126/ Interoperability between all the supported file formats shall be preserved. SPDX defines how to validate a document in each supported format, and how to translate a valid document without loss to each other supported format. Tags and format properties are case sensitive. Should be easy to recognize in a file system without opening the file. A suggested naming convention is: Format Extension tag:value *.spdx RDF *.spdx.rdf JSON *.spdx.json XML *.spdx.xml YAML *.spdx.yaml or *.spdx.yml The convention in this specification is for the RDF examples to use rdf:about=\"...\" to represent that a proper Uniform Resource Indicator (URI) should be present.","title":"4.4 Standard data format requirements "},{"location":"conformance/#45-trademark-compliance","text":"To be designated an SPDX document, a file shall comply with the requirements of the SPDX Trademark License (See the SPDX Trademark Page ). The official copyright notice that shall be used with any verbatim reproduction and/or distribution of this SPDX Specification 2.3 is: \"Official SPDX Specification 2.3 Copyright \u00a9 2010-2022 Linux Foundation and its Contributors. Licensed under the Creative Commons Attribution License 3.0 Unported. All other rights are expressly reserved.\" The official copyright notice that shall be used with any non-verbatim reproduction and/or distribution of this SPDX Specification 2.3, including without limitation any partial use or combining this SPDX Specification with another work, is: \"This is not an official SPDX Specification. Portions herein have been reproduced from SPDX Specification 2.3 found at spdx.dev. These portions are Copyright \u00a9 2010-2022 Linux Foundation and its Contributors, and are licensed under the Creative Commons Attribution License 3.0 Unported by the Linux Foundation and its Contributors. All other rights are expressly reserved by Linux Foundation and its Contributors.\"","title":"4.5 Trademark Compliance "},{"location":"conformance/#46-the-spdx-lite-profile","text":"Rather than conforming to this whole specification, an implementation may conform with SPDX Lite only, a profile that defines a subset of the SPDX specification. SPDX Lite aims at the balance between the SPDX standard and actual workflows in some industries. See Annex G for more information.","title":"4.6 The SPDX Lite profile "},{"location":"creative-commons-attribution-license-3.0-unported/","text":"Annex J Creative Commons Attribution License 3.0 Unported (Informative) License THE WORK (AS DEFINED BELOW) IS PROVIDED UNDER THE TERMS OF THIS CREATIVE COMMONS PUBLIC LICENSE (\"CCPL\" OR \"LICENSE\"). THE WORK IS PROTECTED BY COPYRIGHT AND/OR OTHER APPLICABLE LAW. ANY USE OF THE WORK OTHER THAN AS AUTHORIZED UNDER THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED. BY EXERCISING ANY RIGHTS TO THE WORK PROVIDED HERE, YOU ACCEPT AND AGREE TO BE BOUND BY THE TERMS OF THIS LICENSE. TO THE EXTENT THIS LICENSE MAY BE CONSIDERED TO BE A CONTRACT, THE LICENSOR GRANTS YOU THE RIGHTS CONTAINED HERE IN CONSIDERATION OF YOUR ACCEPTANCE OF SUCH TERMS AND CONDITIONS. 1) Definitions a. \"Adaptation\" means a work based upon the Work, or upon the Work and other pre-existing works, such as a translation, adaptation, derivative work, arrangement of music or other alterations of a literary or artistic work, or phonogram or performance and includes cinematographic adaptations or any other form in which the Work may be recast, transformed, or adapted including in any form recognizably derived from the original, except that a work that constitutes a Collection will not be considered an Adaptation for the purpose of this License. For the avoidance of doubt, where the Work is a musical work, performance or phonogram, the synchronization of the Work in timed-relation with a moving image (\"synching\") will be considered an Adaptation for the purpose of this License. b. \"Collection\" means a collection of literary or artistic works, such as encyclopedias and anthologies, or performances, phonograms or broadcasts, or other works or subject matter other than works listed in Section 1(f) below, which, by reason of the selection and arrangement of their contents, constitute intellectual creations, in which the Work is included in its entirety in unmodified form along with one or more other contributions, each constituting separate and independent works in themselves, which together are assembled into a collective whole. A work that constitutes a Collection will not be considered an Adaptation (as defined above) for the purposes of this License. c. \"Distribute\" means to make available to the public the original and copies of the Work or Adaptation, as appropriate, through sale or other transfer of ownership. d. \"Licensor\" means the individual, individuals, entity or entities that offer(s) the Work under the terms of this License. e. \"Original Author\" means, in the case of a literary or artistic work, the individual, individuals, entity or entities who created the Work or if no individual or entity can be identified, the publisher; and in addition (i) in the case of a performance the actors, singers, musicians, dancers, and other persons who act, sing, deliver, declaim, play in, interpret or otherwise perform literary or artistic works or expressions of folklore; (ii) in the case of a phonogram the producer being the person or legal entity who first fixes the sounds of a performance or other sounds; and, (iii) in the case of broadcasts, the organization that transmits the broadcast. f. \"Work\" means the literary and/or artistic work offered under the terms of this License including without limitation any production in the literary, scientific and artistic domain, whatever may be the mode or form of its expression including digital form, such as a book, pamphlet and other writing; a lecture, address, sermon or other work of the same nature; a dramatic or dramatico-musical work; a choreographic work or entertainment in dumb show; a musical composition with or without words; a cinematographic work to which are assimilated works expressed by a process analogous to cinematography; a work of drawing, painting, architecture, sculpture, engraving or lithography; a photographic work to which are assimilated works expressed by a process analogous to photography; a work of applied art; an illustration, map, plan, sketch or three-dimensional work relative to geography, topography, architecture or science; a performance; a broadcast; a phonogram; a compilation of data to the extent it is protected as a copyrightable work; or a work performed by a variety or circus performer to the extent it is not otherwise considered a literary or artistic work. g. \"You\" means an individual or entity exercising rights under this License who has not previously violated the terms of this License with respect to the Work, or who has received express permission from the Licensor to exercise rights under this License despite a previous violation. h. \"Publicly Perform\" means to perform public recitations of the Work and to communicate to the public those public recitations, by any means or process, including by wire or wireless means or public digital performances; to make available to the public Works in such a way that members of the public may access these Works from a place and at a place individually chosen by them; to perform the Work to the public by any means or process and the communication to the public of the performances of the Work, including by public digital performance; to broadcast and rebroadcast the Work by any means including signs, sounds or images. i. \"Reproduce\" means to make copies of the Work by any means including without limitation by sound or visual recordings and the right of fixation and reproducing fixations of the Work, including storage of a protected performance or phonogram in digital form or other electronic medium. 2) Fair Dealing Rights . Nothing in this License is intended to reduce, limit, or restrict any uses free from copyright or rights arising from limitations or exceptions that are provided for in connection with the copyright protection under copyright law or other applicable laws. 3) License Grant . Subject to the terms and conditions of this License, Licensor hereby grants You a worldwide, royalty-free, non-exclusive, perpetual (for the duration of the applicable copyright) license to exercise the rights in the Work as stated below: a. to Reproduce the Work, to incorporate the Work into one or more Collections, and to Reproduce the Work as incorporated in the Collections; b. to create and Reproduce Adaptations provided that any such Adaptation, including any translation in any medium, takes reasonable steps to clearly label, demarcate or otherwise identify that changes were made to the original Work. For example, a translation could be marked \"The original work was translated from English to Spanish,\" or a modification could indicate \"The original work has been modified.\"; c. to Distribute and Publicly Perform the Work including as incorporated in Collections; and, d. to Distribute and Publicly Perform Adaptations. e. For the avoidance of doubt: i. Non-waivable Compulsory License Schemes . In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme cannot be waived, the Licensor reserves the exclusive right to collect such royalties for any exercise by You of the rights granted under this License; ii. Waivable Compulsory License Schemes . In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme can be waived, the Licensor waives the exclusive right to collect such royalties for any exercise by You of the rights granted under this License; and, iii. Voluntary License Schemes . The Licensor waives the right to collect royalties, whether individually or, in the event that the Licensor is a member of a collecting society that administers voluntary licensing schemes, via that society, from any exercise by You of the rights granted under this License. The above rights may be exercised in all media and formats whether now known or hereafter devised. The above rights include the right to make such modifications as are technically necessary to exercise the rights in other media and formats. Subject to Section 8(f), all rights not expressly granted by Licensor are hereby reserved. 4) Restrictions . The license granted in Section 3 above is expressly made subject to and limited by the following restrictions: a. You may Distribute or Publicly Perform the Work only under the terms of this License. You must include a copy of, or the Uniform Resource Identifier (URI) for, this License with every copy of the Work You Distribute or Publicly Perform. You may not offer or impose any terms on the Work that restrict the terms of this License or the ability of the recipient of the Work to exercise the rights granted to that recipient under the terms of the License. You may not sublicense the Work. You must keep intact all notices that refer to this License and to the disclaimer of warranties with every copy of the Work You Distribute or Publicly Perform. When You Distribute or Publicly Perform the Work, You may not impose any effective technological measures on the Work that restrict the ability of a recipient of the Work from You to exercise the rights granted to that recipient under the terms of the License. This Section 4(a) applies to the Work as incorporated in a Collection, but this does not require the Collection apart from the Work itself to be made subject to the terms of this License. If You create a Collection, upon notice from any Licensor You must, to the extent practicable, remove from the Collection any credit as required by Section 4(b), as requested. If You create an Adaptation, upon notice from any Licensor You must, to the extent practicable, remove from the Adaptation any credit as required by Section 4(b), as requested. b. If You Distribute, or Publicly Perform the Work or any Adaptations or Collections, You must, unless a request has been made pursuant to Section 4(a), keep intact all copyright notices for the Work and provide, reasonable to the medium or means You are utilizing: (i) the name of the Original Author (or pseudonym, if applicable) if supplied, and/or if the Original Author and/or Licensor designate another party or parties (e.g., a sponsor institute, publishing entity, journal) for attribution (\"Attribution Parties\") in Licensor's copyright notice, terms of service or by other reasonable means, the name of such party or parties; (ii) the title of the Work if supplied; (iii) to the extent reasonably practicable, the URI, if any, that Licensor specifies to be associated with the Work, unless such URI does not refer to the copyright notice or licensing information for the Work; and (iv) , consistent with Section 3(b), in the case of an Adaptation, a credit identifying the use of the Work in the Adaptation (e.g., \"French translation of the Work by Original Author,\" or \"Screenplay based on original Work by Original Author\"). The credit required by this Section 4 (b) may be implemented in any reasonable manner; provided, however, that in the case of a Adaptation or Collection, at a minimum such credit will appear, if a credit for all contributing authors of the Adaptation or Collection appears, then as part of these credits and in a manner at least as prominent as the credits for the other contributing authors. For the avoidance of doubt, You may only use the credit required by this Section for the purpose of attribution in the manner set out above and, by exercising Your rights under this License, You may not implicitly or explicitly assert or imply any connection with, sponsorship or endorsement by the Original Author, Licensor and/or Attribution Parties, as appropriate, of You or Your use of the Work, without the separate, express prior written permission of the Original Author, Licensor and/or Attribution Parties. c. Except as otherwise agreed in writing by the Licensor or as may be otherwise permitted by applicable law, if You Reproduce, Distribute or Publicly Perform the Work either by itself or as part of any Adaptations or Collections, You must not distort, mutilate, modify or take other derogatory action in relation to the Work which would be prejudicial to the Original Author's honor or reputation. Licensor agrees that in those jurisdictions (e.g. Japan), in which any exercise of the right granted in Section 3(b) of this License (the right to make Adaptations) would be deemed to be a distortion, mutilation, modification or other derogatory action prejudicial to the Original Author's honor and reputation, the Licensor will waive or not assert, as appropriate, this Section, to the fullest extent permitted by the applicable national law, to enable You to reasonably exercise Your right under Section 3(b) of this License (right to make Adaptations) but not otherwise. 5) Representations, Warranties and Disclaimer UNLESS OTHERWISE MUTUALLY AGREED TO BY THE PARTIES IN WRITING, LICENSOR OFFERS THE WORK AS-IS AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE WORK, EXPRESS, IMPLIED, STATUTORY OR OTHERWISE, INCLUDING, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTIBILITY, FITNESS FOR A PARTICULAR PURPOSE, NONINFRINGEMENT, OR THE ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OF ABSENCE OF ERRORS, WHETHER OR NOT DISCOVERABLE. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED WARRANTIES, SO SUCH EXCLUSION MAY NOT APPLY TO YOU. 6) Limitation on Liability . EXCEPT TO THE EXTENT REQUIRED BY APPLICABLE LAW, IN NO EVENT WILL LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY FOR ANY SPECIAL, INCIDENTAL, CONSEQUENTIAL, PUNITIVE OR EXEMPLARY DAMAGES ARISING OUT OF THIS LICENSE OR THE USE OF THE WORK, EVEN IF LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 7) Termination a. This License and the rights granted hereunder will terminate automatically upon any breach by You of the terms of this License. Individuals or entities who have received Adaptations or Collections from You under this License, however, will not have their licenses terminated provided such individuals or entities remain in full compliance with those licenses. Sections 1, 2, 5, 6, 7, and 8 will survive any termination of this License. b. Subject to the above terms and conditions, the license granted here is perpetual (for the duration of the applicable copyright in the Work). Notwithstanding the above, Licensor reserves the right to release the Work under different license terms or to stop distributing the Work at any time; provided, however that any such election will not serve to withdraw this License (or any other license that has been, or is required to be, granted under the terms of this License), and this License will continue in full force and effect unless terminated as stated above. 8) Miscellaneous a. Each time You Distribute or Publicly Perform the Work or a Collection, the Licensor offers to the recipient a license to the Work on the same terms and conditions as the license granted to You under this License. b. Each time You Distribute or Publicly Perform an Adaptation, Licensor offers to the recipient a license to the original Work on the same terms and conditions as the license granted to You under this License. c. If any provision of this License is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this License, and without further action by the parties to this agreement, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable. d. No term or provision of this License shall be deemed waived and no breach consented to unless such waiver or consent shall be in writing and signed by the party to be charged with such waiver or consent. e. This License constitutes the entire agreement between the parties with respect to the Work licensed here. There are no understandings, agreements or representations with respect to the Work not specified here. Licensor shall not be bound by any additional provisions that may appear in any communication from You. This License may not be modified without the mutual written agreement of the Licensor and You. f. The rights granted under, and the subject matter referenced, in this License were drafted utilizing the terminology of the Berne Convention for the Protection of Literary and Artistic Works (as amended on September 28, 1979), the Rome Convention of 1961, the WIPO Copyright Treaty of 1996, the WIPO Performances and Phonograms Treaty of 1996 and the Universal Copyright Convention (as revised on July 24, 1971). These rights and subject matter take effect in the relevant jurisdiction in which the License terms are sought to be enforced according to the corresponding provisions of the implementation of those treaty provisions in the applicable national law. If the standard suite of rights granted under applicable copyright law includes additional rights not granted under this License, such additional rights are deemed to be included in the License; this License is not intended to restrict the license of any rights under applicable law.","title":"Annex J: Creative Commons Attribution License 3.0 Unported"},{"location":"creative-commons-attribution-license-3.0-unported/#annex-j-creative-commons-attribution-license-30-unported-informative","text":"License THE WORK (AS DEFINED BELOW) IS PROVIDED UNDER THE TERMS OF THIS CREATIVE COMMONS PUBLIC LICENSE (\"CCPL\" OR \"LICENSE\"). THE WORK IS PROTECTED BY COPYRIGHT AND/OR OTHER APPLICABLE LAW. ANY USE OF THE WORK OTHER THAN AS AUTHORIZED UNDER THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED. BY EXERCISING ANY RIGHTS TO THE WORK PROVIDED HERE, YOU ACCEPT AND AGREE TO BE BOUND BY THE TERMS OF THIS LICENSE. TO THE EXTENT THIS LICENSE MAY BE CONSIDERED TO BE A CONTRACT, THE LICENSOR GRANTS YOU THE RIGHTS CONTAINED HERE IN CONSIDERATION OF YOUR ACCEPTANCE OF SUCH TERMS AND CONDITIONS. 1) Definitions a. \"Adaptation\" means a work based upon the Work, or upon the Work and other pre-existing works, such as a translation, adaptation, derivative work, arrangement of music or other alterations of a literary or artistic work, or phonogram or performance and includes cinematographic adaptations or any other form in which the Work may be recast, transformed, or adapted including in any form recognizably derived from the original, except that a work that constitutes a Collection will not be considered an Adaptation for the purpose of this License. For the avoidance of doubt, where the Work is a musical work, performance or phonogram, the synchronization of the Work in timed-relation with a moving image (\"synching\") will be considered an Adaptation for the purpose of this License. b. \"Collection\" means a collection of literary or artistic works, such as encyclopedias and anthologies, or performances, phonograms or broadcasts, or other works or subject matter other than works listed in Section 1(f) below, which, by reason of the selection and arrangement of their contents, constitute intellectual creations, in which the Work is included in its entirety in unmodified form along with one or more other contributions, each constituting separate and independent works in themselves, which together are assembled into a collective whole. A work that constitutes a Collection will not be considered an Adaptation (as defined above) for the purposes of this License. c. \"Distribute\" means to make available to the public the original and copies of the Work or Adaptation, as appropriate, through sale or other transfer of ownership. d. \"Licensor\" means the individual, individuals, entity or entities that offer(s) the Work under the terms of this License. e. \"Original Author\" means, in the case of a literary or artistic work, the individual, individuals, entity or entities who created the Work or if no individual or entity can be identified, the publisher; and in addition (i) in the case of a performance the actors, singers, musicians, dancers, and other persons who act, sing, deliver, declaim, play in, interpret or otherwise perform literary or artistic works or expressions of folklore; (ii) in the case of a phonogram the producer being the person or legal entity who first fixes the sounds of a performance or other sounds; and, (iii) in the case of broadcasts, the organization that transmits the broadcast. f. \"Work\" means the literary and/or artistic work offered under the terms of this License including without limitation any production in the literary, scientific and artistic domain, whatever may be the mode or form of its expression including digital form, such as a book, pamphlet and other writing; a lecture, address, sermon or other work of the same nature; a dramatic or dramatico-musical work; a choreographic work or entertainment in dumb show; a musical composition with or without words; a cinematographic work to which are assimilated works expressed by a process analogous to cinematography; a work of drawing, painting, architecture, sculpture, engraving or lithography; a photographic work to which are assimilated works expressed by a process analogous to photography; a work of applied art; an illustration, map, plan, sketch or three-dimensional work relative to geography, topography, architecture or science; a performance; a broadcast; a phonogram; a compilation of data to the extent it is protected as a copyrightable work; or a work performed by a variety or circus performer to the extent it is not otherwise considered a literary or artistic work. g. \"You\" means an individual or entity exercising rights under this License who has not previously violated the terms of this License with respect to the Work, or who has received express permission from the Licensor to exercise rights under this License despite a previous violation. h. \"Publicly Perform\" means to perform public recitations of the Work and to communicate to the public those public recitations, by any means or process, including by wire or wireless means or public digital performances; to make available to the public Works in such a way that members of the public may access these Works from a place and at a place individually chosen by them; to perform the Work to the public by any means or process and the communication to the public of the performances of the Work, including by public digital performance; to broadcast and rebroadcast the Work by any means including signs, sounds or images. i. \"Reproduce\" means to make copies of the Work by any means including without limitation by sound or visual recordings and the right of fixation and reproducing fixations of the Work, including storage of a protected performance or phonogram in digital form or other electronic medium. 2) Fair Dealing Rights . Nothing in this License is intended to reduce, limit, or restrict any uses free from copyright or rights arising from limitations or exceptions that are provided for in connection with the copyright protection under copyright law or other applicable laws. 3) License Grant . Subject to the terms and conditions of this License, Licensor hereby grants You a worldwide, royalty-free, non-exclusive, perpetual (for the duration of the applicable copyright) license to exercise the rights in the Work as stated below: a. to Reproduce the Work, to incorporate the Work into one or more Collections, and to Reproduce the Work as incorporated in the Collections; b. to create and Reproduce Adaptations provided that any such Adaptation, including any translation in any medium, takes reasonable steps to clearly label, demarcate or otherwise identify that changes were made to the original Work. For example, a translation could be marked \"The original work was translated from English to Spanish,\" or a modification could indicate \"The original work has been modified.\"; c. to Distribute and Publicly Perform the Work including as incorporated in Collections; and, d. to Distribute and Publicly Perform Adaptations. e. For the avoidance of doubt: i. Non-waivable Compulsory License Schemes . In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme cannot be waived, the Licensor reserves the exclusive right to collect such royalties for any exercise by You of the rights granted under this License; ii. Waivable Compulsory License Schemes . In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme can be waived, the Licensor waives the exclusive right to collect such royalties for any exercise by You of the rights granted under this License; and, iii. Voluntary License Schemes . The Licensor waives the right to collect royalties, whether individually or, in the event that the Licensor is a member of a collecting society that administers voluntary licensing schemes, via that society, from any exercise by You of the rights granted under this License. The above rights may be exercised in all media and formats whether now known or hereafter devised. The above rights include the right to make such modifications as are technically necessary to exercise the rights in other media and formats. Subject to Section 8(f), all rights not expressly granted by Licensor are hereby reserved. 4) Restrictions . The license granted in Section 3 above is expressly made subject to and limited by the following restrictions: a. You may Distribute or Publicly Perform the Work only under the terms of this License. You must include a copy of, or the Uniform Resource Identifier (URI) for, this License with every copy of the Work You Distribute or Publicly Perform. You may not offer or impose any terms on the Work that restrict the terms of this License or the ability of the recipient of the Work to exercise the rights granted to that recipient under the terms of the License. You may not sublicense the Work. You must keep intact all notices that refer to this License and to the disclaimer of warranties with every copy of the Work You Distribute or Publicly Perform. When You Distribute or Publicly Perform the Work, You may not impose any effective technological measures on the Work that restrict the ability of a recipient of the Work from You to exercise the rights granted to that recipient under the terms of the License. This Section 4(a) applies to the Work as incorporated in a Collection, but this does not require the Collection apart from the Work itself to be made subject to the terms of this License. If You create a Collection, upon notice from any Licensor You must, to the extent practicable, remove from the Collection any credit as required by Section 4(b), as requested. If You create an Adaptation, upon notice from any Licensor You must, to the extent practicable, remove from the Adaptation any credit as required by Section 4(b), as requested. b. If You Distribute, or Publicly Perform the Work or any Adaptations or Collections, You must, unless a request has been made pursuant to Section 4(a), keep intact all copyright notices for the Work and provide, reasonable to the medium or means You are utilizing: (i) the name of the Original Author (or pseudonym, if applicable) if supplied, and/or if the Original Author and/or Licensor designate another party or parties (e.g., a sponsor institute, publishing entity, journal) for attribution (\"Attribution Parties\") in Licensor's copyright notice, terms of service or by other reasonable means, the name of such party or parties; (ii) the title of the Work if supplied; (iii) to the extent reasonably practicable, the URI, if any, that Licensor specifies to be associated with the Work, unless such URI does not refer to the copyright notice or licensing information for the Work; and (iv) , consistent with Section 3(b), in the case of an Adaptation, a credit identifying the use of the Work in the Adaptation (e.g., \"French translation of the Work by Original Author,\" or \"Screenplay based on original Work by Original Author\"). The credit required by this Section 4 (b) may be implemented in any reasonable manner; provided, however, that in the case of a Adaptation or Collection, at a minimum such credit will appear, if a credit for all contributing authors of the Adaptation or Collection appears, then as part of these credits and in a manner at least as prominent as the credits for the other contributing authors. For the avoidance of doubt, You may only use the credit required by this Section for the purpose of attribution in the manner set out above and, by exercising Your rights under this License, You may not implicitly or explicitly assert or imply any connection with, sponsorship or endorsement by the Original Author, Licensor and/or Attribution Parties, as appropriate, of You or Your use of the Work, without the separate, express prior written permission of the Original Author, Licensor and/or Attribution Parties. c. Except as otherwise agreed in writing by the Licensor or as may be otherwise permitted by applicable law, if You Reproduce, Distribute or Publicly Perform the Work either by itself or as part of any Adaptations or Collections, You must not distort, mutilate, modify or take other derogatory action in relation to the Work which would be prejudicial to the Original Author's honor or reputation. Licensor agrees that in those jurisdictions (e.g. Japan), in which any exercise of the right granted in Section 3(b) of this License (the right to make Adaptations) would be deemed to be a distortion, mutilation, modification or other derogatory action prejudicial to the Original Author's honor and reputation, the Licensor will waive or not assert, as appropriate, this Section, to the fullest extent permitted by the applicable national law, to enable You to reasonably exercise Your right under Section 3(b) of this License (right to make Adaptations) but not otherwise. 5) Representations, Warranties and Disclaimer UNLESS OTHERWISE MUTUALLY AGREED TO BY THE PARTIES IN WRITING, LICENSOR OFFERS THE WORK AS-IS AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE WORK, EXPRESS, IMPLIED, STATUTORY OR OTHERWISE, INCLUDING, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTIBILITY, FITNESS FOR A PARTICULAR PURPOSE, NONINFRINGEMENT, OR THE ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OF ABSENCE OF ERRORS, WHETHER OR NOT DISCOVERABLE. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED WARRANTIES, SO SUCH EXCLUSION MAY NOT APPLY TO YOU. 6) Limitation on Liability . EXCEPT TO THE EXTENT REQUIRED BY APPLICABLE LAW, IN NO EVENT WILL LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY FOR ANY SPECIAL, INCIDENTAL, CONSEQUENTIAL, PUNITIVE OR EXEMPLARY DAMAGES ARISING OUT OF THIS LICENSE OR THE USE OF THE WORK, EVEN IF LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 7) Termination a. This License and the rights granted hereunder will terminate automatically upon any breach by You of the terms of this License. Individuals or entities who have received Adaptations or Collections from You under this License, however, will not have their licenses terminated provided such individuals or entities remain in full compliance with those licenses. Sections 1, 2, 5, 6, 7, and 8 will survive any termination of this License. b. Subject to the above terms and conditions, the license granted here is perpetual (for the duration of the applicable copyright in the Work). Notwithstanding the above, Licensor reserves the right to release the Work under different license terms or to stop distributing the Work at any time; provided, however that any such election will not serve to withdraw this License (or any other license that has been, or is required to be, granted under the terms of this License), and this License will continue in full force and effect unless terminated as stated above. 8) Miscellaneous a. Each time You Distribute or Publicly Perform the Work or a Collection, the Licensor offers to the recipient a license to the Work on the same terms and conditions as the license granted to You under this License. b. Each time You Distribute or Publicly Perform an Adaptation, Licensor offers to the recipient a license to the original Work on the same terms and conditions as the license granted to You under this License. c. If any provision of this License is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this License, and without further action by the parties to this agreement, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable. d. No term or provision of this License shall be deemed waived and no breach consented to unless such waiver or consent shall be in writing and signed by the party to be charged with such waiver or consent. e. This License constitutes the entire agreement between the parties with respect to the Work licensed here. There are no understandings, agreements or representations with respect to the Work not specified here. Licensor shall not be bound by any additional provisions that may appear in any communication from You. This License may not be modified without the mutual written agreement of the Licensor and You. f. The rights granted under, and the subject matter referenced, in this License were drafted utilizing the terminology of the Berne Convention for the Protection of Literary and Artistic Works (as amended on September 28, 1979), the Rome Convention of 1961, the WIPO Copyright Treaty of 1996, the WIPO Performances and Phonograms Treaty of 1996 and the Universal Copyright Convention (as revised on July 24, 1971). These rights and subject matter take effect in the relevant jurisdiction in which the License terms are sought to be enforced according to the corresponding provisions of the implementation of those treaty provisions in the applicable national law. If the standard suite of rights granted under applicable copyright law includes additional rights not granted under this License, such additional rights are deemed to be included in the License; this License is not intended to restrict the license of any rights under applicable law.","title":"Annex J Creative Commons Attribution License 3.0 Unported (Informative)"},{"location":"diffs-from-previous-editions/","text":"Annex I Differences from previous editions (Informative) I.1 Differences between V2.3 and V2.2.2 V2.3 has added new fields to improve the ability to capture security related information and to improve interoperabiility with other SBOM formats. Key changes include: Added fields to Clause 7 ( Package Information ) to describe \"Primary Package Purpose\" and standardize recording of \"Built Date\", \"Release Date\", \"Valid Until Date\". Added hash algorithms (SHA3-256, SHA3-384, SHA3-512, BLAKE2b-256, BLAKE2b-384, BLAKE2b-512, BLAKE3, ADLER32 ) to the set recognized by 7.10 (Package Checksum field) and 8.4 (File checksum field) Update Clause 7, 8, and 9 to make several of the licensing properties optional rather than requiring the use of \"NOASSERTION\" when no value is provided. Update Clause 11 to add the new relationship types: REQUIREMENT_DESCRIPTION_FOR and SPECIFICATION_FOR. Update Annex B ( License matching guidelines and templates ) to use the License List XML format Update Annex F ( External Repository Identifiers ) to expand security references to include advisory, fix, URL, SWID. Expand persistent identifiers to include gitoid. Update Annex G ( SPDX Lite Profile ) to include NTIA SBOM mandatory minimum fields as required. Update Annex H to documented how the snippet information in files to be consistent with REUSE recommendations. Added Annex K ( How To Use SPDX in Different Scenarios ) to illustrate linking to external security information, and illustrate how the NTIA SBOM mandatory minimum elements map to SPDX fields. I.2 Differences between V2.2.2 and V2.2.1 V2.2.2 fixed formatting, grammatical and spelling issues found since ISO/IEC 5962:2021 SPDX v2.2.1 was published. No new fields were added. Key changes include: Clarify Optional Cardinality contradictions Update OWL document Update JSON schema to fix typos and add missing required fields. Clarify Information on using License List short form identifiers. It fixed annex lettering inconsistencies. It also moved CC-BY-3.0 to the end of the spec to keep annex letters more consistent in future versions. Here is the translation between lettering in V2.2.2 and the version that came before it: Table I.1 \u2014 SPDX V2.2.2 Organizational Changes Title V2.2.1 ( spdx.dev ) V2.2.1 (ISO) V2.2.2 SPDX Lite Annex H/G* Annex G Annex G SPDX File Tags Annex I/H* Annex H Annex H Differences from Earlier SPDX Versions Annex J/I* Annex I Annex I Creative Commons Attribution License 3.0 Unported Annex G [omitted] Annex J [omitted in ISO version] * This edition featured inconsistent lettering. I.3 Differences between V2.2.1 and V2.2 There were no technical differences; V2.2.1 is V2.2 reformatted for submission to ISO via the PAS process. As a result, new clauses were added causing the previous clause-numbering sequence to change. Also, Annexes went from having Roman numbers to Latin letters. Here is the translation between numbering in V2.2.1 and the version that came before it: Table I.2 \u2014 SPDX V2.2.1 Organizational Changes Title V2.2 V2.2.1 ( spdx.dev ) V2.2.1 (ISO) Scope N/A Clause 1 Clause 1 Normative references N/A Clause 2 Clause 2 Terms and definitions N/A Clause 3 Clause 3 Conformance N/A Clause 4 Clause 4 Composition of an SPDX document N/A Clause 5 Clause 5 Document Creation Information Chapter 2 Clause 6 Clause 6 Package Information Chapter 3 Clause 7 Clause 7 File Information Chapter 4 Clause 8 Clause 8 Snippet Information Chapter 5 Clause 9 Clause 9 Other Licensing Information Detected Chapter 6 Clause 10 Clause 1 Relationship between SPDX Elements Information Chapter 7 Clause 11 Clause 1 Annotation Information Chapter 8 Clause 12 Clause 1 Review Information (deprecated) Chapter 9 Clause 13 Clause 1 SPDX License List Appendix I Annex A Annex A License Matching Guidelines and Templates Appendix II Annex B Annex B RDF Object Model and Identifier Syntax Appendix III Annex C Annex C SPDX License Expressions Appendix IV Annex D Annex D Using SPDX short identifiers in Source Files Appendix V Annex E Annex E External Repository Identifiers Appendix VI Annex F Annex F Creative Commons Attribution License 3.0 Unported Appendix VII Annex G [omitted] SPDX Lite Appendix VIII Annex H/G* Annex G SPDX File Tags Appendix IX Annex I/H* Annex H Differences from Earlier SPDX Versions N/A Annex J/I* Annex I * This edition featured inconsistent lettering. I.4 Differences from V2.2 and V2.1 JSON, YAML, and a development version of XML have been added as supported file formats. A new appendix \"SPDX File Tags\" has been added to describe a method that developers can use to document other SPDX file-specific information (such as copyright notices, file type, etc.) in a standardized and easily machine-readable manner. See Appendix IX for more information. A new appendix \"SPDX Lite\" has been added to document a lightweight subset of the SPDX specification for scenarios where a full SPDX document is not required. See Appendix VIII for more information. Additional relationship options have been added to enable expression of different forms of dependencies between SPDX elements. As well, NONE and NOASSERTION keywords are now permitted to be used with relationships to indicate what is unknown. Miscellaneous bug fixes and non-breaking improvements as reported on the mailing list and reported as issues on the spdx-spec GitHub repository. I.5 Differences between V2.1 and V2.0 Snippets have been added to allow a portion of a file to be identified as having different properties from the file it resides in. The use of snippets is completely optional and it is not mandatory for snippets to be identified. See section 5 Snippet Information for further details on the fields available to describe snippets. External Packages can now be referred to in SPDX documents. When there is no SPDX file information available to document the content of these external packages, then the filesAnalyzed attribute on a package should be set to false. See section 3.8 Files Analyzed for more information. Packages are now able to associate with an \u201cExternal Reference\u201d which allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package. See: section 3.21 External Reference, 3.22 External Reference Comment and Appendix VI: External Repository Identifiers for more information. The \u201cArtifact of Project\u201d fields at the file level are now deprecated, as they can be replaced by a relationship to the more descriptive External Packages. A new appendix \u201cUsing SPDX short identifiers in Source Files\u201d has been added to document the best practices to refer to the licenses in the SPDX license list that have emerged from the development community. See Appendix V: Using SPDX short identifiers in Source Files for more information. Miscellaneous bug fixes. I.6 Differences between V2.0 and V1.2 Abstraction has been applied to the underlying model with the inclusion of SPDX elements. With SPDX 2.0, the concept of an SPDX element is introduced (see Appendix III). This includes SPDX documents, SPDX files, and SPDX packages, each of which gets associated with an SPDX identifier which is denoted by \u201cSPDXRef-\u201d. SPDX relationships have been added to allow any SPDX element to have a relationship to other SPDX elements. Documented the origin of an SPDX hierarchy of sub-packages, documenting the origin of an SPDX element, and documenting modifications or corrections (annotations) to an SPDX element. The ability to reference SPDX elements outside the current SPDX document itself (external references). Additional file types are now supported. Additional checksum algorithms are now supported. Review Information section is deprecated. It is recommended to provide document reviews with Annotations (Section 7). A License Expression Syntax has been introduced and documented in Appendix IV.","title":"Annex I: Differences from Earlier SPDX Versions"},{"location":"diffs-from-previous-editions/#annex-i-differences-from-previous-editions-informative","text":"","title":"Annex I Differences from previous editions (Informative)"},{"location":"diffs-from-previous-editions/#i1-differences-between-v23-and-v222","text":"V2.3 has added new fields to improve the ability to capture security related information and to improve interoperabiility with other SBOM formats. Key changes include: Added fields to Clause 7 ( Package Information ) to describe \"Primary Package Purpose\" and standardize recording of \"Built Date\", \"Release Date\", \"Valid Until Date\". Added hash algorithms (SHA3-256, SHA3-384, SHA3-512, BLAKE2b-256, BLAKE2b-384, BLAKE2b-512, BLAKE3, ADLER32 ) to the set recognized by 7.10 (Package Checksum field) and 8.4 (File checksum field) Update Clause 7, 8, and 9 to make several of the licensing properties optional rather than requiring the use of \"NOASSERTION\" when no value is provided. Update Clause 11 to add the new relationship types: REQUIREMENT_DESCRIPTION_FOR and SPECIFICATION_FOR. Update Annex B ( License matching guidelines and templates ) to use the License List XML format Update Annex F ( External Repository Identifiers ) to expand security references to include advisory, fix, URL, SWID. Expand persistent identifiers to include gitoid. Update Annex G ( SPDX Lite Profile ) to include NTIA SBOM mandatory minimum fields as required. Update Annex H to documented how the snippet information in files to be consistent with REUSE recommendations. Added Annex K ( How To Use SPDX in Different Scenarios ) to illustrate linking to external security information, and illustrate how the NTIA SBOM mandatory minimum elements map to SPDX fields.","title":"I.1 Differences between V2.3 and V2.2.2  "},{"location":"diffs-from-previous-editions/#i2-differences-between-v222-and-v221","text":"V2.2.2 fixed formatting, grammatical and spelling issues found since ISO/IEC 5962:2021 SPDX v2.2.1 was published. No new fields were added. Key changes include: Clarify Optional Cardinality contradictions Update OWL document Update JSON schema to fix typos and add missing required fields. Clarify Information on using License List short form identifiers. It fixed annex lettering inconsistencies. It also moved CC-BY-3.0 to the end of the spec to keep annex letters more consistent in future versions. Here is the translation between lettering in V2.2.2 and the version that came before it: Table I.1 \u2014 SPDX V2.2.2 Organizational Changes Title V2.2.1 ( spdx.dev ) V2.2.1 (ISO) V2.2.2 SPDX Lite Annex H/G* Annex G Annex G SPDX File Tags Annex I/H* Annex H Annex H Differences from Earlier SPDX Versions Annex J/I* Annex I Annex I Creative Commons Attribution License 3.0 Unported Annex G [omitted] Annex J [omitted in ISO version] * This edition featured inconsistent lettering.","title":"I.2 Differences between V2.2.2 and V2.2.1 "},{"location":"diffs-from-previous-editions/#i3-differences-between-v221-and-v22","text":"There were no technical differences; V2.2.1 is V2.2 reformatted for submission to ISO via the PAS process. As a result, new clauses were added causing the previous clause-numbering sequence to change. Also, Annexes went from having Roman numbers to Latin letters. Here is the translation between numbering in V2.2.1 and the version that came before it: Table I.2 \u2014 SPDX V2.2.1 Organizational Changes Title V2.2 V2.2.1 ( spdx.dev ) V2.2.1 (ISO) Scope N/A Clause 1 Clause 1 Normative references N/A Clause 2 Clause 2 Terms and definitions N/A Clause 3 Clause 3 Conformance N/A Clause 4 Clause 4 Composition of an SPDX document N/A Clause 5 Clause 5 Document Creation Information Chapter 2 Clause 6 Clause 6 Package Information Chapter 3 Clause 7 Clause 7 File Information Chapter 4 Clause 8 Clause 8 Snippet Information Chapter 5 Clause 9 Clause 9 Other Licensing Information Detected Chapter 6 Clause 10 Clause 1 Relationship between SPDX Elements Information Chapter 7 Clause 11 Clause 1 Annotation Information Chapter 8 Clause 12 Clause 1 Review Information (deprecated) Chapter 9 Clause 13 Clause 1 SPDX License List Appendix I Annex A Annex A License Matching Guidelines and Templates Appendix II Annex B Annex B RDF Object Model and Identifier Syntax Appendix III Annex C Annex C SPDX License Expressions Appendix IV Annex D Annex D Using SPDX short identifiers in Source Files Appendix V Annex E Annex E External Repository Identifiers Appendix VI Annex F Annex F Creative Commons Attribution License 3.0 Unported Appendix VII Annex G [omitted] SPDX Lite Appendix VIII Annex H/G* Annex G SPDX File Tags Appendix IX Annex I/H* Annex H Differences from Earlier SPDX Versions N/A Annex J/I* Annex I * This edition featured inconsistent lettering.","title":"I.3 Differences between V2.2.1 and V2.2 "},{"location":"diffs-from-previous-editions/#i4-differences-from-v22-and-v21","text":"JSON, YAML, and a development version of XML have been added as supported file formats. A new appendix \"SPDX File Tags\" has been added to describe a method that developers can use to document other SPDX file-specific information (such as copyright notices, file type, etc.) in a standardized and easily machine-readable manner. See Appendix IX for more information. A new appendix \"SPDX Lite\" has been added to document a lightweight subset of the SPDX specification for scenarios where a full SPDX document is not required. See Appendix VIII for more information. Additional relationship options have been added to enable expression of different forms of dependencies between SPDX elements. As well, NONE and NOASSERTION keywords are now permitted to be used with relationships to indicate what is unknown. Miscellaneous bug fixes and non-breaking improvements as reported on the mailing list and reported as issues on the spdx-spec GitHub repository.","title":"I.4 Differences from V2.2 and V2.1 "},{"location":"diffs-from-previous-editions/#i5-differences-between-v21-and-v20","text":"Snippets have been added to allow a portion of a file to be identified as having different properties from the file it resides in. The use of snippets is completely optional and it is not mandatory for snippets to be identified. See section 5 Snippet Information for further details on the fields available to describe snippets. External Packages can now be referred to in SPDX documents. When there is no SPDX file information available to document the content of these external packages, then the filesAnalyzed attribute on a package should be set to false. See section 3.8 Files Analyzed for more information. Packages are now able to associate with an \u201cExternal Reference\u201d which allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package. See: section 3.21 External Reference, 3.22 External Reference Comment and Appendix VI: External Repository Identifiers for more information. The \u201cArtifact of Project\u201d fields at the file level are now deprecated, as they can be replaced by a relationship to the more descriptive External Packages. A new appendix \u201cUsing SPDX short identifiers in Source Files\u201d has been added to document the best practices to refer to the licenses in the SPDX license list that have emerged from the development community. See Appendix V: Using SPDX short identifiers in Source Files for more information. Miscellaneous bug fixes.","title":"I.5 Differences between V2.1 and V2.0 "},{"location":"diffs-from-previous-editions/#i6-differences-between-v20-and-v12","text":"Abstraction has been applied to the underlying model with the inclusion of SPDX elements. With SPDX 2.0, the concept of an SPDX element is introduced (see Appendix III). This includes SPDX documents, SPDX files, and SPDX packages, each of which gets associated with an SPDX identifier which is denoted by \u201cSPDXRef-\u201d. SPDX relationships have been added to allow any SPDX element to have a relationship to other SPDX elements. Documented the origin of an SPDX hierarchy of sub-packages, documenting the origin of an SPDX element, and documenting modifications or corrections (annotations) to an SPDX element. The ability to reference SPDX elements outside the current SPDX document itself (external references). Additional file types are now supported. Additional checksum algorithms are now supported. Review Information section is deprecated. It is recommended to provide document reviews with Annotations (Section 7). A License Expression Syntax has been introduced and documented in Appendix IV.","title":"I.6 Differences between V2.0 and V1.2 "},{"location":"document-creation-information/","text":"6 SPDX document creation information section 6.1 SPDX version field 6.1.1 Description Provide a reference number that can be used to understand how to parse and interpret the rest of the file. It will enable both future changes to the specification and to support backward compatibility. The version number consists of a major and minor version indicator. The major field shall be incremented when incompatible changes between versions are made (one or more sections are created, modified or deleted). The minor field shall be incremented when backwards compatible changes are made. The metadata for the SPDX version field is shown in Table 2. Table 2 \u2014 Metadata for the SPDX version field Attribute Value Required Yes Cardinality 1..1 Format SPDX-M.N where: M is major version number N is minor version number. 6.1.2 Intent Here, parties exchanging information in accordance with the SPDX specification need to provide 100% transparency as to which SPDX specification version such information is conforming to. 6.1.3 Examples EXAMPLE 1 Tag: SPDXVersion: SPDXVersion: SPDX-2.3 EXAMPLE 2 RDF: Property spdx:specVersion in class spdx:SpdxDocument <SpdxDocument rdf:about=\"...\"> <specVersion>SPDX-2.3</specVersion> </SpdxDocument> This specification uses the prefix rdf: to refer to the RDF/XML namespace: http://www.w3.org/1999/02/22-rdf-syntax-ns# 6.2 Data license field 6.2.1 Description Compliance with this document includes populating the SPDX fields therein with data related to such fields (\"SPDX-Metadata\"). This document contains numerous fields where an SPDX document creator may provide relevant explanatory text in SPDX-Metadata. Without opining on the lawfulness of \"database rights\" (in jurisdictions where applicable), such explanatory text is copyrightable subject matter in most Berne Convention countries. By using the SPDX specification, or any portion hereof, you hereby agree that any copyright rights (as determined by your jurisdiction) in any SPDX-Metadata, including without limitation explanatory text, shall be subject to the terms of the Creative Commons CC0 1.0 Universal license. For SPDX-Metadata not containing any copyright rights, you hereby agree and acknowledge that the SPDX-Metadata is provided to you \u201cas-is\u201d and without any representations or warranties of any kind concerning the SPDX-Metadata, express, implied, statutory or otherwise, including without limitation warranties of title, merchantability, fitness for a particular purpose, non-infringement, or the absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not discoverable, all to the greatest extent permissible under applicable law. The metadata for the data license field is shown in Table 3. Table 3 \u2014 Metadata for the data license field Attribute Value Required Yes Cardinality 1..1 Format CC0-1.0 6.2.2 Intent This is to alleviate any concern that content (the data or database) in an SPDX document is subject to any form of intellectual property right that could restrict the re-use of the information or the creation of another SPDX document for the same project(s). This approach avoids intellectual property and related restrictions over the SPDX document, however individuals can still contract with each other to restrict release of specific collections of SPDX documents (which map to software bill of materials) and the identification of the supplier of SPDX documents. 6.2.3 Examples EXAMPLE 1 Tag: DataLicense: DataLicense: CC0-1.0 EXAMPLE 2 RDF: Property spdx:dataLicense in class spdx:SpdxDocument <SpdxDocument rdf:about=\"...\"> <dataLicense rdf:resource=\"http://spdx.org/licenses/CC0-1.0\" /> </SpdxDocument> 6.3 SPDX identifier field 6.3.1 Description Identify the current SPDX document which may be referenced in relationships by other files, packages internally and documents externally. To reference another SPDX document in total, this identifier should be used with the external document identifier preceding it. See Clause 11 for examples. The metadata for the SPDX identifier field is shown in Table 4. Table 4 \u2014 Metadata for SPDX identifier field Attribute Value Required Yes Cardinality 1..1 Format SPDXRef-DOCUMENT 6.3.2 Intent Provide a way for the document to refer to itself in relationship to other elements. 6.3.3 Examples EXAMPLE 1 Tag: SPDXID: SPDXID: SPDXRef-DOCUMENT EXAMPLE 2 RDF: The URI for the document is the document namespace appended by #SPDXRef-DOCUMENT <spdx:SpdxDocument rdf:about=\"http://spdx.org/spdxdocs/spdx-example-444504E0-4F89-41D3-9A0C-0305E82C33123#SPDXRef-DOCUMENT\"> ... </spdx:SpdxDocument> 6.4 Document name field 6.4.1 Description Identify name of this document as designated by creator. The metadata for the document name field is shown in Table 5. Table 5 \u2014 Metadata for the document name field Attribute Value Required Yes Cardinality 1..1 Format Single line of text. 6.4.2 Intent Here, the name of each document is an important convention and easier to refer to than the URI. 6.4.3 Examples EXAMPLE 1 Tag: DocumentName: DocumentName: glibc-v2.3 DocumentName: ubuntu-14.04 EXAMPLE 2 RDF: Property spdx:name in class spdx:SpdxDocument <SpdxDocument rdf:about=\"...\"> <name>glibc-v2.3</name> </SpdxDocument> <SpdxDocument rdf:about=\"...\"> <name>ubuntu-14.04</name> </SpdxDocument> 6.5 SPDX document namespace field 6.5.1 Description Provide an SPDX document-specific namespace as a unique absolute Uniform Resource Identifier (URI) as specified in RFC-3986 , with the exception of the \u2018#\u2019 delimiter. The SPDX document URI shall not contain a URI \"part\" (e.g. the \"#\" character), since the \u2018#\u2019 is used in SPDX element URIs (packages, files, snippets, etc) to separate the document namespace from the element\u2019s SPDX identifier. Additionally, a scheme (e.g. \u201chttps:\u201d) is required. The URI shall be unique for the SPDX document including the specific version of the SPDX document. If the SPDX document is updated, thereby creating a new version, a new URI for the updated document shall be used. There may only be one URI for an SPDX document and only one SPDX document for a given URI. The metadata for the SPDX document namespace field is shown in Table 6. Table 6 \u2014 Metadata for the SPDX document namespace field Attribute Value Required Yes Cardinality 1..1 Format Unique absolute Uniform Resource Identifier (URI) as specified in RFC-3986 , with the following exceptions: The SPDX document URI cannot contain a URI \"part\" (e.g., the # delimiter), since the # is used to uniquely identify SPDX element identifiers. The URI shall contain a scheme (e.g., https: ). The URI shall be unique for the SPDX document including the specific version of the SPDX document. If the SPDX document is updated, thereby creating a new version, a new URI for the updated document shall be used. There can only be one URI for an SPDX document and only one SPDX document for a given URI. 6.5.2 Intent The URI provides an unambiguous mechanism for other SPDX documents to reference SPDX elements within this SPDX document. See 6.6 for a description on how external documents are referenced. Although it is not required, the URI can be constructed in a way which provides information on how the SPDX document can be found. For example, the URI can be a URL referencing the SPDX document itself, if it is available on the internet. A best practice for creating the URI for SPDX documents available on the public internet is https://[CreatorWebsite]/[pathToSpdx]/[DocumentName]-[UUID] where: CreatorWebsite is a website hosted by the creator of the document. (e.g. an SPDX document provided by SPDX would be spdx.org) PathToSpdx is a path to where SPDX documents are stored on the website (e.g. /spdx/spdxdocs) DocumentName is a name given to the SPDX document itself, typically the (set of) package name(s) followed by the version. (See 6.4 .) UUID is a universally unique identifier . The UUID could be a version 4 random UUID which can be generated from the Online UUID Generator or a version 5 UUID generated from a sha1 checksum known to be unique for this specific SPDX document version. If the creator does not own their own website, a default SPDX CreatorWebsite and PathToSpdx can be used spdx.org/spdxdocs . Note that the SPDX documents are not currently stored or accessible on this website. The URI is only used to create a unique ID following the above conventions. NOTE: The URI does not have to be accessible. It is only intended to provide a unique ID. In many cases, the URI will point to a Web accessible document, but this should not be assumed to be the case. 6.5.3 Examples EXAMPLE 1 Tag: DocumentNamespace: DocumentNamespace: https://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89-41D3-9A0C-0305E82... EXAMPLE 2 RDF: The unique ID is the URI for the SPDX document <SpdxDocument rdf:about=\"https://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89-41D3-9A0C-0305E82...\"> <rdfs:comment>This document was created using SPDX 2.3 using licenses from the web site.</rdfs:comment> </SpdxDocument> This specification uses the prefix rdfs: to refer to the RDF Schema namespace: http://www.w3.org/2000/01/rdf-schema# 6.6 External document references field 6.6.1 Description Identify any external SPDX documents referenced within this SPDX document. The metadata for the external document references field is shown in Table 7. Table 7 \u2014 Metadata for the external document references field Attribute Value Required No Cardinality 1..* Format DocumentRef- [idstring] [SPDX document URI] [Checksum] where [idstring] is a unique string containing letters, numbers, . , - and/or + . [SPDX document URI] is the unique ID for the external document as defined in 6.5 of that referenced document, [Checksum] is a checksum of the external document following the checksum format defined in 8.4 . 6.6.2 Intent SPDX elements within this document may be related to other SPDX elements referenced from external SPDX documents. An SPDX element could be a snippet, file, package, license reference or SPDX document. 6.6.3 Examples EXAMPLE 1 Tag: ExternalDocumentRef: ExternalDocumentRef:DocumentRef-spdx-tool-1.2 https://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89-41D3-9A0C-0305E82C3301 SHA1: d6a770ba38583ed4bb4525bd96e50461655d2759 EXAMPLE 2 RDF: Property spdx:externalDocumentRef in class spdx:SpdxDocument range ExternalDocumentRef . The ExternalDocumentRef contains two properties: spdxDocument - the SpdxDocument being referenced checksum - the checksum of the referenced SPDX document <SpdxDocument rdf:about=\"...\"> <externalDocumentRef rdf:ID=\"DocumentRef-spdx-tool-1.2\"> <ExternalDocumentRef> <spdxDocument rdf:about=\"https://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89-41D3-9A0C-0305E82...\" /> <checksum> <Checksum> <algorithm rdf:resource=\"checksumAlgorithm_sha1\"/> <checksumValue>d6a770ba38583ed4bb4525bd96e50461655d2758 </checksumValue> </Checksum> </checksum> </ExternalDocumentRef> </externalDocumentRef> </SpdxDocument> NOTE: In RDF, a namespace can be created for the external document reference if a short form name for the external reference is desired. 6.7 License list version field 6.7.1 Description An optional field for creators of the SPDX document to provide the version of the SPDX License List used when the SPDX document was created. The metadata for the license list version field is shown in Table 8. Table 8 \u2014 Metadata for the license list version field Attribute Value Required No Cardinality 0..1 Format M.N where: M is major version number N is minor version number. 6.7.2 Intent Recognizing that licenses are added to the SPDX License List with each subsequent version, the intent is to provide recipients of the SPDX document with the version of the SPDX License List used. This anticipates that in the future, an SPDX document might have used a version of the SPDX License List that is older than the then current one. 6.7.3 Examples EXAMPLE 1 Tag: LicenseListVersion: LicenseListVersion: 3.17 EXAMPLE 2 RDF: Property licenseListVersion in class spdx:CreationInfo <CreationInfo> <licenseListVersion>3.17</licenseListVersion> </CreationInfo> 6.8 Creator field 6.8.1 Description Identify who (or what, in the case of a tool) created the SPDX document. If the SPDX document was created by an individual, indicate the person's name. If the SPDX document was created on behalf of a company or organization, indicate the entity name. If the SPDX document was created using a software tool, indicate the name and version for that tool. If multiple participants or tools were involved, use multiple instances of this field. Person name or organization name may be designated as \u201canonymous\u201d if appropriate. The metadata for the creator field is shown in Table 9. Table 9 \u2014 Metadata for the creator field Attribute Value Required Yes Cardinality 1..* Format Single line of text with the following keywords: \"Person: person name\" and optional \"(email)\" \"Organization: organization\" and optional \"(email)\" \"Tool: toolidentifier-version\" 6.8.2 Intent Here, the generation method will assist the recipient of the SPDX document in assessing the general reliability/accuracy of the analysis information. 6.8.3 Examples EXAMPLE 1 Tag: Creator: Creator: Person: Jane Doe () Creator: Organization: ExampleCodeInspect () Creator: Tool: LicenseFind-1.0 EXAMPLE 2 RDF: Property spdx:creator in class spdx:CreationInfo <CreationInfo> <creator> Person: Jane Doe () </creator> <creator> Organization: ExampleCodeInspect () </creator> <creator> Tool: LicenseFind-1.0 </creator> </CreationInfo> 6.9 Created field 6.9.1 Description Identify when the SPDX document was originally created. The date is to be specified according to combined date and time in UTC format as specified in ISO 8601 standard. This field is distinct from the fields in Clause 12 , which involves the addition of information during a subsequent review. The metadata for the created field is shown in Table 10. Table 10 \u2014 Metadata for the created field Attribute Value Required Yes Cardinality 1..1 Format YYYY-MM-DDThh:mm:ssZ where: YYYY is year MM is month with leading zero DD is day with leading zero T is delimiter for time hh is hours with leading zero in 24-hour time mm is minutes with leading zero ss is seconds with leading zero Z is universal time indicator 6.9.2 Intent Here, the time stamp can serve as an indication as to whether the analysis needs to be updated. 6.9.3 Examples EXAMPLE 1 Tag: Created: Created: 2010-01-29T18:30:22Z EXAMPLE 2 RDF: Property spdx:created in class spdx:CreationInfo <CreationInfo> <created>2010-01-29T18:30:22Z</created> </CreationInfo> 6.10 Creator comment field 6.10.1 Description An optional field for creators of the SPDX document to provide general comments about the creation of the SPDX document or any other relevant comment not included in the other fields. The metadata for the Creator comment field is shown in Table 11. Table 11 \u2014 Metadata for the Creator comment field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines. In tag:value format this is delimited by <text> .. </text> , in RDF, it is delimited by <rdfs:comment> . 6.10.2 Intent Here, the intent is to provide recipients of the SPDX document with comments by the creator of the SPDX document. 6.10.3 Examples EXAMPLE 1 Tag: CreatorComment: CreatorComment: <text>This SPDX document was created by a combination of using a free tool, as indicated above, and manual analysis by several authors of the code.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:CreationInfo <CreationInfo> <rdfs:comment>This SPDX document was created by a combination of using a free tool, as indicated above, and manual analysis by several authors of the code.</rdfs:comment> </CreationInfo> 6.11 Document comment field 6.11.1 Description An optional field for creators of the SPDX document content to provide comments to the consumers of the SPDX document. The metadata for the document comment field is shown in Table 12. Table 12 \u2014 Metadata for the document comment field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines. In tag:value format this is delimited by <text> .. </text> , in RDF, it is delimited by <rdfs:comment> . 6.11.2 Intent Here, the intent is to provide readers/reviewers with comments by the creator of the SPDX document about the SPDX document. 6.11.3 Examples EXAMPLE 1 Tag: DocumentComment: DocumentComment: <text>This document was created using SPDX 2.3, version 3.17 of the SPDX License List and refering to licenses in file MyCompany.Approved.Licenses.spdx.</text> EXAMPLE 2 RDF: Property rdfs:comment in class SpdxDocument <SpdxDocument rdf:about=\"...\"> <rdfs:comment> This document was created using SPDX 2.3, version 3.17 of the SPDX License List and refering to licenses in file MyCompany.Approved.Licenses.spdx. </rdfs:comment> </SpdxDocument>","title":"Clause 6: Document Creation Information"},{"location":"document-creation-information/#6-spdx-document-creation-information-section","text":"","title":"6 SPDX document creation information section"},{"location":"document-creation-information/#61-spdx-version-field","text":"","title":"6.1 SPDX version field "},{"location":"document-creation-information/#611-description","text":"Provide a reference number that can be used to understand how to parse and interpret the rest of the file. It will enable both future changes to the specification and to support backward compatibility. The version number consists of a major and minor version indicator. The major field shall be incremented when incompatible changes between versions are made (one or more sections are created, modified or deleted). The minor field shall be incremented when backwards compatible changes are made. The metadata for the SPDX version field is shown in Table 2. Table 2 \u2014 Metadata for the SPDX version field Attribute Value Required Yes Cardinality 1..1 Format SPDX-M.N where: M is major version number N is minor version number.","title":"6.1.1 Description"},{"location":"document-creation-information/#612-intent","text":"Here, parties exchanging information in accordance with the SPDX specification need to provide 100% transparency as to which SPDX specification version such information is conforming to.","title":"6.1.2 Intent"},{"location":"document-creation-information/#613-examples","text":"EXAMPLE 1 Tag: SPDXVersion: SPDXVersion: SPDX-2.3 EXAMPLE 2 RDF: Property spdx:specVersion in class spdx:SpdxDocument <SpdxDocument rdf:about=\"...\"> <specVersion>SPDX-2.3</specVersion> </SpdxDocument> This specification uses the prefix rdf: to refer to the RDF/XML namespace: http://www.w3.org/1999/02/22-rdf-syntax-ns#","title":"6.1.3 Examples"},{"location":"document-creation-information/#62-data-license-field","text":"","title":"6.2 Data license field "},{"location":"document-creation-information/#621-description","text":"Compliance with this document includes populating the SPDX fields therein with data related to such fields (\"SPDX-Metadata\"). This document contains numerous fields where an SPDX document creator may provide relevant explanatory text in SPDX-Metadata. Without opining on the lawfulness of \"database rights\" (in jurisdictions where applicable), such explanatory text is copyrightable subject matter in most Berne Convention countries. By using the SPDX specification, or any portion hereof, you hereby agree that any copyright rights (as determined by your jurisdiction) in any SPDX-Metadata, including without limitation explanatory text, shall be subject to the terms of the Creative Commons CC0 1.0 Universal license. For SPDX-Metadata not containing any copyright rights, you hereby agree and acknowledge that the SPDX-Metadata is provided to you \u201cas-is\u201d and without any representations or warranties of any kind concerning the SPDX-Metadata, express, implied, statutory or otherwise, including without limitation warranties of title, merchantability, fitness for a particular purpose, non-infringement, or the absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not discoverable, all to the greatest extent permissible under applicable law. The metadata for the data license field is shown in Table 3. Table 3 \u2014 Metadata for the data license field Attribute Value Required Yes Cardinality 1..1 Format CC0-1.0","title":"6.2.1 Description"},{"location":"document-creation-information/#622-intent","text":"This is to alleviate any concern that content (the data or database) in an SPDX document is subject to any form of intellectual property right that could restrict the re-use of the information or the creation of another SPDX document for the same project(s). This approach avoids intellectual property and related restrictions over the SPDX document, however individuals can still contract with each other to restrict release of specific collections of SPDX documents (which map to software bill of materials) and the identification of the supplier of SPDX documents.","title":"6.2.2 Intent"},{"location":"document-creation-information/#623-examples","text":"EXAMPLE 1 Tag: DataLicense: DataLicense: CC0-1.0 EXAMPLE 2 RDF: Property spdx:dataLicense in class spdx:SpdxDocument <SpdxDocument rdf:about=\"...\"> <dataLicense rdf:resource=\"http://spdx.org/licenses/CC0-1.0\" /> </SpdxDocument>","title":"6.2.3 Examples"},{"location":"document-creation-information/#63-spdx-identifier-field","text":"","title":"6.3 SPDX identifier field "},{"location":"document-creation-information/#631-description","text":"Identify the current SPDX document which may be referenced in relationships by other files, packages internally and documents externally. To reference another SPDX document in total, this identifier should be used with the external document identifier preceding it. See Clause 11 for examples. The metadata for the SPDX identifier field is shown in Table 4. Table 4 \u2014 Metadata for SPDX identifier field Attribute Value Required Yes Cardinality 1..1 Format SPDXRef-DOCUMENT","title":"6.3.1 Description"},{"location":"document-creation-information/#632-intent","text":"Provide a way for the document to refer to itself in relationship to other elements.","title":"6.3.2 Intent"},{"location":"document-creation-information/#633-examples","text":"EXAMPLE 1 Tag: SPDXID: SPDXID: SPDXRef-DOCUMENT EXAMPLE 2 RDF: The URI for the document is the document namespace appended by #SPDXRef-DOCUMENT <spdx:SpdxDocument rdf:about=\"http://spdx.org/spdxdocs/spdx-example-444504E0-4F89-41D3-9A0C-0305E82C33123#SPDXRef-DOCUMENT\"> ... </spdx:SpdxDocument>","title":"6.3.3 Examples"},{"location":"document-creation-information/#64-document-name-field","text":"","title":"6.4 Document name field "},{"location":"document-creation-information/#641-description","text":"Identify name of this document as designated by creator. The metadata for the document name field is shown in Table 5. Table 5 \u2014 Metadata for the document name field Attribute Value Required Yes Cardinality 1..1 Format Single line of text.","title":"6.4.1 Description"},{"location":"document-creation-information/#642-intent","text":"Here, the name of each document is an important convention and easier to refer to than the URI.","title":"6.4.2 Intent"},{"location":"document-creation-information/#643-examples","text":"EXAMPLE 1 Tag: DocumentName: DocumentName: glibc-v2.3 DocumentName: ubuntu-14.04 EXAMPLE 2 RDF: Property spdx:name in class spdx:SpdxDocument <SpdxDocument rdf:about=\"...\"> <name>glibc-v2.3</name> </SpdxDocument> <SpdxDocument rdf:about=\"...\"> <name>ubuntu-14.04</name> </SpdxDocument>","title":"6.4.3 Examples"},{"location":"document-creation-information/#65-spdx-document-namespace-field","text":"","title":"6.5 SPDX document namespace field "},{"location":"document-creation-information/#651-description","text":"Provide an SPDX document-specific namespace as a unique absolute Uniform Resource Identifier (URI) as specified in RFC-3986 , with the exception of the \u2018#\u2019 delimiter. The SPDX document URI shall not contain a URI \"part\" (e.g. the \"#\" character), since the \u2018#\u2019 is used in SPDX element URIs (packages, files, snippets, etc) to separate the document namespace from the element\u2019s SPDX identifier. Additionally, a scheme (e.g. \u201chttps:\u201d) is required. The URI shall be unique for the SPDX document including the specific version of the SPDX document. If the SPDX document is updated, thereby creating a new version, a new URI for the updated document shall be used. There may only be one URI for an SPDX document and only one SPDX document for a given URI. The metadata for the SPDX document namespace field is shown in Table 6. Table 6 \u2014 Metadata for the SPDX document namespace field Attribute Value Required Yes Cardinality 1..1 Format Unique absolute Uniform Resource Identifier (URI) as specified in RFC-3986 , with the following exceptions: The SPDX document URI cannot contain a URI \"part\" (e.g., the # delimiter), since the # is used to uniquely identify SPDX element identifiers. The URI shall contain a scheme (e.g., https: ). The URI shall be unique for the SPDX document including the specific version of the SPDX document. If the SPDX document is updated, thereby creating a new version, a new URI for the updated document shall be used. There can only be one URI for an SPDX document and only one SPDX document for a given URI.","title":"6.5.1 Description"},{"location":"document-creation-information/#652-intent","text":"The URI provides an unambiguous mechanism for other SPDX documents to reference SPDX elements within this SPDX document. See 6.6 for a description on how external documents are referenced. Although it is not required, the URI can be constructed in a way which provides information on how the SPDX document can be found. For example, the URI can be a URL referencing the SPDX document itself, if it is available on the internet. A best practice for creating the URI for SPDX documents available on the public internet is https://[CreatorWebsite]/[pathToSpdx]/[DocumentName]-[UUID] where: CreatorWebsite is a website hosted by the creator of the document. (e.g. an SPDX document provided by SPDX would be spdx.org) PathToSpdx is a path to where SPDX documents are stored on the website (e.g. /spdx/spdxdocs) DocumentName is a name given to the SPDX document itself, typically the (set of) package name(s) followed by the version. (See 6.4 .) UUID is a universally unique identifier . The UUID could be a version 4 random UUID which can be generated from the Online UUID Generator or a version 5 UUID generated from a sha1 checksum known to be unique for this specific SPDX document version. If the creator does not own their own website, a default SPDX CreatorWebsite and PathToSpdx can be used spdx.org/spdxdocs . Note that the SPDX documents are not currently stored or accessible on this website. The URI is only used to create a unique ID following the above conventions. NOTE: The URI does not have to be accessible. It is only intended to provide a unique ID. In many cases, the URI will point to a Web accessible document, but this should not be assumed to be the case.","title":"6.5.2 Intent"},{"location":"document-creation-information/#653-examples","text":"EXAMPLE 1 Tag: DocumentNamespace: DocumentNamespace: https://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89-41D3-9A0C-0305E82... EXAMPLE 2 RDF: The unique ID is the URI for the SPDX document <SpdxDocument rdf:about=\"https://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89-41D3-9A0C-0305E82...\"> <rdfs:comment>This document was created using SPDX 2.3 using licenses from the web site.</rdfs:comment> </SpdxDocument> This specification uses the prefix rdfs: to refer to the RDF Schema namespace: http://www.w3.org/2000/01/rdf-schema#","title":"6.5.3 Examples"},{"location":"document-creation-information/#66-external-document-references-field","text":"","title":"6.6 External document references field "},{"location":"document-creation-information/#661-description","text":"Identify any external SPDX documents referenced within this SPDX document. The metadata for the external document references field is shown in Table 7. Table 7 \u2014 Metadata for the external document references field Attribute Value Required No Cardinality 1..* Format DocumentRef- [idstring] [SPDX document URI] [Checksum] where [idstring] is a unique string containing letters, numbers, . , - and/or + . [SPDX document URI] is the unique ID for the external document as defined in 6.5 of that referenced document, [Checksum] is a checksum of the external document following the checksum format defined in 8.4 .","title":"6.6.1 Description"},{"location":"document-creation-information/#662-intent","text":"SPDX elements within this document may be related to other SPDX elements referenced from external SPDX documents. An SPDX element could be a snippet, file, package, license reference or SPDX document.","title":"6.6.2 Intent"},{"location":"document-creation-information/#663-examples","text":"EXAMPLE 1 Tag: ExternalDocumentRef: ExternalDocumentRef:DocumentRef-spdx-tool-1.2 https://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89-41D3-9A0C-0305E82C3301 SHA1: d6a770ba38583ed4bb4525bd96e50461655d2759 EXAMPLE 2 RDF: Property spdx:externalDocumentRef in class spdx:SpdxDocument range ExternalDocumentRef . The ExternalDocumentRef contains two properties: spdxDocument - the SpdxDocument being referenced checksum - the checksum of the referenced SPDX document <SpdxDocument rdf:about=\"...\"> <externalDocumentRef rdf:ID=\"DocumentRef-spdx-tool-1.2\"> <ExternalDocumentRef> <spdxDocument rdf:about=\"https://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89-41D3-9A0C-0305E82...\" /> <checksum> <Checksum> <algorithm rdf:resource=\"checksumAlgorithm_sha1\"/> <checksumValue>d6a770ba38583ed4bb4525bd96e50461655d2758 </checksumValue> </Checksum> </checksum> </ExternalDocumentRef> </externalDocumentRef> </SpdxDocument> NOTE: In RDF, a namespace can be created for the external document reference if a short form name for the external reference is desired.","title":"6.6.3 Examples"},{"location":"document-creation-information/#67-license-list-version-field","text":"","title":"6.7 License list version field "},{"location":"document-creation-information/#671-description","text":"An optional field for creators of the SPDX document to provide the version of the SPDX License List used when the SPDX document was created. The metadata for the license list version field is shown in Table 8. Table 8 \u2014 Metadata for the license list version field Attribute Value Required No Cardinality 0..1 Format M.N where: M is major version number N is minor version number.","title":"6.7.1 Description"},{"location":"document-creation-information/#672-intent","text":"Recognizing that licenses are added to the SPDX License List with each subsequent version, the intent is to provide recipients of the SPDX document with the version of the SPDX License List used. This anticipates that in the future, an SPDX document might have used a version of the SPDX License List that is older than the then current one.","title":"6.7.2 Intent"},{"location":"document-creation-information/#673-examples","text":"EXAMPLE 1 Tag: LicenseListVersion: LicenseListVersion: 3.17 EXAMPLE 2 RDF: Property licenseListVersion in class spdx:CreationInfo <CreationInfo> <licenseListVersion>3.17</licenseListVersion> </CreationInfo>","title":"6.7.3 Examples"},{"location":"document-creation-information/#68-creator-field","text":"","title":"6.8 Creator field "},{"location":"document-creation-information/#681-description","text":"Identify who (or what, in the case of a tool) created the SPDX document. If the SPDX document was created by an individual, indicate the person's name. If the SPDX document was created on behalf of a company or organization, indicate the entity name. If the SPDX document was created using a software tool, indicate the name and version for that tool. If multiple participants or tools were involved, use multiple instances of this field. Person name or organization name may be designated as \u201canonymous\u201d if appropriate. The metadata for the creator field is shown in Table 9. Table 9 \u2014 Metadata for the creator field Attribute Value Required Yes Cardinality 1..* Format Single line of text with the following keywords: \"Person: person name\" and optional \"(email)\" \"Organization: organization\" and optional \"(email)\" \"Tool: toolidentifier-version\"","title":"6.8.1 Description"},{"location":"document-creation-information/#682-intent","text":"Here, the generation method will assist the recipient of the SPDX document in assessing the general reliability/accuracy of the analysis information.","title":"6.8.2 Intent"},{"location":"document-creation-information/#683-examples","text":"EXAMPLE 1 Tag: Creator: Creator: Person: Jane Doe () Creator: Organization: ExampleCodeInspect () Creator: Tool: LicenseFind-1.0 EXAMPLE 2 RDF: Property spdx:creator in class spdx:CreationInfo <CreationInfo> <creator> Person: Jane Doe () </creator> <creator> Organization: ExampleCodeInspect () </creator> <creator> Tool: LicenseFind-1.0 </creator> </CreationInfo>","title":"6.8.3 Examples"},{"location":"document-creation-information/#69-created-field","text":"","title":"6.9 Created field "},{"location":"document-creation-information/#691-description","text":"Identify when the SPDX document was originally created. The date is to be specified according to combined date and time in UTC format as specified in ISO 8601 standard. This field is distinct from the fields in Clause 12 , which involves the addition of information during a subsequent review. The metadata for the created field is shown in Table 10. Table 10 \u2014 Metadata for the created field Attribute Value Required Yes Cardinality 1..1 Format YYYY-MM-DDThh:mm:ssZ where: YYYY is year MM is month with leading zero DD is day with leading zero T is delimiter for time hh is hours with leading zero in 24-hour time mm is minutes with leading zero ss is seconds with leading zero Z is universal time indicator","title":"6.9.1 Description"},{"location":"document-creation-information/#692-intent","text":"Here, the time stamp can serve as an indication as to whether the analysis needs to be updated.","title":"6.9.2 Intent"},{"location":"document-creation-information/#693-examples","text":"EXAMPLE 1 Tag: Created: Created: 2010-01-29T18:30:22Z EXAMPLE 2 RDF: Property spdx:created in class spdx:CreationInfo <CreationInfo> <created>2010-01-29T18:30:22Z</created> </CreationInfo>","title":"6.9.3 Examples"},{"location":"document-creation-information/#610-creator-comment-field","text":"","title":"6.10 Creator comment field "},{"location":"document-creation-information/#6101-description","text":"An optional field for creators of the SPDX document to provide general comments about the creation of the SPDX document or any other relevant comment not included in the other fields. The metadata for the Creator comment field is shown in Table 11. Table 11 \u2014 Metadata for the Creator comment field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines. In tag:value format this is delimited by <text> .. </text> , in RDF, it is delimited by <rdfs:comment> .","title":"6.10.1 Description"},{"location":"document-creation-information/#6102-intent","text":"Here, the intent is to provide recipients of the SPDX document with comments by the creator of the SPDX document.","title":"6.10.2 Intent"},{"location":"document-creation-information/#6103-examples","text":"EXAMPLE 1 Tag: CreatorComment: CreatorComment: <text>This SPDX document was created by a combination of using a free tool, as indicated above, and manual analysis by several authors of the code.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:CreationInfo <CreationInfo> <rdfs:comment>This SPDX document was created by a combination of using a free tool, as indicated above, and manual analysis by several authors of the code.</rdfs:comment> </CreationInfo>","title":"6.10.3 Examples"},{"location":"document-creation-information/#611-document-comment-field","text":"","title":"6.11 Document comment field "},{"location":"document-creation-information/#6111-description","text":"An optional field for creators of the SPDX document content to provide comments to the consumers of the SPDX document. The metadata for the document comment field is shown in Table 12. Table 12 \u2014 Metadata for the document comment field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines. In tag:value format this is delimited by <text> .. </text> , in RDF, it is delimited by <rdfs:comment> .","title":"6.11.1 Description"},{"location":"document-creation-information/#6112-intent","text":"Here, the intent is to provide readers/reviewers with comments by the creator of the SPDX document about the SPDX document.","title":"6.11.2 Intent"},{"location":"document-creation-information/#6113-examples","text":"EXAMPLE 1 Tag: DocumentComment: DocumentComment: <text>This document was created using SPDX 2.3, version 3.17 of the SPDX License List and refering to licenses in file MyCompany.Approved.Licenses.spdx.</text> EXAMPLE 2 RDF: Property rdfs:comment in class SpdxDocument <SpdxDocument rdf:about=\"...\"> <rdfs:comment> This document was created using SPDX 2.3, version 3.17 of the SPDX License List and refering to licenses in file MyCompany.Approved.Licenses.spdx. </rdfs:comment> </SpdxDocument>","title":"6.11.3 Examples"},{"location":"external-repository-identifiers/","text":"Annex F External repository identifiers (Normative) F.1 Introduction This specification allows external resources to be referenced from SPDX documents. The identifiers are a combination of a category, a type and a locator. There are currently four defined categories: Security Package-Manager Persistent-Id Other The following sections provide details on the available types and the locator formats for each of the categories. F.2 Security It\u2019s recommended practice for SPDX SBOM document creators to include one or more package identifiers (e.g. CPE, GitBOM, PURL or SWID) when using SPDX external references for the purpose of resolving current security vulnerability information. The specified identifiers are contained in this section, F.2 Security, as well as section F.4. F.2.1 cpe22Type Locator Format: [c][pP][eE]:/[AHOaho]?(:[A-Za-z0-9\\._\\-~%]*){0,6} Contextual Example: cpe:/o:canonical:ubuntu_linux:10.04:-:lts External Reference Site: https://nvd.nist.gov/cpe Documentation: https://cpe.mitre.org/files/cpe-specification_2.2.pdf F.2.2 cpe23Type Locator Format: cpe:2\\.3:[aho\\*\\\u00ad] (:(((\\?*|\\*?)([a\u00adzA\u00adZ0\u00ad9\\\u00ad\\._]|(\\\\[\\\\\\*\\?! \"#$$%&'\\(\\)\\+,/:;<=>@\\[\\]\\^`\\{\\|}~]) )+(\\?*|\\*?))|[\\*\\\u00ad])){5} (:(([a\u00adzA\u00adZ]{2,3}(\u00ad([a\u00adzA\u00adZ]{2}|[0\u00ad9]{3 }))?)|[\\*\\\u00ad])) (:(((\\?*|\\*?)([a\u00adzA\u00adZ0\u00ad9\\\u00ad\\._]|(\\\\[\\\\\\*\\?! \"#$$%&'\\(\\)\\+,/:;<=>@\\[\\]\\^`\\{\\|}~]) )+(\\?*|\\*?))|[\\*\\\u00ad])){4} Contextual Example: cpe:2.3:o:canonical:ubuntu_linux:10.04:\u00ad:lts:*:*:*:*:* External Reference Site: https://nvd.nist.gov/cpe Documentation: https://nvlpubs.nist.gov/nistpubs/Legacy/IR/nistir7695.pdf F.2.3 advisory Locator Format: URL as defined by https://www.ietf.org/rfc/rfc1738.txt . Contextual Example: https://nvd.nist.gov/vuln/detail/CVE-2020-28498 . Documentation: A reference to the published security advisory (where advisory as defined per ISO 29147:2018). It may contain an impact statement whether a package (e.g. a product) is or is not affected by vulnerabilities. F.2.4 fix Locator Format: URL as defined by https://www.ietf.org/rfc/rfc1738.txt Contextual Example: https://github.com/indutny/elliptic/commit/441b7428 Documentation: A reference to the source code with a fix for the vulnerability (e.g., a GitHub commit). F.2.5 url Locator Format: URL as defined by https://www.ietf.org/rfc/rfc1738.txt . Contextual Example: https://github.com/christianlundkvist/blog/blob/master/2020_05_26_secp256k1_twist_attacks/secp256k1_twist_attacks.md Documentation: A reference to related security information of unspecified type. F.2.6 swid Locator format: URI as defined by https://www.ietf.org/archive/id/draft-ietf-sacm-coswid-21.html#name-uri-schemes . Conceptual Example: 2df9de35-0aff-4a86-ace6-f7dddd1ade4c External Reference Site: https://csrc.nist.gov/Projects/Software-Identification-SWID Documentation: https://www.ietf.org/archive/id/draft-ietf-sacm-coswid-21.html#section-2.3) Note: A binary tag-id should be base64url encoded. F.3 Package-Manager F.3.1 maven-central Locator Format: group:artifact[:version] ^[^:]+:[^:]+(:[^:]+)?$ Contextual Example: org.apache.tomcat:tomcat:9.0.0.M4 External Reference Site: https://repo1.maven.org/maven2/ Documentation: https://maven.apache.org F.3.2 npm Locator Format: package@version ^[^@]+@[^@]+$ Contextual Example: http-server@0.3.0 External Reference Site: https://www.npmjs.com Documentation: https://docs.npmjs.com/files/package.json F.3.3 nuget Locator Format: package/version ^[^\\/]+\\/[^\\/]+$ Contextual Example: Microsoft.AspNet.MVC/5.0.0 External Reference Site: https://www.nuget.org Documentation: https://docs.nuget.org F.3.4 bower Locator Format: package#version ^[^#]+#[^#]+$ Contextual Example: modernizr#2.6.2 External Reference Site: https://bower.io Documentation: https://bower.io/docs/api/#install F.3.5 purl Locator Format: scheme:type/namespace/name@version?qualifiers#subpath Contextual Example: pkg:docker/debian@sha256:2f04d3d33b6027bb74ecc81397abe780649ec89f1a2af18d7022737d0482cefe External Reference Site: https://github.com/package-url/purl-spec Documentation: https://github.com/package-url/purl-spec F.4 Persistent-Id F.4.1 swh These point to objects present in the Software Heritage archive by the means of SoftWare Heritage persistent Identifiers (SWHID), that are guaranteed to remain stable (persistent) over time. Their syntax is described below. Note that they are identifiers and not URLs. A persistent identifier can point to any software artifact (or \u201cobject\u201d) available in the Software Heritage archive. Objects come in different types, and most notably: contents directories revisions releases snapshots The SWHID follow the swh: IANA-registered URI scheme. Grammar for locator format: <locator> ::= \"swh\" \":\" <scheme_version> \":\" <object_type> \":\" <object_id> ; <scheme_version> ::= \"1\" ; <object_type> ::= \"cnt\" | \"dir\" | \"rev\" | \"rel\" | \"snp\" ; <object_id> ::= 40 * <hex_digit> ; *intrinsic object id, as hex-encoded SHA1* <hex_digit> ::= \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\" ; Examples: swh:1:cnt:94a9ed024d3859793618152ea559a168bbcbb5e2 points to the content of a file containing the full text of the GPL3 license swh:1:dir:d198bc9d7a6bcf6db04f476d29314f157507d505 points to a directory containing the source code of the Darktable photography application as it was at some point on 4 May 2017 swh:1:rev:309cf2674ee7a0749978cf8265ab91a60aea0f7d points to a commit in the development history of Darktable, dated 16 January 2017, that added undo/redo supports for masks swh:1:rel:22ece559cc7cc2364edc5e5593d63ae8bd229f9f points to Darktable release 2.3.0, dated 24 December 2016 swh:1:snp:c7c108084bc0bf3d81436bf980b46e98bd338453 points to a snapshot of the entire Darktable Git repository taken on 4 May 2017 from GitHub External Reference Site: Software Heritage persistent IDentifiers F.4.2 gitoid Locator Format: \"gitoid:\"<git object type>\":\"<hash algorithm>\":\"<hash value> Locator Format Reference: https://www.iana.org/assignments/uri-schemes/prov/gitoid Grammar for Locator Format: <git object type>: \"blob\", \"tree\", \"commit\", \"tag\". <hash algorithm>: \"sha1\", \"sha256\" <hash value> should be expressed as a hexadecimal string in lower case Contextual Examples: * gitoid:blob:sha1:261eeb9e9f8b2b4b0d119366dda99c6fd7d35c64 is the git identifier of a software artifact using the SHA1 algorithm * gitoid:blob:sha256:3557f7eb43c621c71483743d4b37059bb80933e7f71277c0c3b3846159d1f61c is the git identifier of a software artifact using the SHA256 algorithm External Reference Site: https://gitbom.dev/ Documentation: gitoid stands for Git Object ID. A gitoid of type blob is a unique hash of a software artifact. Git relies on a Merkle Tree to index stored objects. See https://git-scm.com/book/en/v2/Git-Internals-Git-Objects . GitBOM is an amalgam of the terms \"Git\" and \"SBOM\". GitBOM is a minimalistic schema to describe software dependency graphs using a Merkle Tree, and is inspired by Git. A gitoid may refer to either the software artifact or its GitBOM document; this ambiguity exists because the GitBOM document is itself an artifact, and the gitoid of that artifact is its valid locator. F.5 Other F.5.1 [idstring] Locator Format: No spaces, but anything else goes","title":"Annex F: External Repository Identifiers"},{"location":"external-repository-identifiers/#annex-f-external-repository-identifiers-normative","text":"","title":"Annex F External repository identifiers (Normative)"},{"location":"external-repository-identifiers/#f1-introduction","text":"This specification allows external resources to be referenced from SPDX documents. The identifiers are a combination of a category, a type and a locator. There are currently four defined categories: Security Package-Manager Persistent-Id Other The following sections provide details on the available types and the locator formats for each of the categories.","title":"F.1 Introduction "},{"location":"external-repository-identifiers/#f2-security","text":"It\u2019s recommended practice for SPDX SBOM document creators to include one or more package identifiers (e.g. CPE, GitBOM, PURL or SWID) when using SPDX external references for the purpose of resolving current security vulnerability information. The specified identifiers are contained in this section, F.2 Security, as well as section F.4.","title":"F.2 Security "},{"location":"external-repository-identifiers/#f21-cpe22type","text":"Locator Format: [c][pP][eE]:/[AHOaho]?(:[A-Za-z0-9\\._\\-~%]*){0,6} Contextual Example: cpe:/o:canonical:ubuntu_linux:10.04:-:lts External Reference Site: https://nvd.nist.gov/cpe Documentation: https://cpe.mitre.org/files/cpe-specification_2.2.pdf","title":"F.2.1 cpe22Type "},{"location":"external-repository-identifiers/#f22-cpe23type","text":"Locator Format: cpe:2\\.3:[aho\\*\\\u00ad] (:(((\\?*|\\*?)([a\u00adzA\u00adZ0\u00ad9\\\u00ad\\._]|(\\\\[\\\\\\*\\?! \"#$$%&'\\(\\)\\+,/:;<=>@\\[\\]\\^`\\{\\|}~]) )+(\\?*|\\*?))|[\\*\\\u00ad])){5} (:(([a\u00adzA\u00adZ]{2,3}(\u00ad([a\u00adzA\u00adZ]{2}|[0\u00ad9]{3 }))?)|[\\*\\\u00ad])) (:(((\\?*|\\*?)([a\u00adzA\u00adZ0\u00ad9\\\u00ad\\._]|(\\\\[\\\\\\*\\?! \"#$$%&'\\(\\)\\+,/:;<=>@\\[\\]\\^`\\{\\|}~]) )+(\\?*|\\*?))|[\\*\\\u00ad])){4} Contextual Example: cpe:2.3:o:canonical:ubuntu_linux:10.04:\u00ad:lts:*:*:*:*:* External Reference Site: https://nvd.nist.gov/cpe Documentation: https://nvlpubs.nist.gov/nistpubs/Legacy/IR/nistir7695.pdf","title":"F.2.2 cpe23Type "},{"location":"external-repository-identifiers/#f23-advisory","text":"Locator Format: URL as defined by https://www.ietf.org/rfc/rfc1738.txt . Contextual Example: https://nvd.nist.gov/vuln/detail/CVE-2020-28498 . Documentation: A reference to the published security advisory (where advisory as defined per ISO 29147:2018). It may contain an impact statement whether a package (e.g. a product) is or is not affected by vulnerabilities.","title":"F.2.3 advisory "},{"location":"external-repository-identifiers/#f24-fix","text":"Locator Format: URL as defined by https://www.ietf.org/rfc/rfc1738.txt Contextual Example: https://github.com/indutny/elliptic/commit/441b7428 Documentation: A reference to the source code with a fix for the vulnerability (e.g., a GitHub commit).","title":"F.2.4 fix "},{"location":"external-repository-identifiers/#f25-url","text":"Locator Format: URL as defined by https://www.ietf.org/rfc/rfc1738.txt . Contextual Example: https://github.com/christianlundkvist/blog/blob/master/2020_05_26_secp256k1_twist_attacks/secp256k1_twist_attacks.md Documentation: A reference to related security information of unspecified type.","title":"F.2.5 url "},{"location":"external-repository-identifiers/#f26-swid","text":"Locator format: URI as defined by https://www.ietf.org/archive/id/draft-ietf-sacm-coswid-21.html#name-uri-schemes . Conceptual Example: 2df9de35-0aff-4a86-ace6-f7dddd1ade4c External Reference Site: https://csrc.nist.gov/Projects/Software-Identification-SWID Documentation: https://www.ietf.org/archive/id/draft-ietf-sacm-coswid-21.html#section-2.3) Note: A binary tag-id should be base64url encoded.","title":"F.2.6 swid "},{"location":"external-repository-identifiers/#f3-package-manager","text":"","title":"F.3 Package-Manager "},{"location":"external-repository-identifiers/#f31-maven-central","text":"Locator Format: group:artifact[:version] ^[^:]+:[^:]+(:[^:]+)?$ Contextual Example: org.apache.tomcat:tomcat:9.0.0.M4 External Reference Site: https://repo1.maven.org/maven2/ Documentation: https://maven.apache.org","title":"F.3.1 maven-central "},{"location":"external-repository-identifiers/#f32-npm","text":"Locator Format: package@version ^[^@]+@[^@]+$ Contextual Example: http-server@0.3.0 External Reference Site: https://www.npmjs.com Documentation: https://docs.npmjs.com/files/package.json","title":"F.3.2 npm "},{"location":"external-repository-identifiers/#f33-nuget","text":"Locator Format: package/version ^[^\\/]+\\/[^\\/]+$ Contextual Example: Microsoft.AspNet.MVC/5.0.0 External Reference Site: https://www.nuget.org Documentation: https://docs.nuget.org","title":"F.3.3 nuget "},{"location":"external-repository-identifiers/#f34-bower","text":"Locator Format: package#version ^[^#]+#[^#]+$ Contextual Example: modernizr#2.6.2 External Reference Site: https://bower.io Documentation: https://bower.io/docs/api/#install","title":"F.3.4 bower "},{"location":"external-repository-identifiers/#f35-purl","text":"Locator Format: scheme:type/namespace/name@version?qualifiers#subpath Contextual Example: pkg:docker/debian@sha256:2f04d3d33b6027bb74ecc81397abe780649ec89f1a2af18d7022737d0482cefe External Reference Site: https://github.com/package-url/purl-spec Documentation: https://github.com/package-url/purl-spec","title":"F.3.5 purl "},{"location":"external-repository-identifiers/#f4-persistent-id","text":"","title":"F.4 Persistent-Id "},{"location":"external-repository-identifiers/#f41-swh","text":"These point to objects present in the Software Heritage archive by the means of SoftWare Heritage persistent Identifiers (SWHID), that are guaranteed to remain stable (persistent) over time. Their syntax is described below. Note that they are identifiers and not URLs. A persistent identifier can point to any software artifact (or \u201cobject\u201d) available in the Software Heritage archive. Objects come in different types, and most notably: contents directories revisions releases snapshots The SWHID follow the swh: IANA-registered URI scheme. Grammar for locator format: <locator> ::= \"swh\" \":\" <scheme_version> \":\" <object_type> \":\" <object_id> ; <scheme_version> ::= \"1\" ; <object_type> ::= \"cnt\" | \"dir\" | \"rev\" | \"rel\" | \"snp\" ; <object_id> ::= 40 * <hex_digit> ; *intrinsic object id, as hex-encoded SHA1* <hex_digit> ::= \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\" ; Examples: swh:1:cnt:94a9ed024d3859793618152ea559a168bbcbb5e2 points to the content of a file containing the full text of the GPL3 license swh:1:dir:d198bc9d7a6bcf6db04f476d29314f157507d505 points to a directory containing the source code of the Darktable photography application as it was at some point on 4 May 2017 swh:1:rev:309cf2674ee7a0749978cf8265ab91a60aea0f7d points to a commit in the development history of Darktable, dated 16 January 2017, that added undo/redo supports for masks swh:1:rel:22ece559cc7cc2364edc5e5593d63ae8bd229f9f points to Darktable release 2.3.0, dated 24 December 2016 swh:1:snp:c7c108084bc0bf3d81436bf980b46e98bd338453 points to a snapshot of the entire Darktable Git repository taken on 4 May 2017 from GitHub External Reference Site: Software Heritage persistent IDentifiers","title":"F.4.1 swh "},{"location":"external-repository-identifiers/#f42-gitoid","text":"Locator Format: \"gitoid:\"<git object type>\":\"<hash algorithm>\":\"<hash value> Locator Format Reference: https://www.iana.org/assignments/uri-schemes/prov/gitoid Grammar for Locator Format: <git object type>: \"blob\", \"tree\", \"commit\", \"tag\". <hash algorithm>: \"sha1\", \"sha256\" <hash value> should be expressed as a hexadecimal string in lower case Contextual Examples: * gitoid:blob:sha1:261eeb9e9f8b2b4b0d119366dda99c6fd7d35c64 is the git identifier of a software artifact using the SHA1 algorithm * gitoid:blob:sha256:3557f7eb43c621c71483743d4b37059bb80933e7f71277c0c3b3846159d1f61c is the git identifier of a software artifact using the SHA256 algorithm External Reference Site: https://gitbom.dev/ Documentation: gitoid stands for Git Object ID. A gitoid of type blob is a unique hash of a software artifact. Git relies on a Merkle Tree to index stored objects. See https://git-scm.com/book/en/v2/Git-Internals-Git-Objects . GitBOM is an amalgam of the terms \"Git\" and \"SBOM\". GitBOM is a minimalistic schema to describe software dependency graphs using a Merkle Tree, and is inspired by Git. A gitoid may refer to either the software artifact or its GitBOM document; this ambiguity exists because the GitBOM document is itself an artifact, and the gitoid of that artifact is its valid locator.","title":"F.4.2 gitoid "},{"location":"external-repository-identifiers/#f5-other","text":"","title":"F.5 Other "},{"location":"external-repository-identifiers/#f51-idstring","text":"Locator Format: No spaces, but anything else goes","title":"F.5.1 [idstring] "},{"location":"file-information/","text":"8 File information section 8.1 File name field 8.1.1 Description Identify the full path and filename that corresponds to the file information in this section. The metadata for the file name field is shown in Table 36. Table 36 \u2014 Metadata for the file name field Attribute Value Required Yes Cardinality 1..1 Format A relative filename with the root of the package archive or directory. In general, every filename is preceded with a ./ , see http://www.ietf.org/rfc/rfc3986.txt for syntax. 8.1.2 Intent To aid finding the correct file which corresponds to the file information. 8.1.3 Examples EXAMPLE 1 Tag: FileName: FileName: ./package/foo.c EXAMPLE 2 RDF: Property spdx:fileName in class spdx:File <File rdf:about=\"...\"> <fileName>./package/foo.c</fileName> ... </File> 8.2 File SPDX identifier field 8.2.1 Description Uniquely identify any element in an SPDX document which might be referenced by other elements. These might be referenced internally and externally with the addition of the SPDX document identifier. The metadata for the file SPDX identifier field is shown in Table 37. Table 37 \u2014 Metadata for the file SPDX identifier field Attribute Value Required Yes Cardinality 1..1 Format \"SPDXRef-\" [idstring] where [idstring] is a unique string containing letters, numbers, . and/or - . 8.2.2 Intent There may be several versions of the same file within an SPDX document. Each element needs to be able to be referred to uniquely so that relationships between elements can be clearly articulated. 8.2.3 Examples EXAMPLE 1 Tag: SPDXID: SPDXID: SPDXRef-1 EXAMPLE 2 RDF: The URI for the element will follow the form: [SpdxDocumentURI]#SPDXRef-[idstring] where [SpdxDocumentURI] is the URI for the SPDX document containing the element. Using xml:base: <rdf:RDF xml:base=\"http://acme.com/spdxdocs/acmeproj/v1.2/1BE2A4FF-5F1A-48D3-8483-28A9B0349A1B\" ... <File rdf:about=\"#SPDXRef-1\"> ... </File> Using document URI: <File rdf:about=\"http://acme.com/spdxdocs/acmeproj/v1.2/1BE2A4FF-5F1A-48D3-8483-28A9B0349A1B#SPDXRef-1\"> ... </File> 8.3 File type field 8.3.1 Description This field provides information about the type of file identified. File Type is intrinsic to the file, independent of how the file is being used. A file may have more than one file type assigned to it, however the options to populate this field are limited to: SOURCE if the file is human readable source code (.c, .html, etc.); BINARY if the file is a compiled object, target image or binary executable (.o, .a, etc.); ARCHIVE if the file represents an archive (.tar, .jar, etc.); APPLICATION if the file is associated with a specific application type (MIME type of application/*); AUDIO if the file is associated with an audio file (MIME type of audio/* , e.g. .mp3); IMAGE if the file is associated with a picture image file (MIME type of image/*, e.g., .jpg, .gif); TEXT if the file is human readable text file (MIME type of text/*); VIDEO if the file is associated with a video file type (MIME type of video/*); DOCUMENTATION if the file serves as documentation; SPDX if the file is an SPDX document; OTHER if the file doesn't fit into the above categories (generated artifacts, data files, etc.) The metadata for the file type field is shown in Table 38. Table 38 \u2014 Metadata for the file type field Attribute Value Required No Cardinality 0..* Format SOURCE | BINARY | ARCHIVE | APPLICATION | AUDIO | IMAGE | TEXT | VIDEO | DOCUMENTATION | SPDX | OTHER 8.3.2 Intent Here, this field is a reasonable estimation of the file type, from a developer perspective. 8.3.3 Examples EXAMPLE 1 Tag: FileType: FileType: BINARY For a README.TXT FileType: TEXT FileType: DOCUMENTATION foo.exe FileType: BINARY FileType: APPLICATION EXAMPLE 2 RDF: Property spdx:fileType in class spdx:File <File rdf:about=\"file1\"> <fileType rdf:resource=\"fileType_binary\" /> </File> Where file2 is a README.TXT <File rdf:about=\"file2\"> <fileType rdf:resource =\"http://spdx.org/rdf/terms#fileType_text\" /> <fileType rdf:resource =\"http://spdx.org/rdf/terms#fileType_documentation\" /> </File> 8.4 File checksum field 8.4.1 Description This field provides the result from some specific checksum algorithm. Checksum algorithms consume data from the file and produce a short, fix-sized summary that is sensitive to changes in the file's data. Any random change to the file's data will (with high likelihood) result in a different checksum value. The metadata for the file checksum field is shown in Table 39. Table 39 \u2014 Metadata for the file checksum field Attribute Value Required Yes Cardinality 1..1 for the SHA1 algorithm, 0..* for all other algorithms Algorithm SHA1 is to be used on the file. Other algorithms that can be provided optionally include SHA224 , SHA256 , SHA384 , SHA512 , SHA3-256 , SHA3-384 , SHA3-512 , BLAKE2b-256 , BLAKE2b-384 , BLAKE2b-512 , BLAKE3 , MD2 , MD4 , MD5 , MD6 , ADLER32 Format In tag:value there are three components, an algorithm identifier (SHA1), a separator (\u201c:\u201d) and a checksum value. The RDF shall also contain an algorithm identifier and a checksum value. For example, when the algorithm identifier is SHA1, the checksum value should be a 160-bit value represented as 40 lowercase hexadecimal digits. For other algorithms, an appropriate number of hexadecimal digits is expected. 8.4.2 Intent Checksum values are used primarily to protect a file's data against accidental corruption during transmissions or storage. Cryptographically strong checksum algorithms may be used to detect deliberate corruption, but only if the authenticity of the checksum value may be verified. Checksum values may also be used as an identifier for the file's data that is (with high likelihood) unique. Such an identifier may be used to establish the desired version of a file, if multiple versions are available. 8.4.3 Examples EXAMPLE 1 Tag: FileChecksum: FileChecksum: SHA1: d6a770ba38583ed4bb4525bd96e50461655d2758 FileChecksum: MD5: 624c1abb3664f4b35547e7c73864ad24 EXAMPLE 2 RDF: Property spdx:Checksum in class spdx:File <File rdf:about=\"...\"> <checksum> <Checksum> <algorithm rdf:resource =\"http://spdx.org/rdf/terms#checksumAlgorithm_sha1\"/> <checksumValue>d6a770ba38583ed4bb4525bd96e50461655d2758 </checksumValue> </Checksum> </checksum> <checksum> <Checksum> <algorithm rdf:resource =\"http://spdx.org/rdf/terms#checksumAlgorithm_md5\"/> <checksumValue> 624c1abb3664f4b35547e7c73864ad24 </checksumValue> </Checksum> </checksum> </File> 8.5 Concluded license field 8.5.1 Description This field contains the license the SPDX document creator has concluded as governing the file or alternative values if the governing license cannot be determined. The options to populate this field are limited to: A valid SPDX License Expression as defined in Annex D ; NONE , if the SPDX document creator concludes there is no license available for this file; or NOASSERTION , if: the SPDX document creator has attempted to, but cannot reach a reasonable objective determination; the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If the Concluded License is not the same as the License Information in File, a written explanation should be provided in the Comments on License field ( 8.7 ). With respect to NOASSERTION , a written explanation in the Comments on License field ( 8.7 ) is preferred. If the Concluded License field is not present for a file, it implies an equivalent meaning to NOASSERTION . The metadata for the concluded license field is shown in Table 40. Table 40 \u2014 Metadata for the concluded license field Attribute Value Required No Cardinality 0..1 Format <SPDX License Expression> | NONE | NOASSERTION where: <SPDX License Expression> is a valid SPDX License Expression as defined in Annex D . 8.5.2 Intent Here, the intent is for the SPDX document creator to analyze the License Information in File ( 8.6 ) and other objective information, e.g., \u201cCOPYING FILE,\u201d along with the results from any scanning tools, to arrive at a reasonably objective conclusion as to what license governs the file. 8.5.3 Examples EXAMPLE 1 Tag: LicenseConcluded: LicenseConcluded: LGPL-2.0-only LicenseConcluded: (LGPL-2.0-only OR LicenseRef-2) EXAMPLE 2 RDF: Property spdx:licenseConcluded in class spdx:File <File rdf:about=\"file\"> <licenseConcluded>LGPL-2.0-only</licenseConcluded> </File> <File rdf:about=\"...\"> <licenseConcluded> <DisjunctiveLicenseSet> <member rdf:resource =\"http://spdx.org/licenses/LGPL-2.0-only\"/> <member rdf:resource=\"#LicenseRef-2\"/> </DisjunctiveLicenseSet> </licenseConcluded> </File> 8.6 License information in file field 8.6.1 Description This field contains the license information actually found in the file, if any. This information is most commonly found in the header of the file, although it might be in other areas of the actual file. Any license information not actually in the file, e.g., \u201cCOPYING.txt\u201d file in a top-level directory, should not be reflected in this field. The options to populate this field are limited to: A valid SPDX License Expression as defined in Annex D ; NONE , if the file contains no license information whatsoever; or NOASSERTION , if: the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If license information for more than one license is contained in the file or if the license information offers the package recipient a choice of licenses, then each of the choices should be listed as a separate entry. If the License Information in File field is not present for a file, it implies an equivalent meaning to NOASSERTION . The metadata for the license information in file field is shown in Table 41. Table 41 \u2014 Metadata for the license information in file field Attribute Value Required No Cardinality 0..* Format <SPDX License Expression> | NONE | NOASSERTION where: <SPDX License Expression> is a valid SPDX License Expression as defined in Annex D . 8.6.2 Intent Here, the intent is to provide the license information actually in the file, as compared to the Concluded License field. 8.6.3 Examples EXAMPLE 1 Tag: LicenseInfoInFile: LicenseInfoInFile: GPL-2.0-only LicenseInfoInFile: LicenseRef-2 EXAMPLE 2 RDF: Property spdx:licenseInfoInFile in class spdx:File <File rdf:about=\"file1\"> <licenseInfoInFile rdf:resource =\"http://spdx.org/licenses/GPL-2.0-only\" /> <licenseInfoInFile rdf:resource=\"#LicenseRef-2\" /> </File> 8.7 Comments on license field 8.7.1 Description This field provides a place for the SPDX document creator to record any relevant background references or analysis that went in to arriving at the Concluded License for a file. If the Concluded License does not match the License Information in File, this should be explained by the SPDX document creator. It is also preferable to include an explanation here when the Concluded License is NOASSERTION . The metadata for the comments on license field is shown in Table 42. Table 42 \u2014 Metadata for the comments on license field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines 8.7.2 Intent Here, the intent is to provide the recipient of the SPDX document with a detailed explanation of how the Concluded License was determined if it does not match the License Information in File, is marked NOASSERTION , or other helpful information relevant to determining the license of the file. 8.7.3 Examples EXAMPLE 1 Tag: LicenseComments: In tag:value format multiple lines are delimited by <text> .. </text> . LicenseComments: <text>The concluded license was taken from the package level that the file was included in. This information was found in the COPYING.txt file in the xyz directory.</text> EXAMPLE 2 RDF: Property spdx:licenseComments in class spdx:File <File rdf:about=\"...\"> <licenseComments> The concluded license was taken from the package level that the file was included in. This information was found in the COPYING.txt file in the xyz directory. This package has been shipped in source and binary form. </licenseComments> </File> 8.8 Copyright text field 8.8.1 Description Identify the copyright holder of the file, as well as any dates present. This shall be a free-form text field extracted from the actual file. The options to populate this field are limited to: Any text relating to a copyright notice, even if not complete; NONE , if the file contains no copyright information whatsoever; or NOASSERTION , if the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied from the absence of an assertion). If the Copyright Text field is not present for a file, it implies an equivalent meaning to NOASSERTION . The metadata for the copyright text field is shown in Table 43. Table 43 \u2014 Metadata for the copyright text field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines | NONE | NOASSERTION 8.8.2 Intent Record any copyright notice for the file. 8.8.3 Examples EXAMPLE 1 Tag: FileCopyrightText: In tag:value format multiple lines are delimited by <text> .. </text> . FileCopyrightText: <text> Copyright 2008-2010 John Smith </text> EXAMPLE 2 RDF: Property spdx:copyrightText in class spdx:File <File rdf:about=\"...\"> <copyrightText> Copyright 2008-2010 John Smith </copyrightText> </File> 8.9 Artifact of project name field (deprecated) This field is deprecated since 1.8.4, as they can be replaced by a relationship to the more descriptive External Packages. 8.9.1 Description To indicate that a file has been derived from a specific project. The metadata for the artifact of project name field is shown in Table 44. Table 44 \u2014 Metadata for the artifact of project name field Attribute Value Required No Cardinality 0..* Format Single line of text. In tag:value format the ArtifactOfProjectName shall precede any optional ArtifactOf optional properties (e.g. ArtifactOfHomePage and ArtifactOfURI). 8.9.2 Intent To make it easier for recipients of the SPDX document to determine the original source of the identified file. If the project is not described in an SPDX document, then ArtifactOf can be used. If the project is described in another SPDX document, then Relationship should be used. 8.9.3 Examples EXAMPLE 1 Tag: ArtifactOfProjectName: ArtifactOfProjectName: Jena EXAMPLE 2 RDF: Property doap:name in class doap:Project in property spdx:artifactOf in class spdx:File <File> <artifactOf> <doap:Project> <doap:name>Jena</doap:name> </doap:Project> </artifactOf> </File> 8.10 Artifact of project homepage field (deprecated) This field is deprecated since 1.8.4, as they can be replaced by a relationship to the more descriptive External Packages. 8.10.1 Description To indicate the location of the project from which the file has been derived. The metadata for the artifact of project homepage field is shown in Table 45. Table 45 \u2014 Metadata for the artifact of project homepage field Attribute Value Required No Cardinality 0..* Format Uniform Resource Locator | UNKNOWN . In tag:value format all optional ArtifactOf fields shall follow immediately below the ArtifactOfProjectName. 8.10.2 Intent To make it easier for recipients of the SPDX document to determine the original source of the identified file. If the project is described in another SPDX document, then Relationship should be used. 8.10.3 Examples EXAMPLE 1 Tag: Property ArtifactOfProjectHomePage in class spdx:File ArtifactOfProjectHomePage: http://www.openjena.org/ EXAMPLE 2 RDF: Property doap:homepage in class doap:Project in property spdx:artifactOf in class spdx:File <File> <artifactOf> <doap:Project> <doap:homepage >rttp://www.openjena.org/</doap:homepage> </doap:Project> </artifactOf> </File> 8.11 Artifact of project uniform resource identifier field (deprecated) This field is deprecated since 1.8.4, as they can be replaced by a relationship to the more descriptive External Packages. 8.11.1 Description To provide a linkage to the project resource in the DOAP document and permit interoperability between the different formats supported. The metadata for the artifact of project uniform resource identifier field is shown in Table 46. Table 46 \u2014 Metadata for the artifact of project uniform resource identifier field Attribute Value Required No Cardinality 0..* Format Uniform Resource Identifier. In tag:value format all optional ArtifactOf fields shall follow immediately below the ArtifactOfProjectName. In tag:value format all optional ArtifactOf fields shall follow immediately below the ArtifactOfProjectName. 8.11.2 Intent To make it easier for recipients of the SPDX document to determine the original source of the identified file. If the project is described in another SPDX document, then Relationship should be used. 8.11.3 Examples EXAMPLE 1 Tag: ArtifactOfProjectURI: ArtifactOfProjectURI: http://subversion.apache.org/doap.rdf EXAMPLE 2 RDF: Property spdx:artifactOf in class spdx:File <File> <artifactOf rdf:resource=\"http://subversion.apache.org/\" /> </File> <!-- Note: within the DOAP file at http://subversion.apache.org/doap.rdf the value \"http://subversion.apache.org/\" is the URI of the describes resource of type doap:Project --> 8.12 File comment field 8.12.1 Description This field provides a place for the SPDX document creator to record any general comments about the file. The metadata for the file comment field is shown in Table 47. Table 47 \u2014 Metadata for the file comment field Attribute Value Required No Cardinality 0..1 Format Free form text that may span multiple lines 8.12.2 Intent Here, the intent is to provide the recipient of the SPDX document with more information determined after careful analysis of a file. 8.12.3 Examples EXAMPLE 1 Tag: FileComment: In tag:value format multiple lines are delimited by <text> .. </text> . FileComment: <text> This file appears in other packages, such as Foo and Ufoo. </text> EXAMPLE 2 RDF: Property rdfs:comments in class spdx:File <File rdf:about=\"...\"> <rdfs:comment> This file appears in other packages, such as Foo and Ufoo. </rdfs:comment> </File> 8.13 File notice field 8.13.1 Description This field provides a place for the SPDX document creator to record license notices or other such related notices found in the file. This might or might not include copyright statements. The metadata for the file notice field is shown in Table 48. Table 48 \u2014 Metadata for the file notice field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines 8.13.2 Intent Here, the intent is to provide the recipient of the SPDX document with notices that may require additional review or otherwise contribute to the determination of the Concluded License. 8.13.3 Examples EXAMPLE 1 Tag: FileNotice: In tag:value format multiple lines are delimited by <text> .. </text> . FileNotice: <text>This file is licensed under GPL.</text> EXAMPLE 2 RDF: Property noticeText in class spdx:File <File rdf:about=\"...\"> <noticeText> This file is licensed under GPL. </noticeText> </File> 8.14 File contributor field 8.14.1 Description This field provides a place for the SPDX document creator to record file contributors. Contributors could include names of copyright holders and/or authors who might not be copyright holders, yet contributed to the file content. The metadata for the file contributor field is shown in Table 49. Table 49 \u2014 Metadata for the file contributor field Attribute Value Required No Cardinality 0..* Format Free form text on a single line. 8.14.2 Intent Here, the intent is to provide the recipient of the SPDX document with a list of one or more contributors (credits). This is one way of providing acknowledgement to the contributors of a file. This would be useful, for example, if a recipient company wanted to contact copyright holders to inquire about alternate licensing. 8.14.3 Examples EXAMPLE 1 Tag: FileContributor: In tag:value format single line per contributor. FileContributor: Modified by Paul Mundt lethal@linux-sh.org FileContributor: The Regents of the University of California FileContributor: IBM Corporation EXAMPLE 2 RDF: Property spdx:fileContributor in class spdx:File <File rdf:about=\"...\"> <fileContributor> Modified by Paul Mundt lethal@linux-sh.org </fileContributor> <fileContributor> The Regents of the University of California </fileContributor> <fileContributor> IBM Corporation </fileContributor> </File> 8.15 File attribution text field 8.15.1 Description This field provides a place for the SPDX document creator to record, at the file level, acknowledgements that might be required to be communicated in some contexts. This is not meant to include the file's actual complete license text (see LicenseConcluded and LicenseInfoInFile ), and might or might not include copyright notices (see also FileCopyrightText ). The SPDX document creator might use this field to record other acknowledgements, such as particular clauses from license texts, which might be necessary or desirable to reproduce. The metadata for the file attribution text field is shown in Table 50. Table 50 \u2014 Metadata for the file attribution text field Attribute Value Required No Cardinality 0..* Format Free form text that can span multiple lines. 8.15.2 Intent The intent is to provide the recipient of the SPDX document with acknowledgement content at a file level, to assist redistributors of the file with reproducing those acknowledgements. This field does not necessarily indicate where, or in which contexts, the acknowledgements need to be reproduced (such as end-user documentation, advertising materials, etc.) and the SPDX document creator might or might not explain elsewhere how they intend for this field to be used. 8.15.3 Examples EXAMPLE 1 Tag: FileAttributionText: In tag:value format multiple lines are delimited by <text> .. </text> . FileAttributionText: <text> All advertising materials mentioning features or use of this software must display the following acknowledgement: This product includes software developed by the AT&T. </text> EXAMPLE 2 RDF: Property spdx:attributionText in class spdx:File <File rdf:about=\"...\"> <attributionText> All advertising materials mentioning features or use of this software must display the following acknowledgement: This product includes software developed by the AT&T. </attributionText> </File> 8.16 File dependencies field (deprecated) This field is deprecated since SPDX 2.0 in favor of using Clause 11 which provides more granularity about relationships. 8.16.1 Description The field provides a place for the SPDX document creator to record a list of other files (referenceable within this SPDX document) which the file is a derivative of and/or depends on for the build (e.g., source file or build script for a binary program or library). The list of files might not necessarily represent the list of all file dependencies, but possibly the ones that impact the licensing and/or might be needed as part of the file distribution obligation. The metadata for the file dependencies field is shown in Table 51. Table 51 \u2014 Metadata for the file dependencies field Attribute Value Required No Cardinality 0..* Format Reference to the file within the SPDX document. For the tag:value format, this will be the filename. For the RDF format, it shall be a reference to the actual file node. 8.16.2 Intent Here, the intent is to provide the recipient of the SPDX document with file dependency information based on the build system that created the file. These other files might impact the licensing of the file and/or might be required to satisfy the distribution obligation of the file (e.g., source files subject to a copyleft license). 8.16.3 Examples EXAMPLE 1 Tag: FileDependency: FileDependency: ./busybox-1.20.2/shell/match.h FileDependency: ./busybox-1.20.2/shell/match.c FileDependency: ./busybox-1.20.2/shell/ash.c EXAMPLE 2 RDF: Property spdx:fileDependency in class spdx:File <File rdf:nodeID=\"A0\"> <fileName>./package/source1.java</fileName> </File> <File rdf:nodeID=\"A1\"> <fileName>./package/source2.java</fileName> </File> <File rdf:nodeID=\"A3\"> <fileName>./package/source3.java</fileName> </File> <File rdf:about=\"...\"> <fileName>./package/mylibrary.jar</fileName> <fileDependency rdf:nodeID=\"A0\"/> <fileDependency rdf:nodeID=\"A1\"/> <fileDependency rdf:nodeID=\"A2\"/> </File>","title":"Clause 8: File Information"},{"location":"file-information/#8-file-information-section","text":"","title":"8 File information section"},{"location":"file-information/#81-file-name-field","text":"","title":"8.1 File name field "},{"location":"file-information/#811-description","text":"Identify the full path and filename that corresponds to the file information in this section. The metadata for the file name field is shown in Table 36. Table 36 \u2014 Metadata for the file name field Attribute Value Required Yes Cardinality 1..1 Format A relative filename with the root of the package archive or directory. In general, every filename is preceded with a ./ , see http://www.ietf.org/rfc/rfc3986.txt for syntax.","title":"8.1.1 Description"},{"location":"file-information/#812-intent","text":"To aid finding the correct file which corresponds to the file information.","title":"8.1.2 Intent"},{"location":"file-information/#813-examples","text":"EXAMPLE 1 Tag: FileName: FileName: ./package/foo.c EXAMPLE 2 RDF: Property spdx:fileName in class spdx:File <File rdf:about=\"...\"> <fileName>./package/foo.c</fileName> ... </File>","title":"8.1.3 Examples"},{"location":"file-information/#82-file-spdx-identifier-field","text":"","title":"8.2 File SPDX identifier field "},{"location":"file-information/#821-description","text":"Uniquely identify any element in an SPDX document which might be referenced by other elements. These might be referenced internally and externally with the addition of the SPDX document identifier. The metadata for the file SPDX identifier field is shown in Table 37. Table 37 \u2014 Metadata for the file SPDX identifier field Attribute Value Required Yes Cardinality 1..1 Format \"SPDXRef-\" [idstring] where [idstring] is a unique string containing letters, numbers, . and/or - .","title":"8.2.1 Description"},{"location":"file-information/#822-intent","text":"There may be several versions of the same file within an SPDX document. Each element needs to be able to be referred to uniquely so that relationships between elements can be clearly articulated.","title":"8.2.2 Intent"},{"location":"file-information/#823-examples","text":"EXAMPLE 1 Tag: SPDXID: SPDXID: SPDXRef-1 EXAMPLE 2 RDF: The URI for the element will follow the form: [SpdxDocumentURI]#SPDXRef-[idstring] where [SpdxDocumentURI] is the URI for the SPDX document containing the element. Using xml:base: <rdf:RDF xml:base=\"http://acme.com/spdxdocs/acmeproj/v1.2/1BE2A4FF-5F1A-48D3-8483-28A9B0349A1B\" ... <File rdf:about=\"#SPDXRef-1\"> ... </File> Using document URI: <File rdf:about=\"http://acme.com/spdxdocs/acmeproj/v1.2/1BE2A4FF-5F1A-48D3-8483-28A9B0349A1B#SPDXRef-1\"> ... </File>","title":"8.2.3 Examples"},{"location":"file-information/#83-file-type-field","text":"","title":"8.3 File type field "},{"location":"file-information/#831-description","text":"This field provides information about the type of file identified. File Type is intrinsic to the file, independent of how the file is being used. A file may have more than one file type assigned to it, however the options to populate this field are limited to: SOURCE if the file is human readable source code (.c, .html, etc.); BINARY if the file is a compiled object, target image or binary executable (.o, .a, etc.); ARCHIVE if the file represents an archive (.tar, .jar, etc.); APPLICATION if the file is associated with a specific application type (MIME type of application/*); AUDIO if the file is associated with an audio file (MIME type of audio/* , e.g. .mp3); IMAGE if the file is associated with a picture image file (MIME type of image/*, e.g., .jpg, .gif); TEXT if the file is human readable text file (MIME type of text/*); VIDEO if the file is associated with a video file type (MIME type of video/*); DOCUMENTATION if the file serves as documentation; SPDX if the file is an SPDX document; OTHER if the file doesn't fit into the above categories (generated artifacts, data files, etc.) The metadata for the file type field is shown in Table 38. Table 38 \u2014 Metadata for the file type field Attribute Value Required No Cardinality 0..* Format SOURCE | BINARY | ARCHIVE | APPLICATION | AUDIO | IMAGE | TEXT | VIDEO | DOCUMENTATION | SPDX | OTHER","title":"8.3.1 Description"},{"location":"file-information/#832-intent","text":"Here, this field is a reasonable estimation of the file type, from a developer perspective.","title":"8.3.2 Intent"},{"location":"file-information/#833-examples","text":"EXAMPLE 1 Tag: FileType: FileType: BINARY For a README.TXT FileType: TEXT FileType: DOCUMENTATION foo.exe FileType: BINARY FileType: APPLICATION EXAMPLE 2 RDF: Property spdx:fileType in class spdx:File <File rdf:about=\"file1\"> <fileType rdf:resource=\"fileType_binary\" /> </File> Where file2 is a README.TXT <File rdf:about=\"file2\"> <fileType rdf:resource =\"http://spdx.org/rdf/terms#fileType_text\" /> <fileType rdf:resource =\"http://spdx.org/rdf/terms#fileType_documentation\" /> </File>","title":"8.3.3 Examples"},{"location":"file-information/#84-file-checksum-field","text":"","title":"8.4 File checksum field "},{"location":"file-information/#841-description","text":"This field provides the result from some specific checksum algorithm. Checksum algorithms consume data from the file and produce a short, fix-sized summary that is sensitive to changes in the file's data. Any random change to the file's data will (with high likelihood) result in a different checksum value. The metadata for the file checksum field is shown in Table 39. Table 39 \u2014 Metadata for the file checksum field Attribute Value Required Yes Cardinality 1..1 for the SHA1 algorithm, 0..* for all other algorithms Algorithm SHA1 is to be used on the file. Other algorithms that can be provided optionally include SHA224 , SHA256 , SHA384 , SHA512 , SHA3-256 , SHA3-384 , SHA3-512 , BLAKE2b-256 , BLAKE2b-384 , BLAKE2b-512 , BLAKE3 , MD2 , MD4 , MD5 , MD6 , ADLER32 Format In tag:value there are three components, an algorithm identifier (SHA1), a separator (\u201c:\u201d) and a checksum value. The RDF shall also contain an algorithm identifier and a checksum value. For example, when the algorithm identifier is SHA1, the checksum value should be a 160-bit value represented as 40 lowercase hexadecimal digits. For other algorithms, an appropriate number of hexadecimal digits is expected.","title":"8.4.1 Description"},{"location":"file-information/#842-intent","text":"Checksum values are used primarily to protect a file's data against accidental corruption during transmissions or storage. Cryptographically strong checksum algorithms may be used to detect deliberate corruption, but only if the authenticity of the checksum value may be verified. Checksum values may also be used as an identifier for the file's data that is (with high likelihood) unique. Such an identifier may be used to establish the desired version of a file, if multiple versions are available.","title":"8.4.2 Intent"},{"location":"file-information/#843-examples","text":"EXAMPLE 1 Tag: FileChecksum: FileChecksum: SHA1: d6a770ba38583ed4bb4525bd96e50461655d2758 FileChecksum: MD5: 624c1abb3664f4b35547e7c73864ad24 EXAMPLE 2 RDF: Property spdx:Checksum in class spdx:File <File rdf:about=\"...\"> <checksum> <Checksum> <algorithm rdf:resource =\"http://spdx.org/rdf/terms#checksumAlgorithm_sha1\"/> <checksumValue>d6a770ba38583ed4bb4525bd96e50461655d2758 </checksumValue> </Checksum> </checksum> <checksum> <Checksum> <algorithm rdf:resource =\"http://spdx.org/rdf/terms#checksumAlgorithm_md5\"/> <checksumValue> 624c1abb3664f4b35547e7c73864ad24 </checksumValue> </Checksum> </checksum> </File>","title":"8.4.3 Examples"},{"location":"file-information/#85-concluded-license-field","text":"","title":"8.5 Concluded license field "},{"location":"file-information/#851-description","text":"This field contains the license the SPDX document creator has concluded as governing the file or alternative values if the governing license cannot be determined. The options to populate this field are limited to: A valid SPDX License Expression as defined in Annex D ; NONE , if the SPDX document creator concludes there is no license available for this file; or NOASSERTION , if: the SPDX document creator has attempted to, but cannot reach a reasonable objective determination; the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If the Concluded License is not the same as the License Information in File, a written explanation should be provided in the Comments on License field ( 8.7 ). With respect to NOASSERTION , a written explanation in the Comments on License field ( 8.7 ) is preferred. If the Concluded License field is not present for a file, it implies an equivalent meaning to NOASSERTION . The metadata for the concluded license field is shown in Table 40. Table 40 \u2014 Metadata for the concluded license field Attribute Value Required No Cardinality 0..1 Format <SPDX License Expression> | NONE | NOASSERTION where: <SPDX License Expression> is a valid SPDX License Expression as defined in Annex D .","title":"8.5.1 Description"},{"location":"file-information/#852-intent","text":"Here, the intent is for the SPDX document creator to analyze the License Information in File ( 8.6 ) and other objective information, e.g., \u201cCOPYING FILE,\u201d along with the results from any scanning tools, to arrive at a reasonably objective conclusion as to what license governs the file.","title":"8.5.2 Intent"},{"location":"file-information/#853-examples","text":"EXAMPLE 1 Tag: LicenseConcluded: LicenseConcluded: LGPL-2.0-only LicenseConcluded: (LGPL-2.0-only OR LicenseRef-2) EXAMPLE 2 RDF: Property spdx:licenseConcluded in class spdx:File <File rdf:about=\"file\"> <licenseConcluded>LGPL-2.0-only</licenseConcluded> </File> <File rdf:about=\"...\"> <licenseConcluded> <DisjunctiveLicenseSet> <member rdf:resource =\"http://spdx.org/licenses/LGPL-2.0-only\"/> <member rdf:resource=\"#LicenseRef-2\"/> </DisjunctiveLicenseSet> </licenseConcluded> </File>","title":"8.5.3 Examples"},{"location":"file-information/#86-license-information-in-file-field","text":"","title":"8.6 License information in file field "},{"location":"file-information/#861-description","text":"This field contains the license information actually found in the file, if any. This information is most commonly found in the header of the file, although it might be in other areas of the actual file. Any license information not actually in the file, e.g., \u201cCOPYING.txt\u201d file in a top-level directory, should not be reflected in this field. The options to populate this field are limited to: A valid SPDX License Expression as defined in Annex D ; NONE , if the file contains no license information whatsoever; or NOASSERTION , if: the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If license information for more than one license is contained in the file or if the license information offers the package recipient a choice of licenses, then each of the choices should be listed as a separate entry. If the License Information in File field is not present for a file, it implies an equivalent meaning to NOASSERTION . The metadata for the license information in file field is shown in Table 41. Table 41 \u2014 Metadata for the license information in file field Attribute Value Required No Cardinality 0..* Format <SPDX License Expression> | NONE | NOASSERTION where: <SPDX License Expression> is a valid SPDX License Expression as defined in Annex D .","title":"8.6.1 Description"},{"location":"file-information/#862-intent","text":"Here, the intent is to provide the license information actually in the file, as compared to the Concluded License field.","title":"8.6.2 Intent"},{"location":"file-information/#863-examples","text":"EXAMPLE 1 Tag: LicenseInfoInFile: LicenseInfoInFile: GPL-2.0-only LicenseInfoInFile: LicenseRef-2 EXAMPLE 2 RDF: Property spdx:licenseInfoInFile in class spdx:File <File rdf:about=\"file1\"> <licenseInfoInFile rdf:resource =\"http://spdx.org/licenses/GPL-2.0-only\" /> <licenseInfoInFile rdf:resource=\"#LicenseRef-2\" /> </File>","title":"8.6.3 Examples"},{"location":"file-information/#87-comments-on-license-field","text":"","title":"8.7 Comments on license field "},{"location":"file-information/#871-description","text":"This field provides a place for the SPDX document creator to record any relevant background references or analysis that went in to arriving at the Concluded License for a file. If the Concluded License does not match the License Information in File, this should be explained by the SPDX document creator. It is also preferable to include an explanation here when the Concluded License is NOASSERTION . The metadata for the comments on license field is shown in Table 42. Table 42 \u2014 Metadata for the comments on license field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines","title":"8.7.1 Description"},{"location":"file-information/#872-intent","text":"Here, the intent is to provide the recipient of the SPDX document with a detailed explanation of how the Concluded License was determined if it does not match the License Information in File, is marked NOASSERTION , or other helpful information relevant to determining the license of the file.","title":"8.7.2 Intent"},{"location":"file-information/#873-examples","text":"EXAMPLE 1 Tag: LicenseComments: In tag:value format multiple lines are delimited by <text> .. </text> . LicenseComments: <text>The concluded license was taken from the package level that the file was included in. This information was found in the COPYING.txt file in the xyz directory.</text> EXAMPLE 2 RDF: Property spdx:licenseComments in class spdx:File <File rdf:about=\"...\"> <licenseComments> The concluded license was taken from the package level that the file was included in. This information was found in the COPYING.txt file in the xyz directory. This package has been shipped in source and binary form. </licenseComments> </File>","title":"8.7.3 Examples"},{"location":"file-information/#88-copyright-text-field","text":"","title":"8.8 Copyright text field "},{"location":"file-information/#881-description","text":"Identify the copyright holder of the file, as well as any dates present. This shall be a free-form text field extracted from the actual file. The options to populate this field are limited to: Any text relating to a copyright notice, even if not complete; NONE , if the file contains no copyright information whatsoever; or NOASSERTION , if the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied from the absence of an assertion). If the Copyright Text field is not present for a file, it implies an equivalent meaning to NOASSERTION . The metadata for the copyright text field is shown in Table 43. Table 43 \u2014 Metadata for the copyright text field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines | NONE | NOASSERTION","title":"8.8.1 Description"},{"location":"file-information/#882-intent","text":"Record any copyright notice for the file.","title":"8.8.2 Intent"},{"location":"file-information/#883-examples","text":"EXAMPLE 1 Tag: FileCopyrightText: In tag:value format multiple lines are delimited by <text> .. </text> . FileCopyrightText: <text> Copyright 2008-2010 John Smith </text> EXAMPLE 2 RDF: Property spdx:copyrightText in class spdx:File <File rdf:about=\"...\"> <copyrightText> Copyright 2008-2010 John Smith </copyrightText> </File>","title":"8.8.3 Examples"},{"location":"file-information/#89-artifact-of-project-name-field-deprecated","text":"This field is deprecated since 1.8.4, as they can be replaced by a relationship to the more descriptive External Packages.","title":"8.9 Artifact of project name field (deprecated) "},{"location":"file-information/#891-description","text":"To indicate that a file has been derived from a specific project. The metadata for the artifact of project name field is shown in Table 44. Table 44 \u2014 Metadata for the artifact of project name field Attribute Value Required No Cardinality 0..* Format Single line of text. In tag:value format the ArtifactOfProjectName shall precede any optional ArtifactOf optional properties (e.g. ArtifactOfHomePage and ArtifactOfURI).","title":"8.9.1 Description"},{"location":"file-information/#892-intent","text":"To make it easier for recipients of the SPDX document to determine the original source of the identified file. If the project is not described in an SPDX document, then ArtifactOf can be used. If the project is described in another SPDX document, then Relationship should be used.","title":"8.9.2 Intent"},{"location":"file-information/#893-examples","text":"EXAMPLE 1 Tag: ArtifactOfProjectName: ArtifactOfProjectName: Jena EXAMPLE 2 RDF: Property doap:name in class doap:Project in property spdx:artifactOf in class spdx:File <File> <artifactOf> <doap:Project> <doap:name>Jena</doap:name> </doap:Project> </artifactOf> </File>","title":"8.9.3 Examples"},{"location":"file-information/#810-artifact-of-project-homepage-field-deprecated","text":"This field is deprecated since 1.8.4, as they can be replaced by a relationship to the more descriptive External Packages.","title":"8.10 Artifact of project homepage field (deprecated) "},{"location":"file-information/#8101-description","text":"To indicate the location of the project from which the file has been derived. The metadata for the artifact of project homepage field is shown in Table 45. Table 45 \u2014 Metadata for the artifact of project homepage field Attribute Value Required No Cardinality 0..* Format Uniform Resource Locator | UNKNOWN . In tag:value format all optional ArtifactOf fields shall follow immediately below the ArtifactOfProjectName.","title":"8.10.1 Description"},{"location":"file-information/#8102-intent","text":"To make it easier for recipients of the SPDX document to determine the original source of the identified file. If the project is described in another SPDX document, then Relationship should be used.","title":"8.10.2 Intent"},{"location":"file-information/#8103-examples","text":"EXAMPLE 1 Tag: Property ArtifactOfProjectHomePage in class spdx:File ArtifactOfProjectHomePage: http://www.openjena.org/ EXAMPLE 2 RDF: Property doap:homepage in class doap:Project in property spdx:artifactOf in class spdx:File <File> <artifactOf> <doap:Project> <doap:homepage >rttp://www.openjena.org/</doap:homepage> </doap:Project> </artifactOf> </File>","title":"8.10.3 Examples"},{"location":"file-information/#811-artifact-of-project-uniform-resource-identifier-field-deprecated","text":"This field is deprecated since 1.8.4, as they can be replaced by a relationship to the more descriptive External Packages.","title":"8.11 Artifact of project uniform resource identifier field (deprecated) "},{"location":"file-information/#8111-description","text":"To provide a linkage to the project resource in the DOAP document and permit interoperability between the different formats supported. The metadata for the artifact of project uniform resource identifier field is shown in Table 46. Table 46 \u2014 Metadata for the artifact of project uniform resource identifier field Attribute Value Required No Cardinality 0..* Format Uniform Resource Identifier. In tag:value format all optional ArtifactOf fields shall follow immediately below the ArtifactOfProjectName. In tag:value format all optional ArtifactOf fields shall follow immediately below the ArtifactOfProjectName.","title":"8.11.1 Description"},{"location":"file-information/#8112-intent","text":"To make it easier for recipients of the SPDX document to determine the original source of the identified file. If the project is described in another SPDX document, then Relationship should be used.","title":"8.11.2 Intent"},{"location":"file-information/#8113-examples","text":"EXAMPLE 1 Tag: ArtifactOfProjectURI: ArtifactOfProjectURI: http://subversion.apache.org/doap.rdf EXAMPLE 2 RDF: Property spdx:artifactOf in class spdx:File <File> <artifactOf rdf:resource=\"http://subversion.apache.org/\" /> </File> <!-- Note: within the DOAP file at http://subversion.apache.org/doap.rdf the value \"http://subversion.apache.org/\" is the URI of the describes resource of type doap:Project -->","title":"8.11.3 Examples"},{"location":"file-information/#812-file-comment-field","text":"","title":"8.12 File comment field "},{"location":"file-information/#8121-description","text":"This field provides a place for the SPDX document creator to record any general comments about the file. The metadata for the file comment field is shown in Table 47. Table 47 \u2014 Metadata for the file comment field Attribute Value Required No Cardinality 0..1 Format Free form text that may span multiple lines","title":"8.12.1 Description"},{"location":"file-information/#8122-intent","text":"Here, the intent is to provide the recipient of the SPDX document with more information determined after careful analysis of a file.","title":"8.12.2 Intent"},{"location":"file-information/#8123-examples","text":"EXAMPLE 1 Tag: FileComment: In tag:value format multiple lines are delimited by <text> .. </text> . FileComment: <text> This file appears in other packages, such as Foo and Ufoo. </text> EXAMPLE 2 RDF: Property rdfs:comments in class spdx:File <File rdf:about=\"...\"> <rdfs:comment> This file appears in other packages, such as Foo and Ufoo. </rdfs:comment> </File>","title":"8.12.3 Examples"},{"location":"file-information/#813-file-notice-field","text":"","title":"8.13 File notice field "},{"location":"file-information/#8131-description","text":"This field provides a place for the SPDX document creator to record license notices or other such related notices found in the file. This might or might not include copyright statements. The metadata for the file notice field is shown in Table 48. Table 48 \u2014 Metadata for the file notice field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines","title":"8.13.1 Description"},{"location":"file-information/#8132-intent","text":"Here, the intent is to provide the recipient of the SPDX document with notices that may require additional review or otherwise contribute to the determination of the Concluded License.","title":"8.13.2 Intent"},{"location":"file-information/#8133-examples","text":"EXAMPLE 1 Tag: FileNotice: In tag:value format multiple lines are delimited by <text> .. </text> . FileNotice: <text>This file is licensed under GPL.</text> EXAMPLE 2 RDF: Property noticeText in class spdx:File <File rdf:about=\"...\"> <noticeText> This file is licensed under GPL. </noticeText> </File>","title":"8.13.3 Examples"},{"location":"file-information/#814-file-contributor-field","text":"","title":"8.14 File contributor field "},{"location":"file-information/#8141-description","text":"This field provides a place for the SPDX document creator to record file contributors. Contributors could include names of copyright holders and/or authors who might not be copyright holders, yet contributed to the file content. The metadata for the file contributor field is shown in Table 49. Table 49 \u2014 Metadata for the file contributor field Attribute Value Required No Cardinality 0..* Format Free form text on a single line.","title":"8.14.1 Description"},{"location":"file-information/#8142-intent","text":"Here, the intent is to provide the recipient of the SPDX document with a list of one or more contributors (credits). This is one way of providing acknowledgement to the contributors of a file. This would be useful, for example, if a recipient company wanted to contact copyright holders to inquire about alternate licensing.","title":"8.14.2 Intent"},{"location":"file-information/#8143-examples","text":"EXAMPLE 1 Tag: FileContributor: In tag:value format single line per contributor. FileContributor: Modified by Paul Mundt lethal@linux-sh.org FileContributor: The Regents of the University of California FileContributor: IBM Corporation EXAMPLE 2 RDF: Property spdx:fileContributor in class spdx:File <File rdf:about=\"...\"> <fileContributor> Modified by Paul Mundt lethal@linux-sh.org </fileContributor> <fileContributor> The Regents of the University of California </fileContributor> <fileContributor> IBM Corporation </fileContributor> </File>","title":"8.14.3 Examples"},{"location":"file-information/#815-file-attribution-text-field","text":"","title":"8.15 File attribution text field "},{"location":"file-information/#8151-description","text":"This field provides a place for the SPDX document creator to record, at the file level, acknowledgements that might be required to be communicated in some contexts. This is not meant to include the file's actual complete license text (see LicenseConcluded and LicenseInfoInFile ), and might or might not include copyright notices (see also FileCopyrightText ). The SPDX document creator might use this field to record other acknowledgements, such as particular clauses from license texts, which might be necessary or desirable to reproduce. The metadata for the file attribution text field is shown in Table 50. Table 50 \u2014 Metadata for the file attribution text field Attribute Value Required No Cardinality 0..* Format Free form text that can span multiple lines.","title":"8.15.1 Description"},{"location":"file-information/#8152-intent","text":"The intent is to provide the recipient of the SPDX document with acknowledgement content at a file level, to assist redistributors of the file with reproducing those acknowledgements. This field does not necessarily indicate where, or in which contexts, the acknowledgements need to be reproduced (such as end-user documentation, advertising materials, etc.) and the SPDX document creator might or might not explain elsewhere how they intend for this field to be used.","title":"8.15.2 Intent"},{"location":"file-information/#8153-examples","text":"EXAMPLE 1 Tag: FileAttributionText: In tag:value format multiple lines are delimited by <text> .. </text> . FileAttributionText: <text> All advertising materials mentioning features or use of this software must display the following acknowledgement: This product includes software developed by the AT&T. </text> EXAMPLE 2 RDF: Property spdx:attributionText in class spdx:File <File rdf:about=\"...\"> <attributionText> All advertising materials mentioning features or use of this software must display the following acknowledgement: This product includes software developed by the AT&T. </attributionText> </File>","title":"8.15.3 Examples"},{"location":"file-information/#816-file-dependencies-field-deprecated","text":"This field is deprecated since SPDX 2.0 in favor of using Clause 11 which provides more granularity about relationships.","title":"8.16 File dependencies field (deprecated) "},{"location":"file-information/#8161-description","text":"The field provides a place for the SPDX document creator to record a list of other files (referenceable within this SPDX document) which the file is a derivative of and/or depends on for the build (e.g., source file or build script for a binary program or library). The list of files might not necessarily represent the list of all file dependencies, but possibly the ones that impact the licensing and/or might be needed as part of the file distribution obligation. The metadata for the file dependencies field is shown in Table 51. Table 51 \u2014 Metadata for the file dependencies field Attribute Value Required No Cardinality 0..* Format Reference to the file within the SPDX document. For the tag:value format, this will be the filename. For the RDF format, it shall be a reference to the actual file node.","title":"8.16.1 Description"},{"location":"file-information/#8162-intent","text":"Here, the intent is to provide the recipient of the SPDX document with file dependency information based on the build system that created the file. These other files might impact the licensing of the file and/or might be required to satisfy the distribution obligation of the file (e.g., source files subject to a copyleft license).","title":"8.16.2 Intent"},{"location":"file-information/#8163-examples","text":"EXAMPLE 1 Tag: FileDependency: FileDependency: ./busybox-1.20.2/shell/match.h FileDependency: ./busybox-1.20.2/shell/match.c FileDependency: ./busybox-1.20.2/shell/ash.c EXAMPLE 2 RDF: Property spdx:fileDependency in class spdx:File <File rdf:nodeID=\"A0\"> <fileName>./package/source1.java</fileName> </File> <File rdf:nodeID=\"A1\"> <fileName>./package/source2.java</fileName> </File> <File rdf:nodeID=\"A3\"> <fileName>./package/source3.java</fileName> </File> <File rdf:about=\"...\"> <fileName>./package/mylibrary.jar</fileName> <fileDependency rdf:nodeID=\"A0\"/> <fileDependency rdf:nodeID=\"A1\"/> <fileDependency rdf:nodeID=\"A2\"/> </File>","title":"8.16.3 Examples"},{"location":"file-tags/","text":"Annex H Specifying SPDX information in source files (Informative) H.1 Rationale SPDX short-form license identifiers using the SPDX-License-Identifier: tag, as described in Annex E , provide a mechanism for developers to easily convey information about the licenses they declare on a file-by-file basis. That mechanism is intentionally very easy for software tools to identify and detect, since it includes a standard text string that is unlikely to occur in other contexts, and since it uses license identifiers from the SPDX License List or from user-defined LicenseRef- statements. The SPDX specification defines various other fields in the File Information section (Clause 8 ) that are also useful for conveying information on a file-by-file basis, as well as snippet-level information in Snippet Information section (Clause 9 ). For example, the REUSE Software guidelines community expressed interest in having a similar method to recommend that developers use to express their copyright notices in a machine-readable manner. This appendix describes a mechanism, similar to SPDX-License-Identifier , for developers to convey such other file-based and snippet-based information easily in comments in their files. This in turn enables software tools to easily find and extract that information, and to insert it into the corresponding fields of an SPDX document generated by those tools. H.2 File tags format An SPDX file tag consists of a single line, generally as part of a comment near the top of the file, in the following format: SPDX-tagname: <value> where tagname is replaced by the 'tag' defined for tag-value SPDX documents for that field, according to the File Information section of the SPDX specification. The meaning and semantics of any SPDX file tag are intended to be identical to those described in the File Information (Clause 8 ) section of the SPDX specification. Examples: File type (see 8.3 ): SPDX-FileType: SOURCE SPDX-FileType: DOCUMENTATION SPDX-FileType: TEXT Copyright text (see 8.8 ): SPDX-FileCopyrightText: 2019 Jane Doe <jane@example.com> SPDX-FileCopyrightText: Copyright 2008-2010 John Smith SPDX-FileCopyrightText: Copyright Example Company SPDX-FileCopyrightText: Copyright contributors to the Foo project. File contributors (see 8.14 ): SPDX-FileContributor: Modified by Jane Doe SPDX-FileContributor: The Regents of the University of California SPDX file tags of a particular type may appear one or multiple times in a file, depending on the corresponding cardinality defined for that field in the File Information section of the SPDX specification. Multiple-line values are not recommended, because doing so will make it harder for simple search tools to extract all data by looking only for lines beginning with the relevant tag. Version 3.0 of the REUSE Software guidelines implements this format, via a recommendation to use the tag SPDX-FileCopyrightText: to include copyright notices as part of a file's comment headers. H.3 Snippet tags format If certain SPDX tags are to apply only to a certain snippet instead of the whole file, SPDX snippet tags should be used. SPDX snippet tags should start with SPDX-SnippetBegin to mark the beginning of the snippet and end with SPDX-SnippetEnd to mark its end, in the following format: SPDX-SnippetBegin SPDX-tagname: <value> ... SPDX-SnippetEnd where tagname is replaced by the 'tag' defined for tag-value SPDX documents for that field, according to the Snippet Information section of the SPDX specification, and ... represents the code snippet itself. The meaning and semantics of any SPDX snippet tag are intended to be identical to those described in the Snippet Information (Clause 9 ) section of the SPDX specification. Any Snippet Information (Clause 9 ) and short-form license identifiers (Annex E ) tags found between begin and end tags mentioned above apply only to such snippet. Snippets may nest, and this is denoted by having SPDX-SnippetBegin / SPDX-SnippetEnd pairs within other pairs, in the same way that parentheses nest in mathematical expressions. In the case of nested snippets, the SPDX file tags are considered to apply to the inner-most snippet. Examples: Simple stand-alone example: SPDX-SnippetBegin SPDX-License-Identifier: MIT SPDX-SnippetCopyrightText: 2022 Jane Doe <jane@example.com> ... SPDX-SnippetEnd Two snippets with a different license and additional information in the broader context of a file: SPDX-License-Identifier: GPL-2.0-or-later SPDX-FileCopyrightText: Copyright contributors to the Foo project. ... SPDX-SnippetBegin SPDX-License-Identifier: MIT SPDX-SnippetCopyrightText: 2022 Jane Doe <jane@example.com> SDPX\u2014SnippetName: functionX from project Bar SPDX-SnippetComment: A complex function X that was copy-pasted from project Bar ... SPDX-SnippetEnd ... SPDX-SnippetBegin SPDX-License-Identifier: BSD-2-Clause SPDX-SnippetCopyrightText: Copyright Example Company ... SPDX-SnippetEnd Nesting snippets: SPDX-SnippetBegin SPDX-License-Identifier: MIT SPDX-SnippetCopyrightText: 2022 Jane Doe <jane@example.com> ... SPDX-SnippetBegin SPDX-License-Identifier: BSD-2-Clause SPDX-SnippetCopyrightText: Copyright Example Company ... SPDX-SnippetEnd ... SPDX-SnippetEnd H.4 Caveats A creator of an SPDX document may elect to disregard any or all file tags in any file. SPDX document creators should determine for themselves the extent to which they will rely upon the information specified in a file tag. Not all fields in the File Information section will be useful or relevant to use as file tags. For example, SPDX-FileName is unnecessary as it can be easily derived from the actual file name; SPDX-SPDXID is likely to be ignored by an SPDX document creator who may need to define their own SPDXRef- ID system for their document; etc. Another more complex example are SPDX-SnippetBegin and SPDX-SnippetEnd where the line number these two tags are found in could be stored to start and end the range in SnippetLineRange (see 9.4 ). The short-form license identifiers described in Annex E do not follow the file tag convention described above. The SPDX-License-Identifier emerged from the broader community prior to being defined in the SPDX specification, so it does not map to a License-Identifier field in the File Information section.","title":"Annex H: SPDX File Tags"},{"location":"file-tags/#annex-h-specifying-spdx-information-in-source-files-informative","text":"","title":"Annex H Specifying SPDX information in source files (Informative)"},{"location":"file-tags/#h1-rationale","text":"SPDX short-form license identifiers using the SPDX-License-Identifier: tag, as described in Annex E , provide a mechanism for developers to easily convey information about the licenses they declare on a file-by-file basis. That mechanism is intentionally very easy for software tools to identify and detect, since it includes a standard text string that is unlikely to occur in other contexts, and since it uses license identifiers from the SPDX License List or from user-defined LicenseRef- statements. The SPDX specification defines various other fields in the File Information section (Clause 8 ) that are also useful for conveying information on a file-by-file basis, as well as snippet-level information in Snippet Information section (Clause 9 ). For example, the REUSE Software guidelines community expressed interest in having a similar method to recommend that developers use to express their copyright notices in a machine-readable manner. This appendix describes a mechanism, similar to SPDX-License-Identifier , for developers to convey such other file-based and snippet-based information easily in comments in their files. This in turn enables software tools to easily find and extract that information, and to insert it into the corresponding fields of an SPDX document generated by those tools.","title":"H.1 Rationale "},{"location":"file-tags/#h2-file-tags-format","text":"An SPDX file tag consists of a single line, generally as part of a comment near the top of the file, in the following format: SPDX-tagname: <value> where tagname is replaced by the 'tag' defined for tag-value SPDX documents for that field, according to the File Information section of the SPDX specification. The meaning and semantics of any SPDX file tag are intended to be identical to those described in the File Information (Clause 8 ) section of the SPDX specification. Examples: File type (see 8.3 ): SPDX-FileType: SOURCE SPDX-FileType: DOCUMENTATION SPDX-FileType: TEXT Copyright text (see 8.8 ): SPDX-FileCopyrightText: 2019 Jane Doe <jane@example.com> SPDX-FileCopyrightText: Copyright 2008-2010 John Smith SPDX-FileCopyrightText: Copyright Example Company SPDX-FileCopyrightText: Copyright contributors to the Foo project. File contributors (see 8.14 ): SPDX-FileContributor: Modified by Jane Doe SPDX-FileContributor: The Regents of the University of California SPDX file tags of a particular type may appear one or multiple times in a file, depending on the corresponding cardinality defined for that field in the File Information section of the SPDX specification. Multiple-line values are not recommended, because doing so will make it harder for simple search tools to extract all data by looking only for lines beginning with the relevant tag. Version 3.0 of the REUSE Software guidelines implements this format, via a recommendation to use the tag SPDX-FileCopyrightText: to include copyright notices as part of a file's comment headers.","title":"H.2 File tags format "},{"location":"file-tags/#h3-snippet-tags-format","text":"If certain SPDX tags are to apply only to a certain snippet instead of the whole file, SPDX snippet tags should be used. SPDX snippet tags should start with SPDX-SnippetBegin to mark the beginning of the snippet and end with SPDX-SnippetEnd to mark its end, in the following format: SPDX-SnippetBegin SPDX-tagname: <value> ... SPDX-SnippetEnd where tagname is replaced by the 'tag' defined for tag-value SPDX documents for that field, according to the Snippet Information section of the SPDX specification, and ... represents the code snippet itself. The meaning and semantics of any SPDX snippet tag are intended to be identical to those described in the Snippet Information (Clause 9 ) section of the SPDX specification. Any Snippet Information (Clause 9 ) and short-form license identifiers (Annex E ) tags found between begin and end tags mentioned above apply only to such snippet. Snippets may nest, and this is denoted by having SPDX-SnippetBegin / SPDX-SnippetEnd pairs within other pairs, in the same way that parentheses nest in mathematical expressions. In the case of nested snippets, the SPDX file tags are considered to apply to the inner-most snippet. Examples: Simple stand-alone example: SPDX-SnippetBegin SPDX-License-Identifier: MIT SPDX-SnippetCopyrightText: 2022 Jane Doe <jane@example.com> ... SPDX-SnippetEnd Two snippets with a different license and additional information in the broader context of a file: SPDX-License-Identifier: GPL-2.0-or-later SPDX-FileCopyrightText: Copyright contributors to the Foo project. ... SPDX-SnippetBegin SPDX-License-Identifier: MIT SPDX-SnippetCopyrightText: 2022 Jane Doe <jane@example.com> SDPX\u2014SnippetName: functionX from project Bar SPDX-SnippetComment: A complex function X that was copy-pasted from project Bar ... SPDX-SnippetEnd ... SPDX-SnippetBegin SPDX-License-Identifier: BSD-2-Clause SPDX-SnippetCopyrightText: Copyright Example Company ... SPDX-SnippetEnd Nesting snippets: SPDX-SnippetBegin SPDX-License-Identifier: MIT SPDX-SnippetCopyrightText: 2022 Jane Doe <jane@example.com> ... SPDX-SnippetBegin SPDX-License-Identifier: BSD-2-Clause SPDX-SnippetCopyrightText: Copyright Example Company ... SPDX-SnippetEnd ... SPDX-SnippetEnd","title":"H.3 Snippet tags format "},{"location":"file-tags/#h4-caveats","text":"A creator of an SPDX document may elect to disregard any or all file tags in any file. SPDX document creators should determine for themselves the extent to which they will rely upon the information specified in a file tag. Not all fields in the File Information section will be useful or relevant to use as file tags. For example, SPDX-FileName is unnecessary as it can be easily derived from the actual file name; SPDX-SPDXID is likely to be ignored by an SPDX document creator who may need to define their own SPDXRef- ID system for their document; etc. Another more complex example are SPDX-SnippetBegin and SPDX-SnippetEnd where the line number these two tags are found in could be stored to start and end the range in SnippetLineRange (see 9.4 ). The short-form license identifiers described in Annex E do not follow the file tag convention described above. The SPDX-License-Identifier emerged from the broader community prior to being defined in the SPDX specification, so it does not map to a License-Identifier field in the File Information section.","title":"H.4 Caveats "},{"location":"foreword/","text":"Foreword ISO (the International Organization for Standardization) is a worldwide federation of national standards bodies (ISO member bodies). The work of preparing International Standards is normally carried out through ISO technical committees. Each member body interested in a subject for which a technical committee has been established has the right to be represented on that committee. International organizations, governmental and non-governmental, in liaison with ISO, also take part in the work. ISO collaborates closely with the International Electrotechnical Commission (IEC) on all matters of electrotechnical standardization. The procedures used to develop this document and those intended for its further maintenance are described in the ISO/IEC Directives, Part 1. In particular, the different approval criteria needed for the different types of ISO documents should be noted. This document was drafted in accordance with the editorial rules of the ISO/IEC Directives, Part 2 (see https://www.iso.org/directives ). Attention is drawn to the possibility that some of the elements of this document may be the subject of patent rights. ISO shall not be held responsible for identifying any or all such patent rights. Details of any patent rights identified during the development of the document will be in the Introduction and/or on the ISO list of patent declarations received (see https://www.iso.org/patents ). Any trade name used in this document is information given for the convenience of users and does not constitute an endorsement. For an explanation of the voluntary nature of standards, the meaning of ISO specific terms and expressions related to conformity assessment, as well as information about ISO's adherence to the World Trade Organization (WTO) principles in the Technical Barriers to Trade (TBT), see https://www.iso.org/iso/foreword.html . This document was prepared by the Joint Development Foundation. This document was adopted, under the PAS procedure, by Joint Technical Committee ISO/IEC JTC 1, Information technology, in parallel with its approval by the national bodies of ISO and IEC. Any feedback or questions on this document should be directed to the user\u2019s national standards body. A complete listing of these bodies can be found at https://www.iso.org/members.html .","title":"Foreword"},{"location":"foreword/#foreword","text":"ISO (the International Organization for Standardization) is a worldwide federation of national standards bodies (ISO member bodies). The work of preparing International Standards is normally carried out through ISO technical committees. Each member body interested in a subject for which a technical committee has been established has the right to be represented on that committee. International organizations, governmental and non-governmental, in liaison with ISO, also take part in the work. ISO collaborates closely with the International Electrotechnical Commission (IEC) on all matters of electrotechnical standardization. The procedures used to develop this document and those intended for its further maintenance are described in the ISO/IEC Directives, Part 1. In particular, the different approval criteria needed for the different types of ISO documents should be noted. This document was drafted in accordance with the editorial rules of the ISO/IEC Directives, Part 2 (see https://www.iso.org/directives ). Attention is drawn to the possibility that some of the elements of this document may be the subject of patent rights. ISO shall not be held responsible for identifying any or all such patent rights. Details of any patent rights identified during the development of the document will be in the Introduction and/or on the ISO list of patent declarations received (see https://www.iso.org/patents ). Any trade name used in this document is information given for the convenience of users and does not constitute an endorsement. For an explanation of the voluntary nature of standards, the meaning of ISO specific terms and expressions related to conformity assessment, as well as information about ISO's adherence to the World Trade Organization (WTO) principles in the Technical Barriers to Trade (TBT), see https://www.iso.org/iso/foreword.html . This document was prepared by the Joint Development Foundation. This document was adopted, under the PAS procedure, by Joint Technical Committee ISO/IEC JTC 1, Information technology, in parallel with its approval by the national bodies of ISO and IEC. Any feedback or questions on this document should be directed to the user\u2019s national standards body. A complete listing of these bodies can be found at https://www.iso.org/members.html .","title":"Foreword"},{"location":"how-to-use/","text":"Annex K: How To Use SPDX in Different Scenarios K.1 Including security information in a SPDX document SPDX 2.x has the concept of an External Reference for a Package to \"reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package.\" The specification for External Reference identifiers (Annex F) has four defined categories: - Security: CPE, SWID tag identifier, or reference to security information - Package-Manager: package identifier and locator - Persistent-id: identifier which is guaranteed to remain stable (persistent) over time - Other: Use if none of the above match your use case This section provides usage scenarios of how to leverage the Security and Persistent-id category external references specified above to refer to external security information. A complete SPDX document using these can be found in the examples directory within the SPDX code repository. Multiple instances and types of external security information may be included within a SPDX document. Note that identifiers (e.g. CPE, GitBOM, SWID) are spread throughout Annex F and sometimes locators refer to identifiers. K.1.1 Linking to an advisory Including a reference to a Common Vulnerabilities and Exposures (CVE) advisory applicable to a package is shown in the example below. A SPDX creator should include current publicly known vulnerabilities at the time of document creation. SPDX consumers should always assume vulnerabilities enumerated by a SPDX creator to be out-of-date. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://nvd.nist.gov/vuln/detail/CVE-2020-29573\", \"referenceType\" : \"advisory\" }, { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://nvd.nist.gov/vuln/detail/CVE-2020-6096\", \"referenceType\" : \"advisory\" }, { }, { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://nvd.nist.gov/vuln/detail/CVE-2020-3326\", \"referenceType\" : \"advisory\" } ] K.1.2 Linking to a CSAF To learn how to reference to CSAF formatted security information applicable to a package see the example below, and additional examples here and here. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://github.com/oasis-tcs/csaf/blob/master/csaf_2.0/examples/csaf/csaf_vex/2022-evd-uc-01-a-001.json\", \"referenceType\" : \"advisory\" } ] K.1.3 Linking to a CycloneDX To reference to CycloneDX formatted security information applicable to a package see the example below. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://raw.githubusercontent.com/CycloneDX/bom-examples/ed522d1f051c364e045b87c20665003a0c4ea777/SBOM/laravel-7.12.0/bom.json\", \"referenceType\" : \"advisory\" } ] K.1.4 Linking to an OSV To learn how to include a reference to Open Source Vulnerability (OSV) formatted security information applicable to a package see the example below. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://github.com/github/advisory-database/tree/6b9d5bc96a62bb845ee71e4551a214eb1457e2c6/advisories/github-reviewed/2022/04/GHSA-2gwj-7jmv-h26r/GHSA-2gwj-7jmv-h26r.json\", \"referenceType\" : \"advisory\" } ] K.1.5 Linking to a GitBOM To reference to GitBOM formatted security information applicable to a package see the example below. \"externalRefs\" : [ { \"referenceCategory\" : \"PERSISTENT-ID\", \"referenceLocator\" : \"gitoid:blob:sha1:d8bcd58df2b14818b8237bb70c979d62c7df5747\", \"referenceType\" : \"gitbom\" \"referenceComment\" : \"GitBOM Object Id for the HeartBleed fix in ssl/d1_both.c\" } , { \"referenceCategory\" : \"PERSISTENT-ID\", \"referenceLocator\" : \"gitoid:blob:sha1:bcb99b819dadaebdf2c8f88d92ee9024c45f9df3\", \"referenceType\" : \"gitbom\" \"referenceComment\" : \"GitBOM Object Id for the HeartBleed fix in ssl/t1_lib.c\" } ] K.1.6 Linking to a vulnerability disclosure document To express a reference to a vulnerability disclosure document for a package such Cisco\u2019s response to Apache log4j vulnerability. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd\", \"referenceType\" : \"advisory\" } ] To communicate that a package is not vulnerable to a specific vulnerability it is recommended to reference a web page indicating why given vulnerabilities are not applicable. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://example.com/product-x/security-info.html\", \"referenceType\" : \"advisory\" } ] To refer to a security disclosure feed, such as the security bulletins from CERT-EU . \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://cert.europa.eu/cert/Data/newsletter/reviewlatest-SecurityBulletins.xml\", \"referenceType\" : \"advisory\" } ] K.1.7 Linking to a code fix for a security issue To reference a code fix for a security issue applicable to a package see the example below. In this example, the link points to a specific code revision containing the fix for CVE-2020-28498 . \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://github.com/indutny/elliptic/commit/441b7428b0e8f6636c42118ad2aaa186d3c34c3f\", \"referenceType\" : \"fix\" } ] A fix reference may point to a configuration change for example the patch file as one of the fixes for CVE-2022-26499 . \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://downloads.digium.com/pub/security/AST-2022-002-16.diff\", \"referenceType\" : \"fix\" } ] Alternatively, it may also link to a landing page with patches for a variety of products such as Oracle patch information for CVE-2021-44228 . \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://www.oracle.com/security-alerts/cpujan2022.html\", \"referenceType\" : \"fix\" } ] K.1.8 Linking to any security related document If you want to reference any security information related to a package but cannot or do not wish to specify its kind, use the url referenceType. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://github.com/christianlundkvist/blog/blob/aa3a69b5e4c06e4435070610c0c4a2b1e8731783/2020_05_26_secp256k1_twist_attacks/secp256k1_twist_attacks.md\", \"referenceType\" : \"url\" } ] One can also use it to refer to guidance related to a vulnerability such as CISA guidance for Apache Log4j. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://www.cisa.gov/uscert/apache-log4j-vulnerability-guidance\", \"referenceType\" : \"url\" } ] K.1.9 Linking to an SBOM vulnerability report for a Software Product (per NIST Executive Order 14028) The National Institute of Standards and Technology (NIST) describes the concept of correlating vulnerability and SBOM information for a software product at the component level in \u201c Software Security in Supply Chains: Software Bill of Materials (SBOM) \u201d. Use the ExternalRefs SECURITY category and advisory referenceType to report on vulnerabilities related to the components contained in a software product\u2019s SBOM. This enables a software producer to articulate to software consumers the status of vulnerabilities contained in the software product, by means of reporting vulnerability information at either the SBOM document or component level. Providing a link to such data at the time the SBOM is published provides a pointer for where to find this relevant vulnerability information without promulgating vulnerability information inside the SBOM. This is advantageous because the vulnerability information has a short shelf-life (it will change frequently) while the SBOM component data isn\u2019t likely to change if the software has not changed. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://github.com/rjb4standards/REA-Products/blob/master/SBOM_and_VDRbaseline/sag-pm-118_VDR.json\", \"referenceType\" : \"advisory\" } ] K.2 Satisfying NTIA Minimum Elements for an SBOM using SPDX K.2.1 US Executive Order 14028 Minimum Elements for an SBOM US Executive Order 14028 in conjunction with the National Telecommunications and Information Administration (NTIA) outlined minimum elements for an SBOM. The minimum elements are detailed in NTIA's Framing Software Component Transparency: Establishing a Common Software Bill of Maternials and The Minimum Elements for a SBOM documents and summarized below: SBOM Minimum Field Description Author Name Author of the SBOM entry (this may not always be the supplier). Supplier Name Name or identity of the supplier of the component in the SBOM entry. Component Name Designation assigned to a unit of software defined by the original supplier. Version String Version used to identify a component. Component Hash A cryptographic hash to uniquely identify a component. Unique Identifier A unique identifier to help identify components or serve as a look-up key for relevant databases. Relationship Characterizing the relationship that an upstream component X is included in software Y. Timestamp Record of the date and time of the SBOM data assembly. K.2.2 Mapping NTIA Minimum Elements to SPDX Fields The SPDX Specification contains fields able to address each of the NTIA minimum required data fields. NTIA SBOM Minimum Field Satisfying SPDX field Author Name (6.8) Creator Supplier Name (7.5) Package Supplier Component Name (7.1) Package Name Version String (7.3) Package Version Component Hash (7.10) Package Checksum Unique Identifier (7.2) Package SPDX Identifier (6.5) SPDX Document Namespace Relationship (11.1) Relationship: CONTAINS , DESCRIBES The document must DESCRIBES at least one package. Timestamp (6.9) Created","title":"Annex K: How To Use SPDX in Different Scenarios"},{"location":"how-to-use/#annex-k-how-to-use-spdx-in-different-scenarios","text":"","title":"Annex K: How To Use SPDX in Different Scenarios"},{"location":"how-to-use/#k1-including-security-information-in-a-spdx-document","text":"SPDX 2.x has the concept of an External Reference for a Package to \"reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package.\" The specification for External Reference identifiers (Annex F) has four defined categories: - Security: CPE, SWID tag identifier, or reference to security information - Package-Manager: package identifier and locator - Persistent-id: identifier which is guaranteed to remain stable (persistent) over time - Other: Use if none of the above match your use case This section provides usage scenarios of how to leverage the Security and Persistent-id category external references specified above to refer to external security information. A complete SPDX document using these can be found in the examples directory within the SPDX code repository. Multiple instances and types of external security information may be included within a SPDX document. Note that identifiers (e.g. CPE, GitBOM, SWID) are spread throughout Annex F and sometimes locators refer to identifiers.","title":"K.1 Including security information in a SPDX document"},{"location":"how-to-use/#k11-linking-to-an-advisory","text":"Including a reference to a Common Vulnerabilities and Exposures (CVE) advisory applicable to a package is shown in the example below. A SPDX creator should include current publicly known vulnerabilities at the time of document creation. SPDX consumers should always assume vulnerabilities enumerated by a SPDX creator to be out-of-date. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://nvd.nist.gov/vuln/detail/CVE-2020-29573\", \"referenceType\" : \"advisory\" }, { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://nvd.nist.gov/vuln/detail/CVE-2020-6096\", \"referenceType\" : \"advisory\" }, { }, { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://nvd.nist.gov/vuln/detail/CVE-2020-3326\", \"referenceType\" : \"advisory\" } ]","title":"K.1.1 Linking to an advisory"},{"location":"how-to-use/#k12-linking-to-a-csaf","text":"To learn how to reference to CSAF formatted security information applicable to a package see the example below, and additional examples here and here. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://github.com/oasis-tcs/csaf/blob/master/csaf_2.0/examples/csaf/csaf_vex/2022-evd-uc-01-a-001.json\", \"referenceType\" : \"advisory\" } ]","title":"K.1.2 Linking to a CSAF"},{"location":"how-to-use/#k13-linking-to-a-cyclonedx","text":"To reference to CycloneDX formatted security information applicable to a package see the example below. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://raw.githubusercontent.com/CycloneDX/bom-examples/ed522d1f051c364e045b87c20665003a0c4ea777/SBOM/laravel-7.12.0/bom.json\", \"referenceType\" : \"advisory\" } ]","title":"K.1.3 Linking to a CycloneDX"},{"location":"how-to-use/#k14-linking-to-an-osv","text":"To learn how to include a reference to Open Source Vulnerability (OSV) formatted security information applicable to a package see the example below. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://github.com/github/advisory-database/tree/6b9d5bc96a62bb845ee71e4551a214eb1457e2c6/advisories/github-reviewed/2022/04/GHSA-2gwj-7jmv-h26r/GHSA-2gwj-7jmv-h26r.json\", \"referenceType\" : \"advisory\" } ]","title":"K.1.4 Linking to an OSV"},{"location":"how-to-use/#k15-linking-to-a-gitbom","text":"To reference to GitBOM formatted security information applicable to a package see the example below. \"externalRefs\" : [ { \"referenceCategory\" : \"PERSISTENT-ID\", \"referenceLocator\" : \"gitoid:blob:sha1:d8bcd58df2b14818b8237bb70c979d62c7df5747\", \"referenceType\" : \"gitbom\" \"referenceComment\" : \"GitBOM Object Id for the HeartBleed fix in ssl/d1_both.c\" } , { \"referenceCategory\" : \"PERSISTENT-ID\", \"referenceLocator\" : \"gitoid:blob:sha1:bcb99b819dadaebdf2c8f88d92ee9024c45f9df3\", \"referenceType\" : \"gitbom\" \"referenceComment\" : \"GitBOM Object Id for the HeartBleed fix in ssl/t1_lib.c\" } ]","title":"K.1.5 Linking to a GitBOM"},{"location":"how-to-use/#k16-linking-to-a-vulnerability-disclosure-document","text":"To express a reference to a vulnerability disclosure document for a package such Cisco\u2019s response to Apache log4j vulnerability. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd\", \"referenceType\" : \"advisory\" } ] To communicate that a package is not vulnerable to a specific vulnerability it is recommended to reference a web page indicating why given vulnerabilities are not applicable. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://example.com/product-x/security-info.html\", \"referenceType\" : \"advisory\" } ] To refer to a security disclosure feed, such as the security bulletins from CERT-EU . \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://cert.europa.eu/cert/Data/newsletter/reviewlatest-SecurityBulletins.xml\", \"referenceType\" : \"advisory\" } ]","title":"K.1.6 Linking to a vulnerability disclosure document"},{"location":"how-to-use/#k17-linking-to-a-code-fix-for-a-security-issue","text":"To reference a code fix for a security issue applicable to a package see the example below. In this example, the link points to a specific code revision containing the fix for CVE-2020-28498 . \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://github.com/indutny/elliptic/commit/441b7428b0e8f6636c42118ad2aaa186d3c34c3f\", \"referenceType\" : \"fix\" } ] A fix reference may point to a configuration change for example the patch file as one of the fixes for CVE-2022-26499 . \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://downloads.digium.com/pub/security/AST-2022-002-16.diff\", \"referenceType\" : \"fix\" } ] Alternatively, it may also link to a landing page with patches for a variety of products such as Oracle patch information for CVE-2021-44228 . \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://www.oracle.com/security-alerts/cpujan2022.html\", \"referenceType\" : \"fix\" } ]","title":"K.1.7 Linking to a code fix for a security issue"},{"location":"how-to-use/#k18-linking-to-any-security-related-document","text":"If you want to reference any security information related to a package but cannot or do not wish to specify its kind, use the url referenceType. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://github.com/christianlundkvist/blog/blob/aa3a69b5e4c06e4435070610c0c4a2b1e8731783/2020_05_26_secp256k1_twist_attacks/secp256k1_twist_attacks.md\", \"referenceType\" : \"url\" } ] One can also use it to refer to guidance related to a vulnerability such as CISA guidance for Apache Log4j. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://www.cisa.gov/uscert/apache-log4j-vulnerability-guidance\", \"referenceType\" : \"url\" } ]","title":"K.1.8 Linking to any security related document"},{"location":"how-to-use/#k19-linking-to-an-sbom-vulnerability-report-for-a-software-product-per-nist-executive-order-14028","text":"The National Institute of Standards and Technology (NIST) describes the concept of correlating vulnerability and SBOM information for a software product at the component level in \u201c Software Security in Supply Chains: Software Bill of Materials (SBOM) \u201d. Use the ExternalRefs SECURITY category and advisory referenceType to report on vulnerabilities related to the components contained in a software product\u2019s SBOM. This enables a software producer to articulate to software consumers the status of vulnerabilities contained in the software product, by means of reporting vulnerability information at either the SBOM document or component level. Providing a link to such data at the time the SBOM is published provides a pointer for where to find this relevant vulnerability information without promulgating vulnerability information inside the SBOM. This is advantageous because the vulnerability information has a short shelf-life (it will change frequently) while the SBOM component data isn\u2019t likely to change if the software has not changed. \"externalRefs\" : [ { \"referenceCategory\" : \"SECURITY\", \"referenceLocator\" : \"https://github.com/rjb4standards/REA-Products/blob/master/SBOM_and_VDRbaseline/sag-pm-118_VDR.json\", \"referenceType\" : \"advisory\" } ]","title":"K.1.9 Linking to an SBOM vulnerability report for a Software Product (per NIST Executive Order 14028)"},{"location":"how-to-use/#k2-satisfying-ntia-minimum-elements-for-an-sbom-using-spdx","text":"","title":"K.2 Satisfying NTIA Minimum Elements for an SBOM using SPDX"},{"location":"how-to-use/#k21-us-executive-order-14028-minimum-elements-for-an-sbom","text":"US Executive Order 14028 in conjunction with the National Telecommunications and Information Administration (NTIA) outlined minimum elements for an SBOM. The minimum elements are detailed in NTIA's Framing Software Component Transparency: Establishing a Common Software Bill of Maternials and The Minimum Elements for a SBOM documents and summarized below: SBOM Minimum Field Description Author Name Author of the SBOM entry (this may not always be the supplier). Supplier Name Name or identity of the supplier of the component in the SBOM entry. Component Name Designation assigned to a unit of software defined by the original supplier. Version String Version used to identify a component. Component Hash A cryptographic hash to uniquely identify a component. Unique Identifier A unique identifier to help identify components or serve as a look-up key for relevant databases. Relationship Characterizing the relationship that an upstream component X is included in software Y. Timestamp Record of the date and time of the SBOM data assembly.","title":"K.2.1 US Executive Order 14028 Minimum Elements for an SBOM"},{"location":"how-to-use/#k22-mapping-ntia-minimum-elements-to-spdx-fields","text":"The SPDX Specification contains fields able to address each of the NTIA minimum required data fields. NTIA SBOM Minimum Field Satisfying SPDX field Author Name (6.8) Creator Supplier Name (7.5) Package Supplier Component Name (7.1) Package Name Version String (7.3) Package Version Component Hash (7.10) Package Checksum Unique Identifier (7.2) Package SPDX Identifier (6.5) SPDX Document Namespace Relationship (11.1) Relationship: CONTAINS , DESCRIBES The document must DESCRIBES at least one package. Timestamp (6.9) Created","title":"K.2.2 Mapping NTIA Minimum Elements to SPDX Fields"},{"location":"introduction/","text":"Introduction Companies and organizations (collectively \u201cOrganizations\u201d) are widely using and reusing open source and other software packages. Accurate identification of software is key for many supply chain processes. Vulnerability remediation starts with knowing the details of which version of software is in use on a system. Compliance with the associated licenses requires a set of analysis activities and due diligence that each Organization performs independently, which may include a manual and/or automated scan of software and identification of associated licenses followed by manual verification. Software development teams across the globe use the same open source packages, but little infrastructure exists to facilitate collaboration on the analysis or share the results of these analysis activities. As a result, many groups are performing the same work leading to duplicated efforts and redundant information. With this document, the SPDX workgroup has created a data exchange format so that information about software packages and related content may be collected and shared in a common format with the goal of saving time and improving data accuracy.","title":"Introduction"},{"location":"introduction/#introduction","text":"Companies and organizations (collectively \u201cOrganizations\u201d) are widely using and reusing open source and other software packages. Accurate identification of software is key for many supply chain processes. Vulnerability remediation starts with knowing the details of which version of software is in use on a system. Compliance with the associated licenses requires a set of analysis activities and due diligence that each Organization performs independently, which may include a manual and/or automated scan of software and identification of associated licenses followed by manual verification. Software development teams across the globe use the same open source packages, but little infrastructure exists to facilitate collaboration on the analysis or share the results of these analysis activities. As a result, many groups are performing the same work leading to duplicated efforts and redundant information. With this document, the SPDX workgroup has created a data exchange format so that information about software packages and related content may be collected and shared in a common format with the goal of saving time and improving data accuracy.","title":"Introduction"},{"location":"license-matching-guidelines-and-templates/","text":"Annex B License matching guidelines and templates (Informative) B.1 SPDX license list matching guidelines The SPDX License List Matching Guidelines provide guidelines to be used for the purposes of matching licenses and license exceptions against those included on the SPDX License List. There is no intent here to make a judgment or interpretation, but merely to ensure that when one SPDX user identifies a license as \"BSD-3-Clause,\" for example, it is indeed the same license as what someone else identifies as \"BSD-3-Clause\" and the same license as what is listed on the SPDX License List. As noted here, some of the matching guidelines are implemented in the XML files of the SPDX License List repository. B.2 How these guidelines are applied B.2.1 Purpose To ensure consistent results by different SPDX document creators when matching license information that will be included in the License Information in File field. SPDX document creators or tools may match on the license or exception text itself, the official license header, or the SPDX License List short identifier. B.2.2 Guideline: official license headers The matching guidelines apply to license and exception text, as well as official license headers. Official license headers are defined by the SPDX License List as specific text specified within the license itself to be put in the header of files. (see explanation of SPDX License List fields for more info). The following XML tag is used to implement this guideline: <standardLicenseHeader> B.3 Substantive text B.3.1 Purpose To ensure that when matching licenses and exceptions to the SPDX License List, there is an appropriate balance between matching against the substantive text and disregarding parts of the text that do not alter the substantive text or legal meaning. Further guidelines of what can be disregarded or considered replaceable for purposes of matching are listed below here and in the subsequent specific guidelines. A conservative approach is taken in regard to rules relating to disregarded or replaceable text. B.3.2 Guideline: verbatim text License and exception text should be the same verbatim text (except for the guidelines stated here). The text should be in the same order, e.g., differently ordered paragraphs would not be considered a match. B.3.3 Guideline: no additional text Matched text should only include that found in the vetted license or exception text. Where a license or exception found includes additional text or clauses, this should not be considered a match. B.3.4 Guideline: replaceable text Some licenses include text that refers to the specific copyright holder or author, yet the rest of the license is exactly the same. The intent here is to avoid the inclusion of a specific name in one part of the license resulting in a non-match where the license is otherwise an exact match to the legally substantive terms (e.g., the third clause and disclaimer in the BSD licenses, or the third, fourth, and fifth clauses of Apache-1.1). In these cases, there should be a positive license match. The text indicated as such can be replaced with similar values (e.g., a different name or generic term; different date) and still be considered a positive match. This rule also applies to text-matching in official license headers (see Guideline: official license headers). The following XML tag is used to implement this guideline. <alt> with 2 attributes: match - a POSIX extended regular expression (ERE) to match the replaceable text name - an identifier for the variable text unique to the license XML document The original text is enclosed within the beginning and ending alt tags. For example: <alt match=\"(?i:copyright.{0,200}).\" name=\"copyright1\">Copyright Linux Foundation</alt> The original replaceable text appears on the SPDX License List webpage in red text. B.3.5 Guideline: omittable text Some licenses have text that can simply be ignored. The intent here is to avoid the inclusion of certain text that is superfluous or irrelevant in regards to the substantive license text resulting in a non-match where the license is otherwise an exact match (e.g., directions on how to apply the license or other similar exhibits). In these cases, there should be a positive license match. The license should be considered a match if the text indicated is present and matches OR the text indicated is missing altogether. The following XML tag is used to implement this guideline: <optional> For example: <optional>Apache License Version 2.0, January 2004 http://www.apache.org/licenses/</optional> Omittable text appears on the SPDX License List webpage in blue text. B.4 Whitespace B.4.1 Purpose To avoid the possibility of a non-match due to different spacing of words, line breaks, or paragraphs. B.4.2 Guideline All whitespace should be treated as a single blank space. XML files do not require specific markup to implement this guideline. B.5 Capitalization B.5.1 Purpose To avoid the possibility of a non-match due to lowercase or uppercase letters in otherwise the same words. B.5.2 Guideline All uppercase and lowercase letters should be treated as lowercase letters. XML files do not require specific markup to implement this guideline. B.6 Punctuation B.6.1 Purpose Because punctuation can change the meaning of a sentence, punctuation needs to be included in the matching process. XML files do not require specific markup to implement this guideline. B.6.2 Guideline: punctuation Punctuation should be matched, unless otherwise stated in these guidelines. B.6.3 Guideline: hyphens, dashes Any hyphen, dash, en dash, em dash, or other variation should be considered equivalent. B.6.4 Guideline: Quotes Any variation of quotations (single, double, curly, etc.) should be considered equivalent. B.7 Code Comment Indicators B.7.1 Purpose To avoid the possibility of a non-match due to the existence or absence of code comment indicators placed within the license text, e.g. at the start of each line of text. B.7.2 Guideline Any kind of code comment indicator or prefix which occurs at the beginning of each line in a matchable section should be ignored for matching purposes. XML files do not require specific markup to implement this guideline. B.8 Bullets and numbering B.8.1 Purpose To avoid the possibility of a non-match due to the otherwise same license using bullets instead of numbers, number instead of letter, or no bullets instead of bullet, etc., for a list of clauses. B.8.2 Guideline Where a line starts with a bullet, number, letter, or some form of a list item (determined where list item is followed by a space, then the text of the sentence), ignore the list item for matching purposes. The following XML tag is used to implement this guideline: <bullet> For example: <bullet>1.0</bullet> B.9 Varietal word spelling B.9.1 Purpose English uses different spelling for some words. By identifying the spelling variations for words found or likely to be found in licenses, we avoid the possibility of a non-match due to the same word being spelled differently. This list is not meant to be an exhaustive list of all spelling variations, but meant to capture the words most likely to be found in open source software licenses. B.9.2 Guideline The words in each line of the text file available at https://spdx.org/licenses/equivalentwords.txt are considered equivalent and interchangeable. XML files do not require specific markup to implement this guideline. B.10 Copyright symbol B.10.1 Purpose By having a rule regarding the use of \"\u00a9\", \"(c)\", or \"copyright\", we avoid the possibility of a mismatch based on these variations. B.10.2 Guideline \"\u00a9\", \"(c)\", or \"Copyright\" should be considered equivalent and interchangeable. XML files do not require specific markup to implement this guideline. The copyright symbol is part of the copyright notice, see implementation of that guideline below. B.11 Copyright notice B.11.1 Purpose To avoid a license mismatch merely because the copyright notice (usually found above the actual license or exception text) is different. The copyright notice is important information to be recorded elsewhere in the SPDX document, but for the purposes of matching a license to the SPDX License List, it should be ignored because it is not part of the substantive license text. B.11.2 Guideline Ignore copyright notices. A copyright notice consists of the following elements, for example: \"2012 Copyright, John Doe. All rights reserved.\" or \"(c) 2012 John Doe.\" The following XML tag is used to implement this guideline: <copyrightText> For example: <copyrightText>Copyright 2022 Linux Foundation</copyrightText> B.12 License name or title B.12.1 Purpose To avoid a license mismatch merely because the name or title of the license is different than how the license is usually referred to or different than the SPDX full name. This also avoids a mismatch if the title or name of the license is simply not included. B.12.2 Guideline Ignore the license name or title for matching purposes, so long as what ignored is the title only and there is no additional substantive text added here. The following XML tag is used to implement this guideline: <titleText> For example: <titleText>Attribution Assurance License</titleText> B.13 Extraneous text at the end of a license B.13.1 Purpose To avoid a license mismatch merely because extraneous text that appears at the end of the terms of a license is different or missing. This also avoids a mismatch if the extraneous text merely serves as a license notice example and includes a specific copyright holder's name. B.13.2 Guideline Ignore any text that occurs after the obvious end of the license and does not include substantive text of the license, for example: text that occurs after a statement such as, \"END OF TERMS AND CONDITIONS,\" or an exhibit or appendix that includes an example or instructions on to how to apply the license to your code. Do not apply this guideline or ignore text that is comprised of additional license terms (e.g., permitted additional terms under GPL-3.0, section 7). To implement this guideline, use the <optional> XML element tag as described in section B.3.5. B.14 HTTP Protocol B.14.1 Purpose To avoid a license mismatch due to a difference in a hyperlink protocol (e.g. http vs. https). B.14.2 Guideline HTTP:// and HTTPS:// should be considered equivalent. XML files do not require specific markup to implement this guideline. B.15 SPDX License list B.15.1 Template access The license XML can be accessed in the license-list-data repository under the license-list-XML directory. Although the license list XML files can also be found in the license-list-XML repo, users are encouraged to use the published versions in the license-list-data repository. The license-list-data repository is tagged by release. Only tagged released versions of the license list are considered stable. B.15.2 License List XML format A full schema for the License List XML can be found at https://github.com/spdx/license-list-XML/blob/master/schema/ListedLicense.xsd. B.15.3 Legacy Text Template format Prior to the XML format, a text template was used to express variable and optional text in licenses. This text template is still supported, however, users are encouraged to use the more expressive XML format. A legacy template is composed of text with zero or more rules embedded in it. A rule is a variable section of a license wrapped between double angle brackets \u201c\\<\\<>>\u201d and is composed of 4 fields. Each field is separated with a semi-colon \u201c;\u201d. Rules cannot be embedded within other rules. Rule fields begin with a case sensitive tag followed by an equal sign \u201c=\u201d. Rule fields: type: indicates whether the text is replaceable or omittable as per Matching Guideline #2 (\u201cSubstantive Text\u201d). Indicated by <<var; . . . >> or... Indicated by <<beginOptional; . . .>> and <<endOptional>> respectively. This field is the first field and is required. name: name of the field in the template. This field is unique within each license template. This field is required. original: the original text of the rule. This field is required for a rule type: <<var; . . . >> match: a POSIX extended regular expression (ERE). This field is required for a rule type: <<var; . . . >> The POSIX ERE in the match field has the following restrictions and extensions: Semicolons are escaped with \\; POSIX Bracket Extensions are not allowed EXAMPLE: <<var;name=organizationClause3;original=the copyright holder;match=.+>>","title":"Annex B: License Matching Guidelines and Templates"},{"location":"license-matching-guidelines-and-templates/#annex-b-license-matching-guidelines-and-templates-informative","text":"","title":"Annex B License matching guidelines and templates (Informative)"},{"location":"license-matching-guidelines-and-templates/#b1-spdx-license-list-matching-guidelines","text":"The SPDX License List Matching Guidelines provide guidelines to be used for the purposes of matching licenses and license exceptions against those included on the SPDX License List. There is no intent here to make a judgment or interpretation, but merely to ensure that when one SPDX user identifies a license as \"BSD-3-Clause,\" for example, it is indeed the same license as what someone else identifies as \"BSD-3-Clause\" and the same license as what is listed on the SPDX License List. As noted here, some of the matching guidelines are implemented in the XML files of the SPDX License List repository.","title":"B.1 SPDX license list matching guidelines "},{"location":"license-matching-guidelines-and-templates/#b2-how-these-guidelines-are-applied","text":"","title":"B.2 How these guidelines are applied "},{"location":"license-matching-guidelines-and-templates/#b21-purpose","text":"To ensure consistent results by different SPDX document creators when matching license information that will be included in the License Information in File field. SPDX document creators or tools may match on the license or exception text itself, the official license header, or the SPDX License List short identifier.","title":"B.2.1 Purpose "},{"location":"license-matching-guidelines-and-templates/#b22-guideline-official-license-headers","text":"The matching guidelines apply to license and exception text, as well as official license headers. Official license headers are defined by the SPDX License List as specific text specified within the license itself to be put in the header of files. (see explanation of SPDX License List fields for more info). The following XML tag is used to implement this guideline: <standardLicenseHeader>","title":"B.2.2 Guideline: official license headers "},{"location":"license-matching-guidelines-and-templates/#b3-substantive-text","text":"","title":"B.3 Substantive text "},{"location":"license-matching-guidelines-and-templates/#b31-purpose","text":"To ensure that when matching licenses and exceptions to the SPDX License List, there is an appropriate balance between matching against the substantive text and disregarding parts of the text that do not alter the substantive text or legal meaning. Further guidelines of what can be disregarded or considered replaceable for purposes of matching are listed below here and in the subsequent specific guidelines. A conservative approach is taken in regard to rules relating to disregarded or replaceable text.","title":"B.3.1 Purpose "},{"location":"license-matching-guidelines-and-templates/#b32-guideline-verbatim-text","text":"License and exception text should be the same verbatim text (except for the guidelines stated here). The text should be in the same order, e.g., differently ordered paragraphs would not be considered a match.","title":"B.3.2 Guideline: verbatim text "},{"location":"license-matching-guidelines-and-templates/#b33-guideline-no-additional-text","text":"Matched text should only include that found in the vetted license or exception text. Where a license or exception found includes additional text or clauses, this should not be considered a match.","title":"B.3.3 Guideline: no additional text "},{"location":"license-matching-guidelines-and-templates/#b34-guideline-replaceable-text","text":"Some licenses include text that refers to the specific copyright holder or author, yet the rest of the license is exactly the same. The intent here is to avoid the inclusion of a specific name in one part of the license resulting in a non-match where the license is otherwise an exact match to the legally substantive terms (e.g., the third clause and disclaimer in the BSD licenses, or the third, fourth, and fifth clauses of Apache-1.1). In these cases, there should be a positive license match. The text indicated as such can be replaced with similar values (e.g., a different name or generic term; different date) and still be considered a positive match. This rule also applies to text-matching in official license headers (see Guideline: official license headers). The following XML tag is used to implement this guideline. <alt> with 2 attributes: match - a POSIX extended regular expression (ERE) to match the replaceable text name - an identifier for the variable text unique to the license XML document The original text is enclosed within the beginning and ending alt tags. For example: <alt match=\"(?i:copyright.{0,200}).\" name=\"copyright1\">Copyright Linux Foundation</alt> The original replaceable text appears on the SPDX License List webpage in red text.","title":"B.3.4 Guideline: replaceable text "},{"location":"license-matching-guidelines-and-templates/#b35-guideline-omittable-text","text":"Some licenses have text that can simply be ignored. The intent here is to avoid the inclusion of certain text that is superfluous or irrelevant in regards to the substantive license text resulting in a non-match where the license is otherwise an exact match (e.g., directions on how to apply the license or other similar exhibits). In these cases, there should be a positive license match. The license should be considered a match if the text indicated is present and matches OR the text indicated is missing altogether. The following XML tag is used to implement this guideline: <optional> For example: <optional>Apache License Version 2.0, January 2004 http://www.apache.org/licenses/</optional> Omittable text appears on the SPDX License List webpage in blue text.","title":"B.3.5 Guideline: omittable text "},{"location":"license-matching-guidelines-and-templates/#b4-whitespace","text":"","title":"B.4 Whitespace "},{"location":"license-matching-guidelines-and-templates/#b41-purpose","text":"To avoid the possibility of a non-match due to different spacing of words, line breaks, or paragraphs.","title":"B.4.1 Purpose "},{"location":"license-matching-guidelines-and-templates/#b42-guideline","text":"All whitespace should be treated as a single blank space. XML files do not require specific markup to implement this guideline.","title":"B.4.2 Guideline "},{"location":"license-matching-guidelines-and-templates/#b5-capitalization","text":"","title":"B.5 Capitalization "},{"location":"license-matching-guidelines-and-templates/#b51-purpose","text":"To avoid the possibility of a non-match due to lowercase or uppercase letters in otherwise the same words.","title":"B.5.1  Purpose "},{"location":"license-matching-guidelines-and-templates/#b52-guideline","text":"All uppercase and lowercase letters should be treated as lowercase letters. XML files do not require specific markup to implement this guideline.","title":"B.5.2  Guideline "},{"location":"license-matching-guidelines-and-templates/#b6-punctuation","text":"","title":"B.6 Punctuation "},{"location":"license-matching-guidelines-and-templates/#b61-purpose","text":"Because punctuation can change the meaning of a sentence, punctuation needs to be included in the matching process. XML files do not require specific markup to implement this guideline.","title":"B.6.1  Purpose "},{"location":"license-matching-guidelines-and-templates/#b62-guideline-punctuation","text":"Punctuation should be matched, unless otherwise stated in these guidelines.","title":"B.6.2  Guideline: punctuation "},{"location":"license-matching-guidelines-and-templates/#b63-guideline-hyphens-dashes","text":"Any hyphen, dash, en dash, em dash, or other variation should be considered equivalent.","title":"B.6.3  Guideline: hyphens, dashes "},{"location":"license-matching-guidelines-and-templates/#b64-guideline-quotes","text":"Any variation of quotations (single, double, curly, etc.) should be considered equivalent.","title":"B.6.4 Guideline: Quotes"},{"location":"license-matching-guidelines-and-templates/#b7-code-comment-indicators","text":"","title":"B.7 Code Comment Indicators "},{"location":"license-matching-guidelines-and-templates/#b71-purpose","text":"To avoid the possibility of a non-match due to the existence or absence of code comment indicators placed within the license text, e.g. at the start of each line of text.","title":"B.7.1  Purpose "},{"location":"license-matching-guidelines-and-templates/#b72-guideline","text":"Any kind of code comment indicator or prefix which occurs at the beginning of each line in a matchable section should be ignored for matching purposes. XML files do not require specific markup to implement this guideline.","title":"B.7.2  Guideline "},{"location":"license-matching-guidelines-and-templates/#b8-bullets-and-numbering","text":"","title":"B.8 Bullets and numbering "},{"location":"license-matching-guidelines-and-templates/#b81-purpose","text":"To avoid the possibility of a non-match due to the otherwise same license using bullets instead of numbers, number instead of letter, or no bullets instead of bullet, etc., for a list of clauses.","title":"B.8.1  Purpose "},{"location":"license-matching-guidelines-and-templates/#b82-guideline","text":"Where a line starts with a bullet, number, letter, or some form of a list item (determined where list item is followed by a space, then the text of the sentence), ignore the list item for matching purposes. The following XML tag is used to implement this guideline: <bullet> For example: <bullet>1.0</bullet>","title":"B.8.2  Guideline "},{"location":"license-matching-guidelines-and-templates/#b9-varietal-word-spelling","text":"","title":"B.9 Varietal word spelling "},{"location":"license-matching-guidelines-and-templates/#b91-purpose","text":"English uses different spelling for some words. By identifying the spelling variations for words found or likely to be found in licenses, we avoid the possibility of a non-match due to the same word being spelled differently. This list is not meant to be an exhaustive list of all spelling variations, but meant to capture the words most likely to be found in open source software licenses.","title":"B.9.1  Purpose "},{"location":"license-matching-guidelines-and-templates/#b92-guideline","text":"The words in each line of the text file available at https://spdx.org/licenses/equivalentwords.txt are considered equivalent and interchangeable. XML files do not require specific markup to implement this guideline.","title":"B.9.2  Guideline "},{"location":"license-matching-guidelines-and-templates/#b10-copyright-symbol","text":"","title":"B.10 Copyright symbol "},{"location":"license-matching-guidelines-and-templates/#b101-purpose","text":"By having a rule regarding the use of \"\u00a9\", \"(c)\", or \"copyright\", we avoid the possibility of a mismatch based on these variations.","title":"B.10.1 Purpose "},{"location":"license-matching-guidelines-and-templates/#b102-guideline","text":"\"\u00a9\", \"(c)\", or \"Copyright\" should be considered equivalent and interchangeable. XML files do not require specific markup to implement this guideline. The copyright symbol is part of the copyright notice, see implementation of that guideline below.","title":"B.10.2 Guideline "},{"location":"license-matching-guidelines-and-templates/#b11-copyright-notice","text":"","title":"B.11 Copyright notice "},{"location":"license-matching-guidelines-and-templates/#b111-purpose","text":"To avoid a license mismatch merely because the copyright notice (usually found above the actual license or exception text) is different. The copyright notice is important information to be recorded elsewhere in the SPDX document, but for the purposes of matching a license to the SPDX License List, it should be ignored because it is not part of the substantive license text.","title":"B.11.1 Purpose "},{"location":"license-matching-guidelines-and-templates/#b112-guideline","text":"Ignore copyright notices. A copyright notice consists of the following elements, for example: \"2012 Copyright, John Doe. All rights reserved.\" or \"(c) 2012 John Doe.\" The following XML tag is used to implement this guideline: <copyrightText> For example: <copyrightText>Copyright 2022 Linux Foundation</copyrightText>","title":"B.11.2 Guideline "},{"location":"license-matching-guidelines-and-templates/#b12-license-name-or-title","text":"","title":"B.12 License name or title "},{"location":"license-matching-guidelines-and-templates/#b121-purpose","text":"To avoid a license mismatch merely because the name or title of the license is different than how the license is usually referred to or different than the SPDX full name. This also avoids a mismatch if the title or name of the license is simply not included.","title":"B.12.1 Purpose "},{"location":"license-matching-guidelines-and-templates/#b122-guideline","text":"Ignore the license name or title for matching purposes, so long as what ignored is the title only and there is no additional substantive text added here. The following XML tag is used to implement this guideline: <titleText> For example: <titleText>Attribution Assurance License</titleText>","title":"B.12.2 Guideline "},{"location":"license-matching-guidelines-and-templates/#b13-extraneous-text-at-the-end-of-a-license","text":"","title":"B.13 Extraneous text at the end of a license "},{"location":"license-matching-guidelines-and-templates/#b131-purpose","text":"To avoid a license mismatch merely because extraneous text that appears at the end of the terms of a license is different or missing. This also avoids a mismatch if the extraneous text merely serves as a license notice example and includes a specific copyright holder's name.","title":"B.13.1 Purpose "},{"location":"license-matching-guidelines-and-templates/#b132-guideline","text":"Ignore any text that occurs after the obvious end of the license and does not include substantive text of the license, for example: text that occurs after a statement such as, \"END OF TERMS AND CONDITIONS,\" or an exhibit or appendix that includes an example or instructions on to how to apply the license to your code. Do not apply this guideline or ignore text that is comprised of additional license terms (e.g., permitted additional terms under GPL-3.0, section 7). To implement this guideline, use the <optional> XML element tag as described in section B.3.5.","title":"B.13.2 Guideline "},{"location":"license-matching-guidelines-and-templates/#b14-http-protocol","text":"","title":"B.14 HTTP Protocol "},{"location":"license-matching-guidelines-and-templates/#b141-purpose","text":"To avoid a license mismatch due to a difference in a hyperlink protocol (e.g. http vs. https).","title":"B.14.1 Purpose "},{"location":"license-matching-guidelines-and-templates/#b142-guideline","text":"HTTP:// and HTTPS:// should be considered equivalent. XML files do not require specific markup to implement this guideline.","title":"B.14.2 Guideline "},{"location":"license-matching-guidelines-and-templates/#b15-spdx-license-list","text":"","title":"B.15 SPDX License list "},{"location":"license-matching-guidelines-and-templates/#b151-template-access","text":"The license XML can be accessed in the license-list-data repository under the license-list-XML directory. Although the license list XML files can also be found in the license-list-XML repo, users are encouraged to use the published versions in the license-list-data repository. The license-list-data repository is tagged by release. Only tagged released versions of the license list are considered stable.","title":"B.15.1 Template access "},{"location":"license-matching-guidelines-and-templates/#b152-license-list-xml-format","text":"A full schema for the License List XML can be found at https://github.com/spdx/license-list-XML/blob/master/schema/ListedLicense.xsd.","title":"B.15.2 License List XML format"},{"location":"license-matching-guidelines-and-templates/#b153-legacy-text-template-format","text":"Prior to the XML format, a text template was used to express variable and optional text in licenses. This text template is still supported, however, users are encouraged to use the more expressive XML format. A legacy template is composed of text with zero or more rules embedded in it. A rule is a variable section of a license wrapped between double angle brackets \u201c\\<\\<>>\u201d and is composed of 4 fields. Each field is separated with a semi-colon \u201c;\u201d. Rules cannot be embedded within other rules. Rule fields begin with a case sensitive tag followed by an equal sign \u201c=\u201d. Rule fields: type: indicates whether the text is replaceable or omittable as per Matching Guideline #2 (\u201cSubstantive Text\u201d). Indicated by <<var; . . . >> or... Indicated by <<beginOptional; . . .>> and <<endOptional>> respectively. This field is the first field and is required. name: name of the field in the template. This field is unique within each license template. This field is required. original: the original text of the rule. This field is required for a rule type: <<var; . . . >> match: a POSIX extended regular expression (ERE). This field is required for a rule type: <<var; . . . >> The POSIX ERE in the match field has the following restrictions and extensions: Semicolons are escaped with \\; POSIX Bracket Extensions are not allowed EXAMPLE: <<var;name=organizationClause3;original=the copyright holder;match=.+>>","title":"B.15.3 Legacy Text Template format "},{"location":"normative-references/","text":"2 Normative references The following documents are referred to in the text in such a way that some or all of their content constitutes requirements of this document. For dated references, only the edition cited applies. For undated references, the latest edition of the referenced document (including any amendments) applies. Apache Maven , Apache Software Foundation, https://maven.apache.org/ Bower API , https://bower.io/docs/api/#install Common Platform Enumeration (CPE) \u2013 Specification , The MITRE Corporation, https://cpe.mitre.org/files/cpe-specification_2.2.pdf NISTIR 7695, Common Platform Enumeration: Naming Specification Version 2.3 , NIST, https://csrc.nist.gov/publications/detail/nistir/7695/final npm-package.json , npm Inc., https://docs.npmjs.com/files/package.json NuGet documentation , Microsoft, https://docs.microsoft.com/en-us/nuget/ POSIX.1-2017 The Open Group Base Specifications Issue 7 , 2018 edition, IEEE/Open Group, https://pubs.opengroup.org/onlinepubs/9699919799/ purl (package URL) , https://github.com/package-url/purl-spec Resource Description Framework (RDF) , 2014-02-25, W3C, http://www.w3.org/standards/techs/rdf RFC-1321, The MD5 Message-Digest Algorithm , The Internet Society Network Working Group, https://tools.ietf.org/html/rfc1321 RFC-3174, US Secure Hash Algorithm 1 (SHA1) , The Internet Society Network Working Group, https://tools.ietf.org/html/rfc3174 RFC-3986, Uniform Resource Identifier (URI): Generic Syntax , The Internet Society Network Working Group, https://tools.ietf.org/html/rfc3986 RFC-5234, Augmented BNF for Syntax Specifications: ABNF , The Internet Society Network Working Group, https://tools.ietf.org/html/rfc5234 RFC-6234, US Secure Hash Algorithms (SHA and SHA-based HMAC and HKDF) , The Internet Society Network Working Group, https://tools.ietf.org/html/rfc6234 SoftWare Heritage persistent IDentifiers (SWHIDs) , https://docs.softwareheritage.org/devel/swh-model/persistent-identifiers.html SPDX and RDF Ontology , http://spdx.org/rdf/ontology/spdx-2-2 SPDX License list , Linux Foundation, https://spdx.org/licenses/ SPDX License Exceptions list , Linux Foundation, https://spdx.org/licenses/exceptions-index.html","title":"Clause 2: Normative references"},{"location":"normative-references/#2-normative-references","text":"The following documents are referred to in the text in such a way that some or all of their content constitutes requirements of this document. For dated references, only the edition cited applies. For undated references, the latest edition of the referenced document (including any amendments) applies. Apache Maven , Apache Software Foundation, https://maven.apache.org/ Bower API , https://bower.io/docs/api/#install Common Platform Enumeration (CPE) \u2013 Specification , The MITRE Corporation, https://cpe.mitre.org/files/cpe-specification_2.2.pdf NISTIR 7695, Common Platform Enumeration: Naming Specification Version 2.3 , NIST, https://csrc.nist.gov/publications/detail/nistir/7695/final npm-package.json , npm Inc., https://docs.npmjs.com/files/package.json NuGet documentation , Microsoft, https://docs.microsoft.com/en-us/nuget/ POSIX.1-2017 The Open Group Base Specifications Issue 7 , 2018 edition, IEEE/Open Group, https://pubs.opengroup.org/onlinepubs/9699919799/ purl (package URL) , https://github.com/package-url/purl-spec Resource Description Framework (RDF) , 2014-02-25, W3C, http://www.w3.org/standards/techs/rdf RFC-1321, The MD5 Message-Digest Algorithm , The Internet Society Network Working Group, https://tools.ietf.org/html/rfc1321 RFC-3174, US Secure Hash Algorithm 1 (SHA1) , The Internet Society Network Working Group, https://tools.ietf.org/html/rfc3174 RFC-3986, Uniform Resource Identifier (URI): Generic Syntax , The Internet Society Network Working Group, https://tools.ietf.org/html/rfc3986 RFC-5234, Augmented BNF for Syntax Specifications: ABNF , The Internet Society Network Working Group, https://tools.ietf.org/html/rfc5234 RFC-6234, US Secure Hash Algorithms (SHA and SHA-based HMAC and HKDF) , The Internet Society Network Working Group, https://tools.ietf.org/html/rfc6234 SoftWare Heritage persistent IDentifiers (SWHIDs) , https://docs.softwareheritage.org/devel/swh-model/persistent-identifiers.html SPDX and RDF Ontology , http://spdx.org/rdf/ontology/spdx-2-2 SPDX License list , Linux Foundation, https://spdx.org/licenses/ SPDX License Exceptions list , Linux Foundation, https://spdx.org/licenses/exceptions-index.html","title":"2 Normative references"},{"location":"other-licensing-information-detected/","text":"10 Other licensing information detected section 10.1 License identifier field 10.1.1 Description Provide a locally unique identifier to refer to licenses that are not found on the SPDX License List. This unique identifier can then be used in the packages, files and snippets sections of the SPDX document (Clause 7 , Clause 8 and Clause 9 , respectively). The metadata for the license identifier field is shown in Table 63. Table 63 \u2014 Metadata for the license identifier field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one) if license is not on SPDX License List. Format \"LicenseRef-\" [idstring] where [idstring] is a unique string containing letters, numbers, . and/or - . 10.1.2 Intent Create a human readable short form license identifier for a license not on the SPDX License List. This identifier shall be unique within the SPDX document. In previous versions of SPDX, the references were required to be sequential numbers, but as of version 1.2, creators may specify references that are easier for humans to remember and mentally map. 10.1.3 Examples EXAMPLE 1 Tag: LicenseID: LicenseID: LicenseRef-1 LicenseID: LicenseRef-Whiskeyware EXAMPLE 2 RDF: Property spdx:licenseID in class spdx:ExtractedLicensingInfo <ExtractedLicensingInfo rdf:about=\"licenseRef-1\"> <licenseId>LicenseRef-1</licenseId> </ExtractedLicensingInfo> <ExtractedLicensingInfo rdf:about=\"licenseRef-Whiskeyware\"> <licenseId>LicenseRef-Whiskeyware</licenseId> </ExtractedLicensingInfo> 10.2 Extracted text field 10.2.1 Description Provide a copy of the actual text of the license reference extracted from the package, file or snippet that is associated with the License Identifier to aid in future analysis. The metadata for the extracted text field is shown in Table 64. Table 64 \u2014 Metadata for the extracted text field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one) if there is a License Identifier assigned. Format Free form text field that may span multiple lines. 10.2.2 Intent Provide the actual text as found in the package, file or snippet for a license that is not on the SPDX License List. 10.2.3 Examples EXAMPLE 1 Tag: ExtractedText: In tag:value format multiple lines are delimited by <text> .. </text> . If only short reference to license present in File: ExtractedText: <text>This software is licensed under the WHISKEY-WARE LICENSE.</text> If indeed full text of license present in File: ExtractedText: <text>\"THE WHISKEY-WARE LICENSE\": whiskeyfan@example.com wrote this file. As long as you retain this notice you can do whatever you want with this stuff. If we meet some day, and you think this stuff is worth it, you can buy me a bottle of whiskey in return.</text> EXAMPLE 2 RDF: Property spdx:extractedText in class spdx:ExtractedLicensingInfo If only short reference to license present in File: <ExtractedLicensingInfo rdf:about=\"licenseRef-Whiskeyware\"> <licenseId>LicenseRef-Whiskeyware</licenseId> <extractedText>This software is licensed under the WHISKEY-WARE LICENSE.</extractedText> </ExtractedLicensingInfo> If indeed full text of license present in File: <ExtractedLicensingInfo rdf:about=\"licenseRef-Whiskeyware\"> <licenseId>LicenseRef-Whiskeyware</licenseId> <extractedText>\"THE WHISKEY-WARE LICENSE\": whiskeyfan@example.com wrote this file. As long as you retain this notice you can do whatever you want with this stuff. If we meet some day, and you think this stuff is worth it, you can buy me a bottle of whiskey in return.</extractedText> </ExtractedLicensingInfo> 10.3 License name field 10.3.1 Description Provide a common name of the license that is not on the SPDX list. If the License Name field is not present for a license, it implies an equivalent meaning to NOASSERTION. The metadata for the license name field is shown in Table 65. Table 65 \u2014 Metadata for the license name field Attribute Value Required No Cardinality 0..1 conditional (optional, one) if license is not on SPDX License List. Format Single line of text 10.3.2 Intent Provides a human readable name suitable for use as a title or label of the license when showing compact lists of licenses from the SPDX document to humans. 10.3.3 Examples EXAMPLE 1 Tag: LicenseName: LicenseName: Whiskey-Ware License EXAMPLE 2 RDF: Property spdx:name in class spdx:ExtractedLicensingInfo <ExtractedLicensingInfo rdf:about=\"licenseRef-Whiskey-Ware\"> <name>Whiskey-Ware License </name> </ExtractedLicensingInfo> 10.4 License cross reference field 10.4.1 Description Provide a pointer to the official source of a license that is not included in the SPDX License List, that is referenced by the License Identifier. The metadata for the license cross reference field is shown in Table 66. Table 66 \u2014 Metadata for the license cross reference field Attribute Value Required Conditional Cardinality 0..* conditional (optional, one or more) if license is not on SPDX License List. Format Uniform Resource Locator 10.4.2 Intent Canonical source for a license currently not on the SPDX License List. 10.4.3 Examples EXAMPLE 1 Tag: LicenseCrossReference: LicenseCrossReference: http://people.freebsd.org/~phk/ EXAMPLE 2 RDF: Property rdfs:seeAlso in class spdx:ExtractedLicensingInfo <ExtractedLicensingInfo rdf:about=\"licenseRef-1\"> <rdfs:seeAlso>http://people.freebsd.org/~phk/</rdfs:seeAlso> </ExtractedLicensingInfo> 10.5 License comment field 10.5.1 Description This field provides a place for the SPDX document creator to record any general comments about the license. The metadata for the license comment field is shown in Table 67. Table 67 \u2014 Metadata for the license comment field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines 10.5.2 Intent Here, the intent is to provide the recipient of the SPDX document with more information determined after careful analysis of a license, or addition cross references. 10.5.3 Examples EXAMPLE 1 Tag: LicenseComment: In tag:value format multiple lines are delimited by <text> .. </text> . LicenseComment: <text>The Whiskey-Ware License has a couple of other standard variants.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:ExtractedLicensingInfo <ExtractedLicensingInfo rdf:about=\"licenseRef-1\"> <rdfs:comment> The Whiskey-Ware License has a couple of other standard variants.</rdfs:comment> </ExtractedLicensingInfo>","title":"Clause 10: Other Licensing Information Detected"},{"location":"other-licensing-information-detected/#10-other-licensing-information-detected-section","text":"","title":"10 Other licensing information detected section"},{"location":"other-licensing-information-detected/#101-license-identifier-field","text":"","title":"10.1 License identifier field "},{"location":"other-licensing-information-detected/#1011-description","text":"Provide a locally unique identifier to refer to licenses that are not found on the SPDX License List. This unique identifier can then be used in the packages, files and snippets sections of the SPDX document (Clause 7 , Clause 8 and Clause 9 , respectively). The metadata for the license identifier field is shown in Table 63. Table 63 \u2014 Metadata for the license identifier field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one) if license is not on SPDX License List. Format \"LicenseRef-\" [idstring] where [idstring] is a unique string containing letters, numbers, . and/or - .","title":"10.1.1 Description"},{"location":"other-licensing-information-detected/#1012-intent","text":"Create a human readable short form license identifier for a license not on the SPDX License List. This identifier shall be unique within the SPDX document. In previous versions of SPDX, the references were required to be sequential numbers, but as of version 1.2, creators may specify references that are easier for humans to remember and mentally map.","title":"10.1.2 Intent"},{"location":"other-licensing-information-detected/#1013-examples","text":"EXAMPLE 1 Tag: LicenseID: LicenseID: LicenseRef-1 LicenseID: LicenseRef-Whiskeyware EXAMPLE 2 RDF: Property spdx:licenseID in class spdx:ExtractedLicensingInfo <ExtractedLicensingInfo rdf:about=\"licenseRef-1\"> <licenseId>LicenseRef-1</licenseId> </ExtractedLicensingInfo> <ExtractedLicensingInfo rdf:about=\"licenseRef-Whiskeyware\"> <licenseId>LicenseRef-Whiskeyware</licenseId> </ExtractedLicensingInfo>","title":"10.1.3 Examples"},{"location":"other-licensing-information-detected/#102-extracted-text-field","text":"","title":"10.2 Extracted text field "},{"location":"other-licensing-information-detected/#1021-description","text":"Provide a copy of the actual text of the license reference extracted from the package, file or snippet that is associated with the License Identifier to aid in future analysis. The metadata for the extracted text field is shown in Table 64. Table 64 \u2014 Metadata for the extracted text field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one) if there is a License Identifier assigned. Format Free form text field that may span multiple lines.","title":"10.2.1 Description"},{"location":"other-licensing-information-detected/#1022-intent","text":"Provide the actual text as found in the package, file or snippet for a license that is not on the SPDX License List.","title":"10.2.2 Intent"},{"location":"other-licensing-information-detected/#1023-examples","text":"EXAMPLE 1 Tag: ExtractedText: In tag:value format multiple lines are delimited by <text> .. </text> . If only short reference to license present in File: ExtractedText: <text>This software is licensed under the WHISKEY-WARE LICENSE.</text> If indeed full text of license present in File: ExtractedText: <text>\"THE WHISKEY-WARE LICENSE\": whiskeyfan@example.com wrote this file. As long as you retain this notice you can do whatever you want with this stuff. If we meet some day, and you think this stuff is worth it, you can buy me a bottle of whiskey in return.</text> EXAMPLE 2 RDF: Property spdx:extractedText in class spdx:ExtractedLicensingInfo If only short reference to license present in File: <ExtractedLicensingInfo rdf:about=\"licenseRef-Whiskeyware\"> <licenseId>LicenseRef-Whiskeyware</licenseId> <extractedText>This software is licensed under the WHISKEY-WARE LICENSE.</extractedText> </ExtractedLicensingInfo> If indeed full text of license present in File: <ExtractedLicensingInfo rdf:about=\"licenseRef-Whiskeyware\"> <licenseId>LicenseRef-Whiskeyware</licenseId> <extractedText>\"THE WHISKEY-WARE LICENSE\": whiskeyfan@example.com wrote this file. As long as you retain this notice you can do whatever you want with this stuff. If we meet some day, and you think this stuff is worth it, you can buy me a bottle of whiskey in return.</extractedText> </ExtractedLicensingInfo>","title":"10.2.3 Examples"},{"location":"other-licensing-information-detected/#103-license-name-field","text":"","title":"10.3 License name field "},{"location":"other-licensing-information-detected/#1031-description","text":"Provide a common name of the license that is not on the SPDX list. If the License Name field is not present for a license, it implies an equivalent meaning to NOASSERTION. The metadata for the license name field is shown in Table 65. Table 65 \u2014 Metadata for the license name field Attribute Value Required No Cardinality 0..1 conditional (optional, one) if license is not on SPDX License List. Format Single line of text","title":"10.3.1 Description"},{"location":"other-licensing-information-detected/#1032-intent","text":"Provides a human readable name suitable for use as a title or label of the license when showing compact lists of licenses from the SPDX document to humans.","title":"10.3.2 Intent"},{"location":"other-licensing-information-detected/#1033-examples","text":"EXAMPLE 1 Tag: LicenseName: LicenseName: Whiskey-Ware License EXAMPLE 2 RDF: Property spdx:name in class spdx:ExtractedLicensingInfo <ExtractedLicensingInfo rdf:about=\"licenseRef-Whiskey-Ware\"> <name>Whiskey-Ware License </name> </ExtractedLicensingInfo>","title":"10.3.3 Examples"},{"location":"other-licensing-information-detected/#104-license-cross-reference-field","text":"","title":"10.4 License cross reference field "},{"location":"other-licensing-information-detected/#1041-description","text":"Provide a pointer to the official source of a license that is not included in the SPDX License List, that is referenced by the License Identifier. The metadata for the license cross reference field is shown in Table 66. Table 66 \u2014 Metadata for the license cross reference field Attribute Value Required Conditional Cardinality 0..* conditional (optional, one or more) if license is not on SPDX License List. Format Uniform Resource Locator","title":"10.4.1 Description"},{"location":"other-licensing-information-detected/#1042-intent","text":"Canonical source for a license currently not on the SPDX License List.","title":"10.4.2 Intent"},{"location":"other-licensing-information-detected/#1043-examples","text":"EXAMPLE 1 Tag: LicenseCrossReference: LicenseCrossReference: http://people.freebsd.org/~phk/ EXAMPLE 2 RDF: Property rdfs:seeAlso in class spdx:ExtractedLicensingInfo <ExtractedLicensingInfo rdf:about=\"licenseRef-1\"> <rdfs:seeAlso>http://people.freebsd.org/~phk/</rdfs:seeAlso> </ExtractedLicensingInfo>","title":"10.4.3 Examples"},{"location":"other-licensing-information-detected/#105-license-comment-field","text":"","title":"10.5 License comment field "},{"location":"other-licensing-information-detected/#1051-description","text":"This field provides a place for the SPDX document creator to record any general comments about the license. The metadata for the license comment field is shown in Table 67. Table 67 \u2014 Metadata for the license comment field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines","title":"10.5.1 Description"},{"location":"other-licensing-information-detected/#1052-intent","text":"Here, the intent is to provide the recipient of the SPDX document with more information determined after careful analysis of a license, or addition cross references.","title":"10.5.2 Intent"},{"location":"other-licensing-information-detected/#1053-examples","text":"EXAMPLE 1 Tag: LicenseComment: In tag:value format multiple lines are delimited by <text> .. </text> . LicenseComment: <text>The Whiskey-Ware License has a couple of other standard variants.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:ExtractedLicensingInfo <ExtractedLicensingInfo rdf:about=\"licenseRef-1\"> <rdfs:comment> The Whiskey-Ware License has a couple of other standard variants.</rdfs:comment> </ExtractedLicensingInfo>","title":"10.5.3 Examples"},{"location":"package-information/","text":"7 Package information section If the SPDX information describes a package, the following fields shall be included per package. 7.1 Package name field The existence of the Package name fields indicates the existence of package information in the SPDX information. Hence in order to describe package information, this field is mandatory. 7.1.1 Description Identify the full name of the package as given by the Package Originator ( 7.6 ). The metadata for the package name field is shown in Table 13. Table 13 \u2014 Metadata for the package name field Attribute Value Required Yes Cardinality 1..1 Format Single line of text. 7.1.2 Intent The name of each package is an important conventional technical identifier to be maintained for each package. 7.1.3 Examples EXAMPLE 1 Tag: PackageName: PackageName: glibc EXAMPLE 2 RDF: Property spdx:name in class spdx:Package <Package rdf:about=\"...\"> <name>glibc</name> </Package> 7.2 Package SPDX identifier field 7.2.1 Description Uniquely identify any element in an SPDX document which may be referenced by other elements. These may be referenced internally and externally with the addition of the SPDX document identifier. The metadata for the package SPDX identifier field is shown in Table 14. Table 14 \u2014 Metadata for the package SPDX identifier field Attribute Value Required Yes Cardinality 1..1 Format \"SPDXRef-\" [idstring] where [idstring] is a unique string containing letters, numbers, . , and/or - . 7.2.2 Intent There may be several versions of the same package within an SPDX document. Each element needs to be able to be referred to uniquely so that relationships between elements can be clearly articulated. 7.2.3 Examples EXAMPLE 1 Tag: SPDXID: SPDXID: SPDXRef-1 EXAMPLE 2 RDF: The URI for the element will follow the form: [SPDX document namespace]#[SPDX identifier] See 6.5 for the definition of the SPDX document namespace and 6.3 for the definition of the SPDX identifier Using xml:base : <rdf:RDF xml:base=\"http://acme.com/spdxdocs/acmeproj/v1.2/1BE2A4FF-5F1A-48D3-8483-28A9B0349A1B\"> ... <Package rdf:about=\"#SPDXRef-1\"> ... </Package> </rdf:RDF> Using document URI: <Package rdf:about=\"http://acme.com/spdxdocs/acmeproj/v1.2/1BE2A4FF-5F1A-48D3-8483-28A9B0349A1B#SPDXRef-1\"> ... </Package> 7.3 Package version field 7.3.1 Description Identify the version of the package. The metadata for the package version field is shown in Table 15. Table 15 \u2014 Metadata for the package version field Attribute Value Required No Cardinality 0..1 Format Single line of text. 7.3.2 Intent The versioning of a package is a useful for identification purposes and for indicating later changes of the package version. 7.3.3 Examples EXAMPLE 1 Tag: PackageVersion: PackageVersion: 2.11.1 EXAMPLE 2 RDF: Property spdx:versionInfo in class spdx:Package <Package rdf:about=\"...\"> ... <versionInfo>2.11.1</versionInfo> ... </Package> 7.4 Package file name field 7.4.1 Description Provide the actual file name of the package, or path of the directory being treated as a package. This may include the packaging and compression methods used as part of the file name, if appropriate. The metadata for the package file name field is shown in Table 16. Table 16 \u2014 Metadata for the package file name field Attribute Value Required No Cardinality 0..1 Format Single line of text. 7.4.2 Intent The actual file name of the compressed file containing the package may be a significant technical element that needs to be included with each package identification information. If a grouping, like a set of files in a sub-directory, is being treated as a package, the sub-directory name may be appropriate to provide. Sub-directory name is preceded with a ./ . See RFC 3986 for syntax. 7.4.3 Examples EXAMPLE 1 Tag: PackageFileName: PackageFileName: glibc-2.11.1.tar.gz Sub-directory being treated as a package: PackageFileName: ./myrootdir/mysubdir1 EXAMPLE 2 RDF: Property spdx:packageFileName in class spdx:Package <Package rdf:about=\"...\"> ... <packageFileName>glibc-2.11.1.tar.gz</packageFileName> ... </Package> Sub-directory being treated as a package: <Package rdf:about=\"...\"> ... <packageFileName>./myrootdir/mysubdir1</packageFileName> ... </Package> 7.5 Package supplier field 7.5.1 Description Identify the actual distribution source for the package/directory identified in the SPDX document. This might or might not be different from the originating distribution source for the package. The name of the Package Supplier shall be an organization or recognized author and not a web site. For example, SourceForge is a host website, not a supplier, the supplier for https://sourceforge.net/projects/bridge/ is \u201c The Linux Foundation .\u201d Use NOASSERTION if: the SPDX document creator has attempted to but cannot reach a reasonable objective determination; the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). The metadata for the package supplier field is shown in Table 17. Table 17 \u2014 Metadata for the package supplier field Attribute Value Required No Cardinality 0..1 Format Single line of text with one of the following: NOASSERTION Person: person name and optional (<email>) Organization: organization name and optional (<email>) 7.5.2 Intent Assist with understanding the point of distribution for the code in the package. This field is vital for ensuring that downstream package recipients can address any ambiguity or concerns that might arise with the information in the SPDX document or the contents of the package it documents. 7.5.3 Examples EXAMPLE 1 Tag: PackageSupplier: PackageSupplier: Person: Jane Doe (jane.doe@example.com) EXAMPLE 2 RDF: Property spdx:supplier in class spdx:Package <Package rdf:about=\"...\"> ... <supplier>Person: Jane Doe (jane.doe@example.com)</supplier> ... </Package> 7.6 Package originator field 7.6.1 Description If the package identified in the SPDX document originated from a different person or organization than identified as Package Supplier (see 7.5 above), this field identifies from where or whom the package originally came. In some cases, a package may be created and originally distributed by a different third party than the Package Supplier of the package. For example, the SPDX document identifies the package as glibc and the Package Supplier as Red Hat , but the Free Software Foundation is the Package Originator. Use NOASSERTION if: the SPDX document creator has attempted to but cannot reach a reasonable objective determination; the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). The metadata for the package originator field is shown in Table 18. Table 18 \u2014 Metadata for the package originator field Attribute Value Required No Cardinality 0..1 Format Single line of text with one of the following: NOASSERTION Person: person name and optional (<email>) Organization: organization name and optional (<email>) 7.6.2 Intent Assist with understanding the point of origin of the code in the package. This field is vital for understanding who originally distributed a package and should help in addressing any ambiguity or concerns that might arise with the information in the SPDX document or the contents of the Package it documents. 7.6.3 Examples EXAMPLE 1 Tag: PackageOriginator: PackageOriginator: Organization: ExampleCodeInspect (contact@example.com) EXAMPLE 2 RDF: Property spdx:originator in class spdx:Package <Package rdf:about=\"...\"> <originator>Organization: ExampleCodeInspect (contact@example.com)</originator> </Package> 7.7 Package download location field 7.7.1 Description This section identifies the download Uniform Resource Locator (URL), or a specific location within a version control system (VCS) for the package at the time that the SPDX document was created. Use: NONE if there is no download location whatsoever. NOASSERTION if: the SPDX document creator has attempted to but cannot reach a reasonable objective determination; the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). The metadata for the package download location field is shown in Table 19. Table 19 \u2014 Metadata for the package download location field Attribute Value Required Yes Cardinality 1..1 Format Uniform resource locator | VCS location | NONE | NOASSERTION For version-controlled files, a VCS location is similar to a URL and has the following syntax: <vcs_tool>+<transport>://<host_name>[/<path_to_repository>][@<revision_tag_or_branch>][#<sub_path>] For git, <revision_tag_or_branch> is a <rev> as described by gitrevisions(1) . It is RECOMMENDED to use the unambiguous refs/heads/<branch> or refs/tags/<tag> , rather than only <branch> or <tag> , in order to prevent issues caused by shadowing. Formats that are local to the client ( ...@... and :[<n>:]<path> ) or involve regular expressions ( <rev>^{/<text>} and :/<text> ) SHOULD NOT be used. This VCS location compact notation (inspired and mostly adopted from pip as of 2015-02-20) supports referencing locations in version control systems such as Git , Mercurial , Subversion and Bazaar , and specifies the type of VCS tool using url prefixes: git+ , hg+ , bzr+ , svn+ and specific transport schemes such as SSH or HTTPS. Specifying sub-paths, branch names, a commit hash, a revision or a tag name is recommended, and supported using the @ delimiter for commits and the # delimiter for sub-paths. Using user names and password in the <host_name> is not supported and should be considered as an error. User access control to URLs or VCS repositories shall be handled outside of an SPDX document. In VCS location compact notations, the trailing slashes in <host_name> , <path_to_repository> are not significant. Leading and trailing slashes in <sub_path> are not significant. 7.7.2 Intent Where and how to download the exact package being referenced is critical verification and tracking data. 7.7.3 Examples EXAMPLE 1 Tag: PackageDownloadLocation: If ambiguous: PackageDownloadLocation: NOASSERTION PackageDownloadLocation: NONE For a plain URL: PackageDownloadLocation: http://ftp.gnu.org/gnu/glibc/glibc-ports-2.15.tar.gz For Git : SPDX supported schemes are: git , git+git , git+https , git+http , and git+ssh . git and git+git are equivalent. Here are the supported forms: PackageDownloadLocation: git://git.myproject.org/MyProject PackageDownloadLocation: git+https://git.myproject.org/MyProject.git PackageDownloadLocation: git+http://git.myproject.org/MyProject PackageDownloadLocation: git+ssh://git.myproject.org/MyProject.git PackageDownloadLocation: git+git://git.myproject.org/MyProject PackageDownloadLocation: git+git@git.myproject.org:MyProject To specify a sub-path to a file or directory inside a repository use the # delimiter: PackageDownloadLocation: git://git.myproject.org/MyProject#src/somefile.c PackageDownloadLocation: git+https://git.myproject.org/MyProject#src/Class.java To specify branch names, a commit hash or a tag name, use the @ delimiter: PackageDownloadLocation: git://git.myproject.org/MyProject.git@master PackageDownloadLocation: git+https://git.myproject.org/MyProject.git@v1.0 PackageDownloadLocation: git://git.myproject.org/MyProject.git@da39a3ee5e6b4b0d3255bfef95601890afd80709 Sub-paths and branch names or commit hash can be combined too: PackageDownloadLocation: git+https://git.myproject.org/MyProject.git@master#/src/MyClass.cpp PackageDownloadLocation: git+https://git.myproject.org/MyProject@da39a3ee5e6b4b0d3255bfef95601890afd80709#lib/variable.rb For Mercurial : SPDX supported schemes are: hg+http , hg+https , hg+static-http , and hg+ssh . The supported forms are: PackageDownloadLocation: hg+http://hg.myproject.org/MyProject PackageDownloadLocation: hg+https://hg.myproject.org/MyProject PackageDownloadLocation: hg+ssh://hg.myproject.org/MyProject To specify a sub-path to a file or directory inside a repository use the # delimiter: PackageDownloadLocation: hg+https://hg.myproject.org/MyProject#src/somefile.c PackageDownloadLocation: hg+https://hg.myproject.org/MyProject#src/Class.java To pass branch names, a commit hash, a tag name or a local branch name use the @ delimiter: PackageDownloadLocation: hg+https://hg.myproject.org/MyProject@da39a3ee5e6b PackageDownloadLocation: hg+https://hg.myproject.org/MyProject@2019 PackageDownloadLocation: hg+https://hg.myproject.org/MyProject@v1.0 PackageDownloadLocation: hg+https://hg.myproject.org/MyProject@special_feature Sub-paths and branch names or commit hash can be combined too: PackageDownloadLocation: hg+https://hg.myproject.org/MyProject@master#/src/MyClass.cpp PackageDownloadLocation: hg+https://hg.myproject.org/MyProject@da39a3ee5e6b#lib/variable.rb For Subversion : SPDX supported schemes are: svn , svn+svn , svn+http , svn+https , svn+ssh . svn and svn+svn are equivalent. The supported forms are: PackageDownloadLocation: svn://svn.myproject.org/svn/MyProject PackageDownloadLocation: svn+svn://svn.myproject.org/svn/MyProject PackageDownloadLocation: svn+http://svn.myproject.org/svn/MyProject/trunk PackageDownloadLocation: svn+https://svn.myproject.org/svn/MyProject/trunk To specify a sub-path to a file or directory inside a repository use the # delimiter: PackageDownloadLocation: svn+https://svn.myproject.org/MyProject#src/somefile.c PackageDownloadLocation: svn+https://svn.myproject.org/MyProject#src/Class.java This support is less important for SVN since the URL path can also contain sub-paths; this two forms are equivalent: PackageDownloadLocation: svn+https://svn.myproject.org/MyProject/trunk#src/somefile.c PackageDownloadLocation: svn+https://svn.myproject.org/MyProject/trunk/src/somefile.c You can specify a revision using the @ delimiter: PackageDownloadLocation: svn+https://svn.myproject.org/svn/MyProject/trunk@2019 Sub-paths and revisions can be combined too: PackageDownloadLocation: svn+https://svn.myproject.org/MyProject@123#/src/MyClass.cpp PackageDownloadLocation: svn+https://svn.myproject.org/MyProject/trunk@1234#lib/variable/variable.rb For Bazaar : SPDX supported schemes are: bzr+http , bzr+https , bzr+ssh , bzr+sftp , bzr+ftp , and bzr+lp . The supported forms are: PackageDownloadLocation: bzr+https://bzr.myproject.org/MyProject/trunk PackageDownloadLocation: bzr+http://bzr.myproject.org/MyProject/trunk PackageDownloadLocation: bzr+sftp://myproject.org/MyProject/trunk PackageDownloadLocation: bzr+ssh://myproject.org/MyProject/trunk PackageDownloadLocation: bzr+ftp://myproject.org/MyProject/trunk PackageDownloadLocation: bzr+lp:MyProject To specify a sub-path to a file or directory inside a repository use the # delimiter: PackageDownloadLocation: bzr+https://bzr.myproject.org/MyProject/trunk#src/somefile.c PackageDownloadLocation: bzr+https://bzr.myproject.org/MyProject/trunk#src/Class.java You can specify a revision or tag using the @ delimiter: PackageDownloadLocation: bzr+https://bzr.myproject.org/MyProject/trunk@2019 PackageDownloadLocation: bzr+http://bzr.myproject.org/MyProject/trunk@v1.0 Sub-paths and revisions can be combined too: PackageDownloadLocation: bzr+https://bzr.myproject.org/MyProject/trunk@2019#src/somefile.c EXAMPLE 2 RDF: Property spdx:downloadLocation in class spdx:Package <Package rdf:about=\"...\"> <downloadLocation>http://ftp.gnu.org/gnu/glibc/glibc-ports-2.15.tar.gz</downloadLocation> </Package> <Package rdf:about=\"...\"> <downloadLocation> git+https://git.myproject.org/MyProject.git@v10.0#src/lib.c </downloadLocation> </Package> <Package rdf:about=\"...\"> <downloadLocation rdf:resource=\"spdx:noassertion\"/> </Package> <Package rdf:about=\"...\"> <downloadLocation rdf:resource=\"spdx:none\"/> </Package> 7.8 Files analyzed field 7.8.1 Description Indicates whether the file content of this package has been available for or subjected to analysis when creating the SPDX document. If false , indicates packages that represent metadata or URI references to a project, product, artifact, distribution or a component. If false , the package shall not contain any files. The metadata for the files analyzed field is shown in Table 20. Table 20 \u2014 Metadata for the files analyzed field Attribute Value Required No. If omitted, the default value of true is assumed. Cardinality 0..1 Format Boolean 7.8.2 Intent A package can refer to a project, product, artifact, distribution or a component that is external to the SPDX document. Some examples: A bundle of external products : Package A can be metadata about Packages and their dependencies. It may also be a loosely organized manifest of references to Packages involved in a product or project. Build or execution may transitively discover more Packages and dependencies. All of these referenced Packages can have their own SPDX documents. In this case, Package A may be defined with its File Analyzed attribute set to false . Package A includes External Document References to SPDX documents containing Packages referenced in all the available relationships. The Relationships section then relates the SPDX documents and contained SPDX elements with appropriate semantics per the dependencies in the scope of Package A. Package relation to external product : Package A can have a STATIC_LINK relationship to Package B, but the binary representation of Package B is furnished by the build process and thus not contained in the file list of Package A. In this case, Package B needs to be defined with its Files Analyzed attribute set to false and all the other attributes subject to the subsequently defined constraints. Then, the relationship between Package A and Package B can be documented as described in Clause 11 . File derived from external product : Package A contains multiple files derived from an outside project. Rather than use the artifactOf* attributes (F.9-4.11) to describe the relation of these files to their project, the outside project can be represented by another package, Package B, whose FilesAnalyzed ( 7.8 ) attribute is set to false . Each of the binary files can then have a relationship to package B (Clause 10). This allows the outside project to be represented by a single SPDX identifier (the identifier of Package B). It also allows the relationship(s) between the outside project and each of the files be represented in much more detail. 7.8.3 Examples EXAMPLE 1 Tag: FilesAnalyzed FilesAnalyzed: false EXAMPLE 2 RDF: Property spdx:filesAnalyzed in class spdx:Package <Package rdf:about=\"...\"> ... <filesAnalyzed>false</filesAnalyzed> ... </Package> 7.9 Package verification code field 7.9.1 Description This field provides an independently reproducible mechanism identifying specific contents of a package based on the actual files (except the SPDX document itself, if it is included in the package) that make up each package and that correlates to the data in this SPDX document. This identifier enables a recipient to determine if any file in the original package (that the analysis was done on) has been changed and permits inclusion of an SPDX document as part of a package. The metadata for the package verification code field is shown in Table 21. Table 21 \u2014 Metadata for the package verification code field Attribute Value Required Yes Cardinality 0..1 if FilesAnalyzed ( 7.8 ) is true or omitted, 0..0 (must be omitted) if FilesAnalyzed is false . Algorithm (see the algorithm below) Format Single line of text with 160 bit binary represented as 40 lowercase hexadecimal digits Algorithm verificationcode = 0 filelist = templist = \"\" for all files in the package { if file is an \"excludes\" file, skip it /* exclude SPDX analysis file(s) */ append templist with \"SHA1(file)/n\" } sort templist in ascending order by SHA1 value filelist = templist with \"/n\"s removed. /* ordered sequence of SHA1 values with no separators */ verificationcode = SHA1(filelist) Where SHA1(file) applies a SHA1 algorithm on the contents of file and returns the result in lowercase hexadecimal digits. Required sort order: '0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f' (ASCII order) 7.9.2 Intent Provide a unique identifier based on the files inside each package, eliminating confusion over which version or modification of a specific package the SPDX document refers to. This field also permits embedding the SPDX document within the package without altering the identifier. 7.9.3 Examples EXAMPLE 1 Tag: PackageVerificationCode: (and optionally (excludes: FileName) ) FileName is specified in 8.1 . PackageVerificationCode: d6a770ba38583ed4bb4525bd96e50461655d2758 (excludes: ./package.spdx) EXAMPLE 2 RDF: Properties spdx:packageVerificationCodeValue , spdx:packageVerificationCodeExcludedFile in class spdx:PackageVerificationCode in class spdx:Package <Package rdf:about=\"...\"> <packageVerificationCode> <PackageVerificationCode> <packageVerificationCodeValue> d6a770ba38583ed4bb4525bd96e50461655d2758 </packageVerificationCodeValue> <packageVerificationCodeExcludedFile> ./package.spdx </packageVerificationCodeExcludedFile> </PackageVerificationCode> </packageVerificationCode> </Package> 7.10 Package checksum field 7.10.1 Description Provide an independently reproducible mechanism that permits unique identification of a specific package that correlates to the data in this SPDX document. This identifier enables a recipient to determine if any file in the original package has been changed. If the SPDX document is to be included in a package, this value should not be calculated. The SHA1 algorithm shall be used to provide the checksum by default. The metadata for the package checksum field is shown in Table 22. Table 22 \u2014 Metadata for the package checksum field Attribute Value Required No Cardinality 0..* Algorithm Algorithms that can be used: SHA1 , SHA224 , SHA256 , SHA384 , SHA512 , SHA3-256 , SHA3-384 , SHA3-512 , BLAKE2b-256 , BLAKE2b-384 , BLAKE2b-512 , BLAKE3 , MD2 , MD4 , MD5 , MD6 , ADLER32 Format There are three components, an algorithm identifier (e.g. SHA1 ), a colon separator : , and a bit value represented as lowercase hexadecimal digits (appropriate as output to the algorithm). 7.10.2 Intent Eliminate confusion over which version or modification of a specific package the SPDX document references by providing a unique identifier of the package. 7.10.3 Examples EXAMPLE 1 Tag: PackageChecksum: PackageChecksum: SHA1: 85ed0817af83a24ad8da68c2b5094de69833983c PackageChecksum: SHA256: 11b6d3ee554eedf79299905a98f9b9a04e498210b59f15094c916c91d150efcd PackageChecksum: MD5: 624c1abb3664f4b35547e7c73864ad24 EXAMPLE 2 RDF: Properties spdx:algorithm , spdx:checksumValue in class spdx:checksum in class spdx:Package <Package rdf:about=\"...\"> <checksum> <Checksum> <algorithm rdf:resource=\"spdx:checksumAlgorithm_sha1\"/> <checksumValue>85ed0817af83a24ad8da68c2b5094de69833983c </checksumValue> </Checksum> </checksum> <checksum> <Checksum> <algorithm rdf:resource=\"spdx:checksumAlgorithm_sha256\"/> <checksumValue> 11b6d3ee554eedf79299905a98f9b9a04e498210b59f15094c916c91d150efcd </checksumValue> </Checksum> </checksum> <checksum> <Checksum> <algorithm rdf:resource=\"spdx:checksumAlgorithm_md5\"/> <checksumValue>624c1abb3664f4b35547e7c73864ad24</checksumValue> </Checksum> </checksum> </Package> 7.11 Package home page field 7.11.1 Description Provide a place for the SPDX document creator to record a web site that serves as the package's home page. This link can also be used to reference further information about the package referenced by the SPDX document creator. Use: NONE if there is no package home page whatsoever. NOASSERTION if: the SPDX document creator has attempted to but cannot reach a reasonable objective determination; the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). The metadata for the package home page field is shown in Table 23. Table 23 \u2014 Metadata for the package home page field Attribute Value Required No Cardinality 0..1 Format Uniform resource locator | NONE | NOASSERTION 7.11.2 Intent Save the recipient of the SPDX document who is looking for more info from having to search for and verify a match between the package and the associated project homepage. 7.11.3 Examples EXAMPLE 1 Tag: PackageHomePage: PackageHomePage: http://ftp.gnu.org/gnu/glibc EXAMPLE 2 RDF: Property doap:homepage in class spdx:Package <Package rdf:about=\"...\"> <doap:homepage >http://ftp.gnu.org/gnu/glibc/</doap:homepage> </Package> This specification uses the prefix doap: to refer to the DOAP namespace: http://usefulinc.com/ns/doap# 7.12 Source information field 7.12.1 Description Provide a place for the SPDX document creator to record any relevant background information or additional comments about the origin of the package. For example, this field might include comments indicating whether the package was pulled from a source code management system or has been repackaged. The metadata for the source information field is shown in Table 24. Table 24 \u2014 Metadata for the source information field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines. In tag:value format this is delimited by <text>...</text> . 7.12.2 Intent The SPDX document creator can provide additional information to describe any anomalies or discoveries in the determination of the origin of the package. 7.12.3 Examples EXAMPLE 1 Tag: PackageSourceInfo: PackageSourceInfo: <text>uses glibc-2_11-branch from git://sourceware.org/git/glibc.git.</text> EXAMPLE 2 RDF: Property spdx:sourceInfo in class spdx:Package <Package rdf:about=\"...\"> ... <sourceInfo>uses glibc-2_11-branch from git://sourceware.org/git/glibc.git.</sourceInfo> ... </Package> 7.13 Concluded license field 7.13.1 Description Contain the license the SPDX document creator has concluded as governing the package or alternative values, if the governing license cannot be determined. The options to populate this field are limited to: A valid SPDX License Expression as defined in Annex D ; NONE , if the SPDX document creator concludes there is no license available for this package; or NOASSERTION if: the SPDX document creator has attempted to but cannot reach a reasonable objective determination; the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If the Concluded License is not the same as the Declared License ( 7.15 ), a written explanation should be provided in the Comments on License field ( 7.16 ). With respect to NOASSERTION , a written explanation in the Comments on License field ( 7.16 ) is preferred. If the Concluded License field is not present in a package, it implies an equivalent meaning to NOASSERTION . The metadata for the concluded license field is shown in Table 25. Table 25 \u2014 Metadata for the concluded license field Attribute Value Required No Cardinality 0..1 Format <SPDX License Expression> | NONE | NOASSERTION where: <SPDX License Expression> is a valid SPDX License Expression as defined in Annex D . 7.13.2 Intent Here, the intent is for the SPDX document creator to analyze the license information in package, and other objective information, e.g., COPYING file, together with the results from any scanning tools, to arrive at a reasonably objective conclusion as to what license governs the package. 7.13.3 Examples EXAMPLE 1 Tag: PackageLicenseConcluded: PackageLicenseConcluded: LGPL-2.0-only PackageLicenseConcluded: (LGPL-2.0-only OR LicenseRef-3) EXAMPLE 2 RDF: Property spdx:licenseConcluded in class spdx:Package <Package rdf:about=\"...\"> ... <licenseConcluded rdf:resource=\"http://spdx.org/licenses/LGPL-2.0-only\"/> ... </Package> <Package rdf:about=\"...\"> ... <licenseConcluded> <DisjunctiveLicenseSet> <member rdf:resource=\"http://spdx.org/licenses/LGPL-2.0-only\" /> <member rdf:resource=\"LicenseRef-3\" /> </DisjunctiveLicenseSet> </licenseConcluded> ... </Package> 7.14 All licenses information from files field 7.14.1 Description This field is to contain a list of all licenses found in the package. The relationship between licenses (i.e., conjunctive, disjunctive) is not specified in this field \u2013 it is simply a listing of all licenses found. The options to populate this field are limited to: A valid SPDX License Expression as defined in Annex D ; NONE , if no license information is detected in any of the files; or NOASSERTION , if: the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If the All Licenses Information from Files field is not present for a package and FilesAnalyzed field ( 7.8 ) for that same pacakge is true or omitted, it implies an equivalent meaning to NOASSERTION . The metadata for all license information from files field is shown in Table 26. Table 26 \u2014 Metadata for the all licenses information from files field Attribute Value Required No Cardinality 0..* (optional) if FilesAnalyzed ( 7.8 ) is true or omitted, 0..0 (must be omitted) if FilesAnalyzed is false . Format <SPDX License Expression> | NONE | NOASSERTION where: <SPDX License Expression> is a valid SPDX License Expression as defined in Annex D . 7.14.2 Intent Here, the intention is to capture all license information detected in the actual files. 7.14.3 Examples EXAMPLE 1 Tag: PackageLicenseInfoFromFiles: PackageLicenseInfoFromFiles: GPL-2.0-only PackageLicenseInfoFromFiles: LicenseRef-1 PackageLicenseInfoFromFiles: LicenseRef-2 EXAMPLE 2 RDF: Property spdx:licenseInfoFromFiles in class spdx:Package <Package rdf:about=\"...\"> ... <licenseInfoFromFiles rdf:resource =\"https://spdx.org/licenses/GPL-2.0-only\" /> <licenseInfoFromFiles rdf:resource=\"#LicenseRef-1\" /> <licenseInfoFromFiles rdf:resource=\"#LicenseRef-2\" /> ... </Package> 7.15 Declared license field 7.15.1 Description List the licenses that have been declared by the authors of the package. Any license information that does not originate from the package authors, e.g. license information from a third-party repository, should not be included in this field. The options to populate this field are limited to: A valid SPDX License Expression as defined in Annex D ; NONE , if the package contains no license information whatsoever; or NOASSERTION if: the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If the Declared License field is not present for a package, it implies an equivalent meaning to NOASSERTION . The metadata for the declared license field is shown in Table 27. Table 27 \u2014 Metadata for the declared license field Attribute Value Required No Cardinality 0..1 Format <SPDX License Expression> | NONE | NOASSERTION where: <SPDX License Expression> is a valid SPDX License Expression as defined in Annex D . 7.15.2 Intent This is simply the license identified in text in one or more files (for example COPYING file) in the source code package. This field is not intended to capture license information obtained from an external source, such as the package website. Such information can be included in Concluded License ( 7.13 ). This field may have multiple Declared Licenses, if multiple licenses are declared at the package level. 7.15.3 Examples EXAMPLE 1 Tag: PackageLicenseDeclared: PackageLicenseDeclared: LGPL-2.0-only PackageLicenseDeclared: (LGPL-2.0-only AND LicenseRef-3) EXAMPLE 2 RDF: Property spdx:licenseDeclared in class spdx:Package <Package rdf:about=\"...\"> ... <licenseDeclared rdf:resource=\"http://spdx.org/licenses/LGPL-2.0-only\"/> ... </Package> <Package rdf:about=\"...\"> ... <licenseDeclared> <ConjunctiveLicenseSet> <member rdf:resource=\"http://spdx.org/licenses/LGPL-2.0-only\"/> <member rdf:resource=\"#LicenseRef-3\" /> </ConjunctiveLicenseSet> </licenseDeclared> ... </Package> 7.16 Comments on license field 7.16.1 Description This field provides a place for the SPDX document creator to record any relevant background information or analysis that went in to arriving at the Concluded License for a package. If the Concluded License does not match the Declared License or License Information from Files, this should be explained by the SPDX document creator. It is also preferable to include an explanation here when the Concluded License is NOASSERTION . The metadata for the comments on license field is shown in Table 28. Table 28 \u2014 Metadata for the comments on license field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines. In tag:value format this is delimited by <text>...</text> . 7.16.2 Intent Here, the intent is to provide the recipient of the SPDX document with a detailed explanation of how the Concluded License was determined if it does not match the License Information from the files or the source code package, is marked NOASSERTION , or other helpful information relevant to determining the license of the package. 7.16.3 Examples EXAMPLE 1 Tag: PackageLicenseComments: PackageLicenseComments: <text>The license for this project changed with the release of version 1.4. The version of the project included here post-dates the license change.</text> EXAMPLE 2 RDF: Property spdx:licenseComments in class spdx:Package <Package rdf:about=\"...\"> ... <licenseComments> This package has been shipped in source and binary form. The binaries were created with gcc 4.5.1 and expect to link to compatible system run time libraries. </licenseComments> ... </Package> 7.17 Copyright text field 7.17.1 Description Identify the copyright holders of the package, as well as any dates present. This will be a free form text field extracted from package information files. The options to populate this field are limited to: Any text related to a copyright notice, even if not complete; NONE if the package contains no copyright information whatsoever; or NOASSERTION , if the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If the Copyright Text field is not present for a package, it implies an equivalent meaning to NOASSERTION . The metadata for the copyright text field is shown in Table 29. Table 29 \u2014 Metadata for the copyright text field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines | NONE | NOASSERTION 7.17.2 Intent Record any copyright notices for the package. 7.17.3 Examples EXAMPLE 1 Tag: PackageCopyrightText: In tag:value format multiple lines are delimited by <text>...</text> . PackageCopyrightText: <text>Copyright 2008-2010 John Smith</text> EXAMPLE 2 RDF: Property spdx:copyrightText in class spdx:Package <Package rdf:about=\"...\"> ... <copyrightText>Copyright 2008-2010 John Smith</copyrightText> ... </Package> 7.18 Package summary description field 7.18.1 Description This field is a short description of the package. The metadata for the package summary description field is shown in Table 30. Table 30 \u2014 Metadata for the package summary description field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines. 7.18.2 Intent Here, the intent is to allow the SPDX document creator to provide concise information about the function or use of the package without having to parse the source code of the actual package. 7.18.3 Examples EXAMPLE 1 Tag: PackageSummary: In tag:value format multiple lines are delimited by <text>...</text> . PackageSummary: <text>GNU C library.</text> EXAMPLE 2 RDF: Property spdx:summary in class spdx:Package <Package rdf:about=\"...\"> ... <summary>GNU C library.</summary> ... </Package> 7.19 Package detailed description field 7.19.1 Description This field is a more detailed description of the package. It may also be extracted from the packages itself. The metadata for the package detailed description field is shown in Table 31. Table 31 \u2014 Metadata for the package detailed description field Attribute Value Required No Cardinality 0..1 Format Free form text than can span multiple lines. 7.19.2 Intent Here, the intent is to provide recipients of the SPDX document with a detailed technical explanation of the functionality, anticipated use, and anticipated implementation of the package. This field may also include a description of improvements over prior versions of the package. 7.19.3 Examples EXAMPLE 1 Tag: PackageDescription: In tag:value format multiple lines are delimited by <text>...</text> . PackageDescription: <text>The GNU C Library defines functions that are specified by the ISO C standard, as well as additional features specific to POSIX and other derivatives of the Unix operating system, and extensions specific to GNU systems.</text> EXAMPLE 2 RDF: Property spdx:description in class spdx:Package <Package rdf:about=\"...\"> ... <description> The GNU C Library defines functions that are specified by the ISO C standard, as well as additional features specific to POSIX and other derivatives of the Unix operating system, and extensions specific to GNU systems. </description> ... </Package> 7.20 Package comment field 7.20.1 Description This field provides a place for the SPDX document creator to record any general comments about the package being described. The metadata for the package comment field is shown in Table 32. Table 32 \u2014 Metadata for the package comment field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines. 7.20.2 Intent Here, the intent is to provide the recipient of the SPDX document with more information determined after careful analysis of a package. 7.20.3 Examples EXAMPLE 1 Tag: PackageComment: In tag:value format multiple lines are delimited by <text>...</text> . PackageComment: <text>The package includes several sub-packages; see Relationship information.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:Package <Package rdf:about=\"...\"> ... <rdfs:comment> The package includes several sub-packages; see Relationship information. </rdfs:comment> ... </Package> 7.21 External reference field 7.21.1 Description An External Reference allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package. The metadata for the external reference field is shown in Table 33. Table 33 \u2014 Metadata for the external reference field Attribute Value Required No Cardinality 0..* Format <category> <type> <locator> where: <category> is SECURITY | PACKAGE-MANAGER | PERSISTENT-ID | OTHER <type> is one of the types listed in Annex F . <locator> is the unique string with no spaces necessary to access the package-specific information, metadata, or content within the target location. The format of the locator is subject to constraints defined by the <type> . 7.21.2 Intent To indicate an outside source of information, metadata enumerations, asset identifiers, or content relevant to the Package, such as a structured naming scheme identifying Packages with known security vulnerabilities. 7.21.3 Examples EXAMPLE 1 Tag: ExternalRef: ExternalRef: SECURITY cpe23Type cpe:2.3:a:pivotal_software:spring_framework:4.1.0:*:*:*:*:*:*:* ExternalRef: PERSISTENT-ID swh swh:1:cnt:94a9ed024d3859793618152ea559a168bbcbb5e2 ExternalRef: OTHER LocationRef-acmeforge acmecorp/acmenator/4.1.3-alpha EXAMPLE 2 RDF: Property externalRef in class spdx:Package of type spdx:ExternalRef For a listed location: <spdx:Package rdf:about=\"...\"> ... <spdx:externalRef> <spdx:ExternalRef> <spdx:referenceCategory rdf:resource =\"spdx:referenceCategory_packageManager\" /> <spdx:referenceType rdf:resource =\"http://spdx.org/rdf/refeferences/maven-central\" /> <spdx:referenceLocator>org.apache.commons:commons-lang:3.2.1 </spdx:referenceLocator> </spdx:ExternalRef> </spdx:externalRef> ... </spdx:package> For an unlisted location: <spdx:Package rdf:about=\"...\"> ... <spdx:externalRef> <spdx:ExternalRef> <spdx:referenceCategory rdf:resource=\"spdx:referenceCategory_other\" /> <spdx:referenceType rdf:resource=\"http://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89-41D3-9A0C-0305E82...LocationRef-acmeforge\" /> <spdx:referenceLocator>acmecorp/acmenator/4.1.3-alpha</spdx:referenceLocator> </spdx:ExternalRef> </spdx:externalRef> ... </spdx:package> The referenceType value for a non-listed location consists of the SPDX document namespace (see 6.5 ) followed by a # and the category as defined in 7.21 . 7.22 External reference comment field 7.22.1 Description To provide human-readable information about the purpose and target of the reference. The metadata for the external reference comment field is shown in Table 34. Table 34 \u2014 Metadata for the external reference comment field Attribute Value Required No Cardinality 0..1 for each External Reference ( 7.21 ) Format Free form text that can span multiple lines. In tag:value format this is delimited by <text>...</text> and is expected to follow an External Reference ( 7.21 ) so that the association can be made. 7.22.2 Intent To inform a human consumer why the reference exists, what kind of information, content or metadata can be extracted. The target's relationship to artifactOf values of files in the package might need to be explained here. If the reference is BINARY, its relationship to PackageDownloadLocation might need to be explained. If the reference is SOURCE, its relationship to PackageDownloadLocation and SourceInformation might need to be explained. 7.22.3 Examples EXAMPLE 1 Tag: ExternalRefComment: ExternalRefComment: <text>NIST National Vulnerability Database (NVD) describes security vulnerabilities (CVEs) which affect Vendor Product Version acmecorp:acmenator:6.6.6.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:ExternalRef <spdx:Package rdf:about=\"...\"> ... <spdx:externalRef> <spdx:ExternalRef> <spdx:referenceCategory rdf:resource =\"spdx:referenceCategory_packageManager\" /> <spdx:referenceType rdf:resource =\"http://spdx.org/rdf/refeferences/maven-central\" /> <spdx:referenceLocator>org.apache.commons:commons-lang:3.2.1 </spdx:referenceLocator> <rdfs:comment> NIST National Vulnerability Database (NVD) describes security vulnerabilities (CVEs) which affect Vendor Product Version acmecorp:acmenator:6.6.6 </rdfs:comment> </spdx:ExternalRef> </spdx:externalRef> ... </spdx:package> 7.23 Package attribution text field 7.23.1 Description This field provides a place for the SPDX document creator to record, at the package level, acknowledgements that might be required to be communicated in some contexts. This is not meant to include the package's actual complete license text (see PackageLicenseConcluded , PackageLicenseDeclared and PackageLicenseInfoFromFiles ), and might or might not include copyright notices (see also PackageCopyrightText ). The SPDX document creator might use this field to record other acknowledgements, such as particular clauses from license texts, which might be necessary or desirable to reproduce. The metadata for the package attribution text field is shown in Table 35. Table 35 \u2014 Metadata for the package attribution text field Attribute Value Required No Cardinality 0..* Format Free form text that can span multiple lines. 7.23.2 Intent The intent is to provide the recipient of the SPDX document with acknowledgement content at a package level, to assist redistributors of the package with reproducing those acknowledgements. This field does not necessarily indicate where, or in which contexts, the acknowledgements need to be reproduced (such as end-user documentation, advertising materials, etc.) and the SPDX document creator might or might not explain elsewhere how they intend for this field to be used. 7.23.3 Examples EXAMPLE 1 Tag: PackageAttributionText: In tag:value format multiple lines are delimited by <text> .. </text> . PackageAttributionText: <text> All advertising materials mentioning features or use of this software must display the following acknowledgement: This product includes software developed by the AT&T. </text> EXAMPLE 2 RDF: Property spdx:attributionText in class spdx:Package <Package rdf:about=\"...\"> <attributionText> All advertising materials mentioning features or use of this software must display the following acknowledgement: This product includes software developed by the AT&T. </attributionText> </Package> 7.24 Primary Package Purpose field 7.24.1 Description This field provides information about the primary purpose of the identified package. Package Purpose is intrinsic to how the package is being used rather than the content of the package. The options to populated this field are limited to: APPLICATION if the package is a software application; FRAMEWORK if the package is a software framework; LIBRARY if the package is a software library; CONTAINER if the package refers to a container image which can be used by a container runtime application; OPERATING-SYSTEM if the package refers to an operating system; DEVICE if the package refers to a chipset, processor, or electronic board; FIRMWARE if the package provides low level control over a device's hardware; SOURCE if the package is a collection of source files; ARCHIVE if the package refers to an archived collection of files (.tar, .zip, etc); FILE if the package is a single file which can be independently distributed (configuration file, statically linked binary, Kubernetes deployment, etc); INSTALL if the package is used to install software on disk; OTHER if the package doesn't fit into the above categories. The metadata for the Primary Package Purpose field is shown in Table 36. Table 36 \u2014 Metadata for the primary package purpose field Attribute Value Required No Cardinality 0..* Format APPLICATION | FRAMEWORK | LIBRARY | CONTAINER | OPERATING-SYSTEM | DEVICE | FIRMWARE | SOURCE | ARCHIVE | FILE | INSTALL | OTHER | 7.24.2 Intent This field is a reasonable estimate of the most likely package usage from the producer and consumer perspective from which both parties can draw conclusions about the context in which the package exists. 7.24.3 Examples EXAMPLE 1 Tag: PrimaryPackagePurpose: PrimaryPackagePurpose: FRAMEWORK EXAMPLE 2 RDF: Property spdx:purpose in class spdx:Package <Package rdf:about=\"cluster-api\"> <primaryPackagePurpose rdf:resource=\"packagePurpose_container\" /> </Package> 7.25 Release Date 7.25.1 Description This field provides a place for recording the date the package was released. Table 37 \u2014 Metadata for the release date Attribute Value Required No Cardinality 0..1 Format YYYY-MM-DDThh:mm:ssZ where: YYYY is year MM is month with leading zero DD is day with leading zero T is delimiter for time hh is hours with leading zero in 24 hour time mm is minutes with leading zero ss is seconds with leading zero Z is universal time indicator 7.25.2 Intent The release date is helpful for strict identification of the prerequisite assumptions of usage. 7.25.3 Examples EXAMPLE 1 Tag: ReleaseDate: ReleaseDate: 2010-01-29T18:30:22Z EXAMPLE 2 RDF: Property spdx:releaseDate in class spdx:Package <Package rdf:about=\"...\"> <releaseDate> 2010-01-29T18:30:22Z </releaseDate> </Package> 7.26 Built Date 7.26.1 Description This field provides a place for recording the actual date the package was built. Table 38 \u2014 Metadata for the built date Attribute Value Required No Cardinality 0..1 Format YYYY-MM-DDThh:mm:ssZ where: YYYY is year MM is month with leading zero DD is day with leading zero T is delimiter for time hh is hours with leading zero in 24 hour time mm is minutes with leading zero ss is seconds with leading zero Z is universal time indicator 7.26.2 Intent The date when the package was built is helpful for strict identification of the prerequisite assumptions of usage. Ideally it should be recorded from build system tools directly or the creation date of the package itself. 7.26.3 Examples EXAMPLE 1 Tag: BuiltDate: BuiltDate: 2010-01-29T18:30:22Z EXAMPLE 2 RDF: Property spdx:builtDate in class spdx:Package <Package rdf:about=\"...\"> <builtDate> 2010-01-29T18:30:22Z </builtDate> </Package> 7.27 Valid Until Date 7.27.1 Description This field provides a place for recording the end of the support period for a package from the supplier. Table 39 \u2014 Metadata for the valid until date Attribute Value Required No Cardinality 0..1 Format YYYY-MM-DDThh:mm:ssZ where: YYYY is year MM is month with leading zero DD is day with leading zero T is delimiter for time hh is hours with leading zero in 24 hour time mm is minutes with leading zero ss is seconds with leading zero Z is universal time indicator 7.27.2 Intent The date when support for the package ends from the supplier. Usage is considered valid until this date. 7.27.3 Examples EXAMPLE 1 Tag: ValidUntilDate: ValidUntilDate: 2030-12-30T18:00:00Z EXAMPLE 2 RDF: Property spdx:validUntilDate in class spdx:Package <Package rdf:about=\"...\"> <validUntilDate> 2030-12-30T18:00:00Z </validUntilDate> </Package>","title":"Clause 7: Package Information"},{"location":"package-information/#7-package-information-section","text":"If the SPDX information describes a package, the following fields shall be included per package.","title":"7 Package information section"},{"location":"package-information/#71-package-name-field","text":"The existence of the Package name fields indicates the existence of package information in the SPDX information. Hence in order to describe package information, this field is mandatory.","title":"7.1 Package name field "},{"location":"package-information/#711-description","text":"Identify the full name of the package as given by the Package Originator ( 7.6 ). The metadata for the package name field is shown in Table 13. Table 13 \u2014 Metadata for the package name field Attribute Value Required Yes Cardinality 1..1 Format Single line of text.","title":"7.1.1 Description"},{"location":"package-information/#712-intent","text":"The name of each package is an important conventional technical identifier to be maintained for each package.","title":"7.1.2 Intent"},{"location":"package-information/#713-examples","text":"EXAMPLE 1 Tag: PackageName: PackageName: glibc EXAMPLE 2 RDF: Property spdx:name in class spdx:Package <Package rdf:about=\"...\"> <name>glibc</name> </Package>","title":"7.1.3 Examples"},{"location":"package-information/#72-package-spdx-identifier-field","text":"","title":"7.2 Package SPDX identifier field "},{"location":"package-information/#721-description","text":"Uniquely identify any element in an SPDX document which may be referenced by other elements. These may be referenced internally and externally with the addition of the SPDX document identifier. The metadata for the package SPDX identifier field is shown in Table 14. Table 14 \u2014 Metadata for the package SPDX identifier field Attribute Value Required Yes Cardinality 1..1 Format \"SPDXRef-\" [idstring] where [idstring] is a unique string containing letters, numbers, . , and/or - .","title":"7.2.1 Description"},{"location":"package-information/#722-intent","text":"There may be several versions of the same package within an SPDX document. Each element needs to be able to be referred to uniquely so that relationships between elements can be clearly articulated.","title":"7.2.2 Intent"},{"location":"package-information/#723-examples","text":"EXAMPLE 1 Tag: SPDXID: SPDXID: SPDXRef-1 EXAMPLE 2 RDF: The URI for the element will follow the form: [SPDX document namespace]#[SPDX identifier] See 6.5 for the definition of the SPDX document namespace and 6.3 for the definition of the SPDX identifier Using xml:base : <rdf:RDF xml:base=\"http://acme.com/spdxdocs/acmeproj/v1.2/1BE2A4FF-5F1A-48D3-8483-28A9B0349A1B\"> ... <Package rdf:about=\"#SPDXRef-1\"> ... </Package> </rdf:RDF> Using document URI: <Package rdf:about=\"http://acme.com/spdxdocs/acmeproj/v1.2/1BE2A4FF-5F1A-48D3-8483-28A9B0349A1B#SPDXRef-1\"> ... </Package>","title":"7.2.3 Examples"},{"location":"package-information/#73-package-version-field","text":"","title":"7.3 Package version field "},{"location":"package-information/#731-description","text":"Identify the version of the package. The metadata for the package version field is shown in Table 15. Table 15 \u2014 Metadata for the package version field Attribute Value Required No Cardinality 0..1 Format Single line of text.","title":"7.3.1 Description"},{"location":"package-information/#732-intent","text":"The versioning of a package is a useful for identification purposes and for indicating later changes of the package version.","title":"7.3.2 Intent"},{"location":"package-information/#733-examples","text":"EXAMPLE 1 Tag: PackageVersion: PackageVersion: 2.11.1 EXAMPLE 2 RDF: Property spdx:versionInfo in class spdx:Package <Package rdf:about=\"...\"> ... <versionInfo>2.11.1</versionInfo> ... </Package>","title":"7.3.3 Examples"},{"location":"package-information/#74-package-file-name-field","text":"","title":"7.4 Package file name field "},{"location":"package-information/#741-description","text":"Provide the actual file name of the package, or path of the directory being treated as a package. This may include the packaging and compression methods used as part of the file name, if appropriate. The metadata for the package file name field is shown in Table 16. Table 16 \u2014 Metadata for the package file name field Attribute Value Required No Cardinality 0..1 Format Single line of text.","title":"7.4.1 Description"},{"location":"package-information/#742-intent","text":"The actual file name of the compressed file containing the package may be a significant technical element that needs to be included with each package identification information. If a grouping, like a set of files in a sub-directory, is being treated as a package, the sub-directory name may be appropriate to provide. Sub-directory name is preceded with a ./ . See RFC 3986 for syntax.","title":"7.4.2 Intent"},{"location":"package-information/#743-examples","text":"EXAMPLE 1 Tag: PackageFileName: PackageFileName: glibc-2.11.1.tar.gz Sub-directory being treated as a package: PackageFileName: ./myrootdir/mysubdir1 EXAMPLE 2 RDF: Property spdx:packageFileName in class spdx:Package <Package rdf:about=\"...\"> ... <packageFileName>glibc-2.11.1.tar.gz</packageFileName> ... </Package> Sub-directory being treated as a package: <Package rdf:about=\"...\"> ... <packageFileName>./myrootdir/mysubdir1</packageFileName> ... </Package>","title":"7.4.3 Examples"},{"location":"package-information/#75-package-supplier-field","text":"","title":"7.5 Package supplier field "},{"location":"package-information/#751-description","text":"Identify the actual distribution source for the package/directory identified in the SPDX document. This might or might not be different from the originating distribution source for the package. The name of the Package Supplier shall be an organization or recognized author and not a web site. For example, SourceForge is a host website, not a supplier, the supplier for https://sourceforge.net/projects/bridge/ is \u201c The Linux Foundation .\u201d Use NOASSERTION if: the SPDX document creator has attempted to but cannot reach a reasonable objective determination; the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). The metadata for the package supplier field is shown in Table 17. Table 17 \u2014 Metadata for the package supplier field Attribute Value Required No Cardinality 0..1 Format Single line of text with one of the following: NOASSERTION Person: person name and optional (<email>) Organization: organization name and optional (<email>)","title":"7.5.1 Description"},{"location":"package-information/#752-intent","text":"Assist with understanding the point of distribution for the code in the package. This field is vital for ensuring that downstream package recipients can address any ambiguity or concerns that might arise with the information in the SPDX document or the contents of the package it documents.","title":"7.5.2 Intent"},{"location":"package-information/#753-examples","text":"EXAMPLE 1 Tag: PackageSupplier: PackageSupplier: Person: Jane Doe (jane.doe@example.com) EXAMPLE 2 RDF: Property spdx:supplier in class spdx:Package <Package rdf:about=\"...\"> ... <supplier>Person: Jane Doe (jane.doe@example.com)</supplier> ... </Package>","title":"7.5.3 Examples"},{"location":"package-information/#76-package-originator-field","text":"","title":"7.6 Package originator field "},{"location":"package-information/#761-description","text":"If the package identified in the SPDX document originated from a different person or organization than identified as Package Supplier (see 7.5 above), this field identifies from where or whom the package originally came. In some cases, a package may be created and originally distributed by a different third party than the Package Supplier of the package. For example, the SPDX document identifies the package as glibc and the Package Supplier as Red Hat , but the Free Software Foundation is the Package Originator. Use NOASSERTION if: the SPDX document creator has attempted to but cannot reach a reasonable objective determination; the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). The metadata for the package originator field is shown in Table 18. Table 18 \u2014 Metadata for the package originator field Attribute Value Required No Cardinality 0..1 Format Single line of text with one of the following: NOASSERTION Person: person name and optional (<email>) Organization: organization name and optional (<email>)","title":"7.6.1 Description"},{"location":"package-information/#762-intent","text":"Assist with understanding the point of origin of the code in the package. This field is vital for understanding who originally distributed a package and should help in addressing any ambiguity or concerns that might arise with the information in the SPDX document or the contents of the Package it documents.","title":"7.6.2 Intent"},{"location":"package-information/#763-examples","text":"EXAMPLE 1 Tag: PackageOriginator: PackageOriginator: Organization: ExampleCodeInspect (contact@example.com) EXAMPLE 2 RDF: Property spdx:originator in class spdx:Package <Package rdf:about=\"...\"> <originator>Organization: ExampleCodeInspect (contact@example.com)</originator> </Package>","title":"7.6.3 Examples"},{"location":"package-information/#77-package-download-location-field","text":"","title":"7.7 Package download location field "},{"location":"package-information/#771-description","text":"This section identifies the download Uniform Resource Locator (URL), or a specific location within a version control system (VCS) for the package at the time that the SPDX document was created. Use: NONE if there is no download location whatsoever. NOASSERTION if: the SPDX document creator has attempted to but cannot reach a reasonable objective determination; the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). The metadata for the package download location field is shown in Table 19. Table 19 \u2014 Metadata for the package download location field Attribute Value Required Yes Cardinality 1..1 Format Uniform resource locator | VCS location | NONE | NOASSERTION For version-controlled files, a VCS location is similar to a URL and has the following syntax: <vcs_tool>+<transport>://<host_name>[/<path_to_repository>][@<revision_tag_or_branch>][#<sub_path>] For git, <revision_tag_or_branch> is a <rev> as described by gitrevisions(1) . It is RECOMMENDED to use the unambiguous refs/heads/<branch> or refs/tags/<tag> , rather than only <branch> or <tag> , in order to prevent issues caused by shadowing. Formats that are local to the client ( ...@... and :[<n>:]<path> ) or involve regular expressions ( <rev>^{/<text>} and :/<text> ) SHOULD NOT be used. This VCS location compact notation (inspired and mostly adopted from pip as of 2015-02-20) supports referencing locations in version control systems such as Git , Mercurial , Subversion and Bazaar , and specifies the type of VCS tool using url prefixes: git+ , hg+ , bzr+ , svn+ and specific transport schemes such as SSH or HTTPS. Specifying sub-paths, branch names, a commit hash, a revision or a tag name is recommended, and supported using the @ delimiter for commits and the # delimiter for sub-paths. Using user names and password in the <host_name> is not supported and should be considered as an error. User access control to URLs or VCS repositories shall be handled outside of an SPDX document. In VCS location compact notations, the trailing slashes in <host_name> , <path_to_repository> are not significant. Leading and trailing slashes in <sub_path> are not significant.","title":"7.7.1 Description"},{"location":"package-information/#772-intent","text":"Where and how to download the exact package being referenced is critical verification and tracking data.","title":"7.7.2 Intent"},{"location":"package-information/#773-examples","text":"EXAMPLE 1 Tag: PackageDownloadLocation: If ambiguous: PackageDownloadLocation: NOASSERTION PackageDownloadLocation: NONE For a plain URL: PackageDownloadLocation: http://ftp.gnu.org/gnu/glibc/glibc-ports-2.15.tar.gz For Git : SPDX supported schemes are: git , git+git , git+https , git+http , and git+ssh . git and git+git are equivalent. Here are the supported forms: PackageDownloadLocation: git://git.myproject.org/MyProject PackageDownloadLocation: git+https://git.myproject.org/MyProject.git PackageDownloadLocation: git+http://git.myproject.org/MyProject PackageDownloadLocation: git+ssh://git.myproject.org/MyProject.git PackageDownloadLocation: git+git://git.myproject.org/MyProject PackageDownloadLocation: git+git@git.myproject.org:MyProject To specify a sub-path to a file or directory inside a repository use the # delimiter: PackageDownloadLocation: git://git.myproject.org/MyProject#src/somefile.c PackageDownloadLocation: git+https://git.myproject.org/MyProject#src/Class.java To specify branch names, a commit hash or a tag name, use the @ delimiter: PackageDownloadLocation: git://git.myproject.org/MyProject.git@master PackageDownloadLocation: git+https://git.myproject.org/MyProject.git@v1.0 PackageDownloadLocation: git://git.myproject.org/MyProject.git@da39a3ee5e6b4b0d3255bfef95601890afd80709 Sub-paths and branch names or commit hash can be combined too: PackageDownloadLocation: git+https://git.myproject.org/MyProject.git@master#/src/MyClass.cpp PackageDownloadLocation: git+https://git.myproject.org/MyProject@da39a3ee5e6b4b0d3255bfef95601890afd80709#lib/variable.rb For Mercurial : SPDX supported schemes are: hg+http , hg+https , hg+static-http , and hg+ssh . The supported forms are: PackageDownloadLocation: hg+http://hg.myproject.org/MyProject PackageDownloadLocation: hg+https://hg.myproject.org/MyProject PackageDownloadLocation: hg+ssh://hg.myproject.org/MyProject To specify a sub-path to a file or directory inside a repository use the # delimiter: PackageDownloadLocation: hg+https://hg.myproject.org/MyProject#src/somefile.c PackageDownloadLocation: hg+https://hg.myproject.org/MyProject#src/Class.java To pass branch names, a commit hash, a tag name or a local branch name use the @ delimiter: PackageDownloadLocation: hg+https://hg.myproject.org/MyProject@da39a3ee5e6b PackageDownloadLocation: hg+https://hg.myproject.org/MyProject@2019 PackageDownloadLocation: hg+https://hg.myproject.org/MyProject@v1.0 PackageDownloadLocation: hg+https://hg.myproject.org/MyProject@special_feature Sub-paths and branch names or commit hash can be combined too: PackageDownloadLocation: hg+https://hg.myproject.org/MyProject@master#/src/MyClass.cpp PackageDownloadLocation: hg+https://hg.myproject.org/MyProject@da39a3ee5e6b#lib/variable.rb For Subversion : SPDX supported schemes are: svn , svn+svn , svn+http , svn+https , svn+ssh . svn and svn+svn are equivalent. The supported forms are: PackageDownloadLocation: svn://svn.myproject.org/svn/MyProject PackageDownloadLocation: svn+svn://svn.myproject.org/svn/MyProject PackageDownloadLocation: svn+http://svn.myproject.org/svn/MyProject/trunk PackageDownloadLocation: svn+https://svn.myproject.org/svn/MyProject/trunk To specify a sub-path to a file or directory inside a repository use the # delimiter: PackageDownloadLocation: svn+https://svn.myproject.org/MyProject#src/somefile.c PackageDownloadLocation: svn+https://svn.myproject.org/MyProject#src/Class.java This support is less important for SVN since the URL path can also contain sub-paths; this two forms are equivalent: PackageDownloadLocation: svn+https://svn.myproject.org/MyProject/trunk#src/somefile.c PackageDownloadLocation: svn+https://svn.myproject.org/MyProject/trunk/src/somefile.c You can specify a revision using the @ delimiter: PackageDownloadLocation: svn+https://svn.myproject.org/svn/MyProject/trunk@2019 Sub-paths and revisions can be combined too: PackageDownloadLocation: svn+https://svn.myproject.org/MyProject@123#/src/MyClass.cpp PackageDownloadLocation: svn+https://svn.myproject.org/MyProject/trunk@1234#lib/variable/variable.rb For Bazaar : SPDX supported schemes are: bzr+http , bzr+https , bzr+ssh , bzr+sftp , bzr+ftp , and bzr+lp . The supported forms are: PackageDownloadLocation: bzr+https://bzr.myproject.org/MyProject/trunk PackageDownloadLocation: bzr+http://bzr.myproject.org/MyProject/trunk PackageDownloadLocation: bzr+sftp://myproject.org/MyProject/trunk PackageDownloadLocation: bzr+ssh://myproject.org/MyProject/trunk PackageDownloadLocation: bzr+ftp://myproject.org/MyProject/trunk PackageDownloadLocation: bzr+lp:MyProject To specify a sub-path to a file or directory inside a repository use the # delimiter: PackageDownloadLocation: bzr+https://bzr.myproject.org/MyProject/trunk#src/somefile.c PackageDownloadLocation: bzr+https://bzr.myproject.org/MyProject/trunk#src/Class.java You can specify a revision or tag using the @ delimiter: PackageDownloadLocation: bzr+https://bzr.myproject.org/MyProject/trunk@2019 PackageDownloadLocation: bzr+http://bzr.myproject.org/MyProject/trunk@v1.0 Sub-paths and revisions can be combined too: PackageDownloadLocation: bzr+https://bzr.myproject.org/MyProject/trunk@2019#src/somefile.c EXAMPLE 2 RDF: Property spdx:downloadLocation in class spdx:Package <Package rdf:about=\"...\"> <downloadLocation>http://ftp.gnu.org/gnu/glibc/glibc-ports-2.15.tar.gz</downloadLocation> </Package> <Package rdf:about=\"...\"> <downloadLocation> git+https://git.myproject.org/MyProject.git@v10.0#src/lib.c </downloadLocation> </Package> <Package rdf:about=\"...\"> <downloadLocation rdf:resource=\"spdx:noassertion\"/> </Package> <Package rdf:about=\"...\"> <downloadLocation rdf:resource=\"spdx:none\"/> </Package>","title":"7.7.3 Examples"},{"location":"package-information/#78-files-analyzed-field","text":"","title":"7.8 Files analyzed field "},{"location":"package-information/#781-description","text":"Indicates whether the file content of this package has been available for or subjected to analysis when creating the SPDX document. If false , indicates packages that represent metadata or URI references to a project, product, artifact, distribution or a component. If false , the package shall not contain any files. The metadata for the files analyzed field is shown in Table 20. Table 20 \u2014 Metadata for the files analyzed field Attribute Value Required No. If omitted, the default value of true is assumed. Cardinality 0..1 Format Boolean","title":"7.8.1 Description"},{"location":"package-information/#782-intent","text":"A package can refer to a project, product, artifact, distribution or a component that is external to the SPDX document. Some examples: A bundle of external products : Package A can be metadata about Packages and their dependencies. It may also be a loosely organized manifest of references to Packages involved in a product or project. Build or execution may transitively discover more Packages and dependencies. All of these referenced Packages can have their own SPDX documents. In this case, Package A may be defined with its File Analyzed attribute set to false . Package A includes External Document References to SPDX documents containing Packages referenced in all the available relationships. The Relationships section then relates the SPDX documents and contained SPDX elements with appropriate semantics per the dependencies in the scope of Package A. Package relation to external product : Package A can have a STATIC_LINK relationship to Package B, but the binary representation of Package B is furnished by the build process and thus not contained in the file list of Package A. In this case, Package B needs to be defined with its Files Analyzed attribute set to false and all the other attributes subject to the subsequently defined constraints. Then, the relationship between Package A and Package B can be documented as described in Clause 11 . File derived from external product : Package A contains multiple files derived from an outside project. Rather than use the artifactOf* attributes (F.9-4.11) to describe the relation of these files to their project, the outside project can be represented by another package, Package B, whose FilesAnalyzed ( 7.8 ) attribute is set to false . Each of the binary files can then have a relationship to package B (Clause 10). This allows the outside project to be represented by a single SPDX identifier (the identifier of Package B). It also allows the relationship(s) between the outside project and each of the files be represented in much more detail.","title":"7.8.2 Intent"},{"location":"package-information/#783-examples","text":"EXAMPLE 1 Tag: FilesAnalyzed FilesAnalyzed: false EXAMPLE 2 RDF: Property spdx:filesAnalyzed in class spdx:Package <Package rdf:about=\"...\"> ... <filesAnalyzed>false</filesAnalyzed> ... </Package>","title":"7.8.3 Examples"},{"location":"package-information/#79-package-verification-code-field","text":"","title":"7.9 Package verification code field "},{"location":"package-information/#791-description","text":"This field provides an independently reproducible mechanism identifying specific contents of a package based on the actual files (except the SPDX document itself, if it is included in the package) that make up each package and that correlates to the data in this SPDX document. This identifier enables a recipient to determine if any file in the original package (that the analysis was done on) has been changed and permits inclusion of an SPDX document as part of a package. The metadata for the package verification code field is shown in Table 21. Table 21 \u2014 Metadata for the package verification code field Attribute Value Required Yes Cardinality 0..1 if FilesAnalyzed ( 7.8 ) is true or omitted, 0..0 (must be omitted) if FilesAnalyzed is false . Algorithm (see the algorithm below) Format Single line of text with 160 bit binary represented as 40 lowercase hexadecimal digits Algorithm verificationcode = 0 filelist = templist = \"\" for all files in the package { if file is an \"excludes\" file, skip it /* exclude SPDX analysis file(s) */ append templist with \"SHA1(file)/n\" } sort templist in ascending order by SHA1 value filelist = templist with \"/n\"s removed. /* ordered sequence of SHA1 values with no separators */ verificationcode = SHA1(filelist) Where SHA1(file) applies a SHA1 algorithm on the contents of file and returns the result in lowercase hexadecimal digits. Required sort order: '0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f' (ASCII order)","title":"7.9.1 Description"},{"location":"package-information/#792-intent","text":"Provide a unique identifier based on the files inside each package, eliminating confusion over which version or modification of a specific package the SPDX document refers to. This field also permits embedding the SPDX document within the package without altering the identifier.","title":"7.9.2 Intent"},{"location":"package-information/#793-examples","text":"EXAMPLE 1 Tag: PackageVerificationCode: (and optionally (excludes: FileName) ) FileName is specified in 8.1 . PackageVerificationCode: d6a770ba38583ed4bb4525bd96e50461655d2758 (excludes: ./package.spdx) EXAMPLE 2 RDF: Properties spdx:packageVerificationCodeValue , spdx:packageVerificationCodeExcludedFile in class spdx:PackageVerificationCode in class spdx:Package <Package rdf:about=\"...\"> <packageVerificationCode> <PackageVerificationCode> <packageVerificationCodeValue> d6a770ba38583ed4bb4525bd96e50461655d2758 </packageVerificationCodeValue> <packageVerificationCodeExcludedFile> ./package.spdx </packageVerificationCodeExcludedFile> </PackageVerificationCode> </packageVerificationCode> </Package>","title":"7.9.3 Examples"},{"location":"package-information/#710-package-checksum-field","text":"","title":"7.10 Package checksum field "},{"location":"package-information/#7101-description","text":"Provide an independently reproducible mechanism that permits unique identification of a specific package that correlates to the data in this SPDX document. This identifier enables a recipient to determine if any file in the original package has been changed. If the SPDX document is to be included in a package, this value should not be calculated. The SHA1 algorithm shall be used to provide the checksum by default. The metadata for the package checksum field is shown in Table 22. Table 22 \u2014 Metadata for the package checksum field Attribute Value Required No Cardinality 0..* Algorithm Algorithms that can be used: SHA1 , SHA224 , SHA256 , SHA384 , SHA512 , SHA3-256 , SHA3-384 , SHA3-512 , BLAKE2b-256 , BLAKE2b-384 , BLAKE2b-512 , BLAKE3 , MD2 , MD4 , MD5 , MD6 , ADLER32 Format There are three components, an algorithm identifier (e.g. SHA1 ), a colon separator : , and a bit value represented as lowercase hexadecimal digits (appropriate as output to the algorithm).","title":"7.10.1 Description"},{"location":"package-information/#7102-intent","text":"Eliminate confusion over which version or modification of a specific package the SPDX document references by providing a unique identifier of the package.","title":"7.10.2 Intent"},{"location":"package-information/#7103-examples","text":"EXAMPLE 1 Tag: PackageChecksum: PackageChecksum: SHA1: 85ed0817af83a24ad8da68c2b5094de69833983c PackageChecksum: SHA256: 11b6d3ee554eedf79299905a98f9b9a04e498210b59f15094c916c91d150efcd PackageChecksum: MD5: 624c1abb3664f4b35547e7c73864ad24 EXAMPLE 2 RDF: Properties spdx:algorithm , spdx:checksumValue in class spdx:checksum in class spdx:Package <Package rdf:about=\"...\"> <checksum> <Checksum> <algorithm rdf:resource=\"spdx:checksumAlgorithm_sha1\"/> <checksumValue>85ed0817af83a24ad8da68c2b5094de69833983c </checksumValue> </Checksum> </checksum> <checksum> <Checksum> <algorithm rdf:resource=\"spdx:checksumAlgorithm_sha256\"/> <checksumValue> 11b6d3ee554eedf79299905a98f9b9a04e498210b59f15094c916c91d150efcd </checksumValue> </Checksum> </checksum> <checksum> <Checksum> <algorithm rdf:resource=\"spdx:checksumAlgorithm_md5\"/> <checksumValue>624c1abb3664f4b35547e7c73864ad24</checksumValue> </Checksum> </checksum> </Package>","title":"7.10.3 Examples"},{"location":"package-information/#711-package-home-page-field","text":"","title":"7.11 Package home page field "},{"location":"package-information/#7111-description","text":"Provide a place for the SPDX document creator to record a web site that serves as the package's home page. This link can also be used to reference further information about the package referenced by the SPDX document creator. Use: NONE if there is no package home page whatsoever. NOASSERTION if: the SPDX document creator has attempted to but cannot reach a reasonable objective determination; the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). The metadata for the package home page field is shown in Table 23. Table 23 \u2014 Metadata for the package home page field Attribute Value Required No Cardinality 0..1 Format Uniform resource locator | NONE | NOASSERTION","title":"7.11.1 Description"},{"location":"package-information/#7112-intent","text":"Save the recipient of the SPDX document who is looking for more info from having to search for and verify a match between the package and the associated project homepage.","title":"7.11.2 Intent"},{"location":"package-information/#7113-examples","text":"EXAMPLE 1 Tag: PackageHomePage: PackageHomePage: http://ftp.gnu.org/gnu/glibc EXAMPLE 2 RDF: Property doap:homepage in class spdx:Package <Package rdf:about=\"...\"> <doap:homepage >http://ftp.gnu.org/gnu/glibc/</doap:homepage> </Package> This specification uses the prefix doap: to refer to the DOAP namespace: http://usefulinc.com/ns/doap#","title":"7.11.3 Examples"},{"location":"package-information/#712-source-information-field","text":"","title":"7.12 Source information field "},{"location":"package-information/#7121-description","text":"Provide a place for the SPDX document creator to record any relevant background information or additional comments about the origin of the package. For example, this field might include comments indicating whether the package was pulled from a source code management system or has been repackaged. The metadata for the source information field is shown in Table 24. Table 24 \u2014 Metadata for the source information field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines. In tag:value format this is delimited by <text>...</text> .","title":"7.12.1 Description"},{"location":"package-information/#7122-intent","text":"The SPDX document creator can provide additional information to describe any anomalies or discoveries in the determination of the origin of the package.","title":"7.12.2 Intent"},{"location":"package-information/#7123-examples","text":"EXAMPLE 1 Tag: PackageSourceInfo: PackageSourceInfo: <text>uses glibc-2_11-branch from git://sourceware.org/git/glibc.git.</text> EXAMPLE 2 RDF: Property spdx:sourceInfo in class spdx:Package <Package rdf:about=\"...\"> ... <sourceInfo>uses glibc-2_11-branch from git://sourceware.org/git/glibc.git.</sourceInfo> ... </Package>","title":"7.12.3 Examples"},{"location":"package-information/#713-concluded-license-field","text":"","title":"7.13 Concluded license field "},{"location":"package-information/#7131-description","text":"Contain the license the SPDX document creator has concluded as governing the package or alternative values, if the governing license cannot be determined. The options to populate this field are limited to: A valid SPDX License Expression as defined in Annex D ; NONE , if the SPDX document creator concludes there is no license available for this package; or NOASSERTION if: the SPDX document creator has attempted to but cannot reach a reasonable objective determination; the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If the Concluded License is not the same as the Declared License ( 7.15 ), a written explanation should be provided in the Comments on License field ( 7.16 ). With respect to NOASSERTION , a written explanation in the Comments on License field ( 7.16 ) is preferred. If the Concluded License field is not present in a package, it implies an equivalent meaning to NOASSERTION . The metadata for the concluded license field is shown in Table 25. Table 25 \u2014 Metadata for the concluded license field Attribute Value Required No Cardinality 0..1 Format <SPDX License Expression> | NONE | NOASSERTION where: <SPDX License Expression> is a valid SPDX License Expression as defined in Annex D .","title":"7.13.1 Description"},{"location":"package-information/#7132-intent","text":"Here, the intent is for the SPDX document creator to analyze the license information in package, and other objective information, e.g., COPYING file, together with the results from any scanning tools, to arrive at a reasonably objective conclusion as to what license governs the package.","title":"7.13.2 Intent"},{"location":"package-information/#7133-examples","text":"EXAMPLE 1 Tag: PackageLicenseConcluded: PackageLicenseConcluded: LGPL-2.0-only PackageLicenseConcluded: (LGPL-2.0-only OR LicenseRef-3) EXAMPLE 2 RDF: Property spdx:licenseConcluded in class spdx:Package <Package rdf:about=\"...\"> ... <licenseConcluded rdf:resource=\"http://spdx.org/licenses/LGPL-2.0-only\"/> ... </Package> <Package rdf:about=\"...\"> ... <licenseConcluded> <DisjunctiveLicenseSet> <member rdf:resource=\"http://spdx.org/licenses/LGPL-2.0-only\" /> <member rdf:resource=\"LicenseRef-3\" /> </DisjunctiveLicenseSet> </licenseConcluded> ... </Package>","title":"7.13.3 Examples"},{"location":"package-information/#714-all-licenses-information-from-files-field","text":"","title":"7.14 All licenses information from files field "},{"location":"package-information/#7141-description","text":"This field is to contain a list of all licenses found in the package. The relationship between licenses (i.e., conjunctive, disjunctive) is not specified in this field \u2013 it is simply a listing of all licenses found. The options to populate this field are limited to: A valid SPDX License Expression as defined in Annex D ; NONE , if no license information is detected in any of the files; or NOASSERTION , if: the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If the All Licenses Information from Files field is not present for a package and FilesAnalyzed field ( 7.8 ) for that same pacakge is true or omitted, it implies an equivalent meaning to NOASSERTION . The metadata for all license information from files field is shown in Table 26. Table 26 \u2014 Metadata for the all licenses information from files field Attribute Value Required No Cardinality 0..* (optional) if FilesAnalyzed ( 7.8 ) is true or omitted, 0..0 (must be omitted) if FilesAnalyzed is false . Format <SPDX License Expression> | NONE | NOASSERTION where: <SPDX License Expression> is a valid SPDX License Expression as defined in Annex D .","title":"7.14.1 Description"},{"location":"package-information/#7142-intent","text":"Here, the intention is to capture all license information detected in the actual files.","title":"7.14.2 Intent"},{"location":"package-information/#7143-examples","text":"EXAMPLE 1 Tag: PackageLicenseInfoFromFiles: PackageLicenseInfoFromFiles: GPL-2.0-only PackageLicenseInfoFromFiles: LicenseRef-1 PackageLicenseInfoFromFiles: LicenseRef-2 EXAMPLE 2 RDF: Property spdx:licenseInfoFromFiles in class spdx:Package <Package rdf:about=\"...\"> ... <licenseInfoFromFiles rdf:resource =\"https://spdx.org/licenses/GPL-2.0-only\" /> <licenseInfoFromFiles rdf:resource=\"#LicenseRef-1\" /> <licenseInfoFromFiles rdf:resource=\"#LicenseRef-2\" /> ... </Package>","title":"7.14.3 Examples"},{"location":"package-information/#715-declared-license-field","text":"","title":"7.15 Declared license field "},{"location":"package-information/#7151-description","text":"List the licenses that have been declared by the authors of the package. Any license information that does not originate from the package authors, e.g. license information from a third-party repository, should not be included in this field. The options to populate this field are limited to: A valid SPDX License Expression as defined in Annex D ; NONE , if the package contains no license information whatsoever; or NOASSERTION if: the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If the Declared License field is not present for a package, it implies an equivalent meaning to NOASSERTION . The metadata for the declared license field is shown in Table 27. Table 27 \u2014 Metadata for the declared license field Attribute Value Required No Cardinality 0..1 Format <SPDX License Expression> | NONE | NOASSERTION where: <SPDX License Expression> is a valid SPDX License Expression as defined in Annex D .","title":"7.15.1 Description"},{"location":"package-information/#7152-intent","text":"This is simply the license identified in text in one or more files (for example COPYING file) in the source code package. This field is not intended to capture license information obtained from an external source, such as the package website. Such information can be included in Concluded License ( 7.13 ). This field may have multiple Declared Licenses, if multiple licenses are declared at the package level.","title":"7.15.2 Intent"},{"location":"package-information/#7153-examples","text":"EXAMPLE 1 Tag: PackageLicenseDeclared: PackageLicenseDeclared: LGPL-2.0-only PackageLicenseDeclared: (LGPL-2.0-only AND LicenseRef-3) EXAMPLE 2 RDF: Property spdx:licenseDeclared in class spdx:Package <Package rdf:about=\"...\"> ... <licenseDeclared rdf:resource=\"http://spdx.org/licenses/LGPL-2.0-only\"/> ... </Package> <Package rdf:about=\"...\"> ... <licenseDeclared> <ConjunctiveLicenseSet> <member rdf:resource=\"http://spdx.org/licenses/LGPL-2.0-only\"/> <member rdf:resource=\"#LicenseRef-3\" /> </ConjunctiveLicenseSet> </licenseDeclared> ... </Package>","title":"7.15.3 Examples"},{"location":"package-information/#716-comments-on-license-field","text":"","title":"7.16 Comments on license field "},{"location":"package-information/#7161-description","text":"This field provides a place for the SPDX document creator to record any relevant background information or analysis that went in to arriving at the Concluded License for a package. If the Concluded License does not match the Declared License or License Information from Files, this should be explained by the SPDX document creator. It is also preferable to include an explanation here when the Concluded License is NOASSERTION . The metadata for the comments on license field is shown in Table 28. Table 28 \u2014 Metadata for the comments on license field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines. In tag:value format this is delimited by <text>...</text> .","title":"7.16.1 Description"},{"location":"package-information/#7162-intent","text":"Here, the intent is to provide the recipient of the SPDX document with a detailed explanation of how the Concluded License was determined if it does not match the License Information from the files or the source code package, is marked NOASSERTION , or other helpful information relevant to determining the license of the package.","title":"7.16.2 Intent"},{"location":"package-information/#7163-examples","text":"EXAMPLE 1 Tag: PackageLicenseComments: PackageLicenseComments: <text>The license for this project changed with the release of version 1.4. The version of the project included here post-dates the license change.</text> EXAMPLE 2 RDF: Property spdx:licenseComments in class spdx:Package <Package rdf:about=\"...\"> ... <licenseComments> This package has been shipped in source and binary form. The binaries were created with gcc 4.5.1 and expect to link to compatible system run time libraries. </licenseComments> ... </Package>","title":"7.16.3 Examples"},{"location":"package-information/#717-copyright-text-field","text":"","title":"7.17 Copyright text field "},{"location":"package-information/#7171-description","text":"Identify the copyright holders of the package, as well as any dates present. This will be a free form text field extracted from package information files. The options to populate this field are limited to: Any text related to a copyright notice, even if not complete; NONE if the package contains no copyright information whatsoever; or NOASSERTION , if the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If the Copyright Text field is not present for a package, it implies an equivalent meaning to NOASSERTION . The metadata for the copyright text field is shown in Table 29. Table 29 \u2014 Metadata for the copyright text field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines | NONE | NOASSERTION","title":"7.17.1 Description"},{"location":"package-information/#7172-intent","text":"Record any copyright notices for the package.","title":"7.17.2 Intent"},{"location":"package-information/#7173-examples","text":"EXAMPLE 1 Tag: PackageCopyrightText: In tag:value format multiple lines are delimited by <text>...</text> . PackageCopyrightText: <text>Copyright 2008-2010 John Smith</text> EXAMPLE 2 RDF: Property spdx:copyrightText in class spdx:Package <Package rdf:about=\"...\"> ... <copyrightText>Copyright 2008-2010 John Smith</copyrightText> ... </Package>","title":"7.17.3 Examples"},{"location":"package-information/#718-package-summary-description-field","text":"","title":"7.18 Package summary description field "},{"location":"package-information/#7181-description","text":"This field is a short description of the package. The metadata for the package summary description field is shown in Table 30. Table 30 \u2014 Metadata for the package summary description field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines.","title":"7.18.1 Description"},{"location":"package-information/#7182-intent","text":"Here, the intent is to allow the SPDX document creator to provide concise information about the function or use of the package without having to parse the source code of the actual package.","title":"7.18.2 Intent"},{"location":"package-information/#7183-examples","text":"EXAMPLE 1 Tag: PackageSummary: In tag:value format multiple lines are delimited by <text>...</text> . PackageSummary: <text>GNU C library.</text> EXAMPLE 2 RDF: Property spdx:summary in class spdx:Package <Package rdf:about=\"...\"> ... <summary>GNU C library.</summary> ... </Package>","title":"7.18.3 Examples"},{"location":"package-information/#719-package-detailed-description-field","text":"","title":"7.19 Package detailed description field "},{"location":"package-information/#7191-description","text":"This field is a more detailed description of the package. It may also be extracted from the packages itself. The metadata for the package detailed description field is shown in Table 31. Table 31 \u2014 Metadata for the package detailed description field Attribute Value Required No Cardinality 0..1 Format Free form text than can span multiple lines.","title":"7.19.1 Description"},{"location":"package-information/#7192-intent","text":"Here, the intent is to provide recipients of the SPDX document with a detailed technical explanation of the functionality, anticipated use, and anticipated implementation of the package. This field may also include a description of improvements over prior versions of the package.","title":"7.19.2 Intent"},{"location":"package-information/#7193-examples","text":"EXAMPLE 1 Tag: PackageDescription: In tag:value format multiple lines are delimited by <text>...</text> . PackageDescription: <text>The GNU C Library defines functions that are specified by the ISO C standard, as well as additional features specific to POSIX and other derivatives of the Unix operating system, and extensions specific to GNU systems.</text> EXAMPLE 2 RDF: Property spdx:description in class spdx:Package <Package rdf:about=\"...\"> ... <description> The GNU C Library defines functions that are specified by the ISO C standard, as well as additional features specific to POSIX and other derivatives of the Unix operating system, and extensions specific to GNU systems. </description> ... </Package>","title":"7.19.3 Examples"},{"location":"package-information/#720-package-comment-field","text":"","title":"7.20 Package comment field "},{"location":"package-information/#7201-description","text":"This field provides a place for the SPDX document creator to record any general comments about the package being described. The metadata for the package comment field is shown in Table 32. Table 32 \u2014 Metadata for the package comment field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines.","title":"7.20.1 Description"},{"location":"package-information/#7202-intent","text":"Here, the intent is to provide the recipient of the SPDX document with more information determined after careful analysis of a package.","title":"7.20.2 Intent"},{"location":"package-information/#7203-examples","text":"EXAMPLE 1 Tag: PackageComment: In tag:value format multiple lines are delimited by <text>...</text> . PackageComment: <text>The package includes several sub-packages; see Relationship information.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:Package <Package rdf:about=\"...\"> ... <rdfs:comment> The package includes several sub-packages; see Relationship information. </rdfs:comment> ... </Package>","title":"7.20.3 Examples"},{"location":"package-information/#721-external-reference-field","text":"","title":"7.21 External reference field "},{"location":"package-information/#7211-description","text":"An External Reference allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package. The metadata for the external reference field is shown in Table 33. Table 33 \u2014 Metadata for the external reference field Attribute Value Required No Cardinality 0..* Format <category> <type> <locator> where: <category> is SECURITY | PACKAGE-MANAGER | PERSISTENT-ID | OTHER <type> is one of the types listed in Annex F . <locator> is the unique string with no spaces necessary to access the package-specific information, metadata, or content within the target location. The format of the locator is subject to constraints defined by the <type> .","title":"7.21.1 Description"},{"location":"package-information/#7212-intent","text":"To indicate an outside source of information, metadata enumerations, asset identifiers, or content relevant to the Package, such as a structured naming scheme identifying Packages with known security vulnerabilities.","title":"7.21.2 Intent"},{"location":"package-information/#7213-examples","text":"EXAMPLE 1 Tag: ExternalRef: ExternalRef: SECURITY cpe23Type cpe:2.3:a:pivotal_software:spring_framework:4.1.0:*:*:*:*:*:*:* ExternalRef: PERSISTENT-ID swh swh:1:cnt:94a9ed024d3859793618152ea559a168bbcbb5e2 ExternalRef: OTHER LocationRef-acmeforge acmecorp/acmenator/4.1.3-alpha EXAMPLE 2 RDF: Property externalRef in class spdx:Package of type spdx:ExternalRef For a listed location: <spdx:Package rdf:about=\"...\"> ... <spdx:externalRef> <spdx:ExternalRef> <spdx:referenceCategory rdf:resource =\"spdx:referenceCategory_packageManager\" /> <spdx:referenceType rdf:resource =\"http://spdx.org/rdf/refeferences/maven-central\" /> <spdx:referenceLocator>org.apache.commons:commons-lang:3.2.1 </spdx:referenceLocator> </spdx:ExternalRef> </spdx:externalRef> ... </spdx:package> For an unlisted location: <spdx:Package rdf:about=\"...\"> ... <spdx:externalRef> <spdx:ExternalRef> <spdx:referenceCategory rdf:resource=\"spdx:referenceCategory_other\" /> <spdx:referenceType rdf:resource=\"http://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89-41D3-9A0C-0305E82...LocationRef-acmeforge\" /> <spdx:referenceLocator>acmecorp/acmenator/4.1.3-alpha</spdx:referenceLocator> </spdx:ExternalRef> </spdx:externalRef> ... </spdx:package> The referenceType value for a non-listed location consists of the SPDX document namespace (see 6.5 ) followed by a # and the category as defined in 7.21 .","title":"7.21.3 Examples"},{"location":"package-information/#722-external-reference-comment-field","text":"","title":"7.22 External reference comment field "},{"location":"package-information/#7221-description","text":"To provide human-readable information about the purpose and target of the reference. The metadata for the external reference comment field is shown in Table 34. Table 34 \u2014 Metadata for the external reference comment field Attribute Value Required No Cardinality 0..1 for each External Reference ( 7.21 ) Format Free form text that can span multiple lines. In tag:value format this is delimited by <text>...</text> and is expected to follow an External Reference ( 7.21 ) so that the association can be made.","title":"7.22.1 Description"},{"location":"package-information/#7222-intent","text":"To inform a human consumer why the reference exists, what kind of information, content or metadata can be extracted. The target's relationship to artifactOf values of files in the package might need to be explained here. If the reference is BINARY, its relationship to PackageDownloadLocation might need to be explained. If the reference is SOURCE, its relationship to PackageDownloadLocation and SourceInformation might need to be explained.","title":"7.22.2 Intent"},{"location":"package-information/#7223-examples","text":"EXAMPLE 1 Tag: ExternalRefComment: ExternalRefComment: <text>NIST National Vulnerability Database (NVD) describes security vulnerabilities (CVEs) which affect Vendor Product Version acmecorp:acmenator:6.6.6.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:ExternalRef <spdx:Package rdf:about=\"...\"> ... <spdx:externalRef> <spdx:ExternalRef> <spdx:referenceCategory rdf:resource =\"spdx:referenceCategory_packageManager\" /> <spdx:referenceType rdf:resource =\"http://spdx.org/rdf/refeferences/maven-central\" /> <spdx:referenceLocator>org.apache.commons:commons-lang:3.2.1 </spdx:referenceLocator> <rdfs:comment> NIST National Vulnerability Database (NVD) describes security vulnerabilities (CVEs) which affect Vendor Product Version acmecorp:acmenator:6.6.6 </rdfs:comment> </spdx:ExternalRef> </spdx:externalRef> ... </spdx:package>","title":"7.22.3 Examples"},{"location":"package-information/#723-package-attribution-text-field","text":"","title":"7.23 Package attribution text field "},{"location":"package-information/#7231-description","text":"This field provides a place for the SPDX document creator to record, at the package level, acknowledgements that might be required to be communicated in some contexts. This is not meant to include the package's actual complete license text (see PackageLicenseConcluded , PackageLicenseDeclared and PackageLicenseInfoFromFiles ), and might or might not include copyright notices (see also PackageCopyrightText ). The SPDX document creator might use this field to record other acknowledgements, such as particular clauses from license texts, which might be necessary or desirable to reproduce. The metadata for the package attribution text field is shown in Table 35. Table 35 \u2014 Metadata for the package attribution text field Attribute Value Required No Cardinality 0..* Format Free form text that can span multiple lines.","title":"7.23.1 Description"},{"location":"package-information/#7232-intent","text":"The intent is to provide the recipient of the SPDX document with acknowledgement content at a package level, to assist redistributors of the package with reproducing those acknowledgements. This field does not necessarily indicate where, or in which contexts, the acknowledgements need to be reproduced (such as end-user documentation, advertising materials, etc.) and the SPDX document creator might or might not explain elsewhere how they intend for this field to be used.","title":"7.23.2 Intent"},{"location":"package-information/#7233-examples","text":"EXAMPLE 1 Tag: PackageAttributionText: In tag:value format multiple lines are delimited by <text> .. </text> . PackageAttributionText: <text> All advertising materials mentioning features or use of this software must display the following acknowledgement: This product includes software developed by the AT&T. </text> EXAMPLE 2 RDF: Property spdx:attributionText in class spdx:Package <Package rdf:about=\"...\"> <attributionText> All advertising materials mentioning features or use of this software must display the following acknowledgement: This product includes software developed by the AT&T. </attributionText> </Package>","title":"7.23.3 Examples"},{"location":"package-information/#724-primary-package-purpose-field","text":"","title":"7.24 Primary Package Purpose field "},{"location":"package-information/#7241-description","text":"This field provides information about the primary purpose of the identified package. Package Purpose is intrinsic to how the package is being used rather than the content of the package. The options to populated this field are limited to: APPLICATION if the package is a software application; FRAMEWORK if the package is a software framework; LIBRARY if the package is a software library; CONTAINER if the package refers to a container image which can be used by a container runtime application; OPERATING-SYSTEM if the package refers to an operating system; DEVICE if the package refers to a chipset, processor, or electronic board; FIRMWARE if the package provides low level control over a device's hardware; SOURCE if the package is a collection of source files; ARCHIVE if the package refers to an archived collection of files (.tar, .zip, etc); FILE if the package is a single file which can be independently distributed (configuration file, statically linked binary, Kubernetes deployment, etc); INSTALL if the package is used to install software on disk; OTHER if the package doesn't fit into the above categories. The metadata for the Primary Package Purpose field is shown in Table 36. Table 36 \u2014 Metadata for the primary package purpose field Attribute Value Required No Cardinality 0..* Format APPLICATION | FRAMEWORK | LIBRARY | CONTAINER | OPERATING-SYSTEM | DEVICE | FIRMWARE | SOURCE | ARCHIVE | FILE | INSTALL | OTHER |","title":"7.24.1 Description"},{"location":"package-information/#7242-intent","text":"This field is a reasonable estimate of the most likely package usage from the producer and consumer perspective from which both parties can draw conclusions about the context in which the package exists.","title":"7.24.2 Intent"},{"location":"package-information/#7243-examples","text":"EXAMPLE 1 Tag: PrimaryPackagePurpose: PrimaryPackagePurpose: FRAMEWORK EXAMPLE 2 RDF: Property spdx:purpose in class spdx:Package <Package rdf:about=\"cluster-api\"> <primaryPackagePurpose rdf:resource=\"packagePurpose_container\" /> </Package>","title":"7.24.3 Examples"},{"location":"package-information/#725-release-date","text":"","title":"7.25 Release Date "},{"location":"package-information/#7251-description","text":"This field provides a place for recording the date the package was released. Table 37 \u2014 Metadata for the release date Attribute Value Required No Cardinality 0..1 Format YYYY-MM-DDThh:mm:ssZ where: YYYY is year MM is month with leading zero DD is day with leading zero T is delimiter for time hh is hours with leading zero in 24 hour time mm is minutes with leading zero ss is seconds with leading zero Z is universal time indicator","title":"7.25.1 Description"},{"location":"package-information/#7252-intent","text":"The release date is helpful for strict identification of the prerequisite assumptions of usage.","title":"7.25.2 Intent"},{"location":"package-information/#7253-examples","text":"EXAMPLE 1 Tag: ReleaseDate: ReleaseDate: 2010-01-29T18:30:22Z EXAMPLE 2 RDF: Property spdx:releaseDate in class spdx:Package <Package rdf:about=\"...\"> <releaseDate> 2010-01-29T18:30:22Z </releaseDate> </Package>","title":"7.25.3 Examples"},{"location":"package-information/#726-built-date","text":"","title":"7.26 Built Date "},{"location":"package-information/#7261-description","text":"This field provides a place for recording the actual date the package was built. Table 38 \u2014 Metadata for the built date Attribute Value Required No Cardinality 0..1 Format YYYY-MM-DDThh:mm:ssZ where: YYYY is year MM is month with leading zero DD is day with leading zero T is delimiter for time hh is hours with leading zero in 24 hour time mm is minutes with leading zero ss is seconds with leading zero Z is universal time indicator","title":"7.26.1 Description"},{"location":"package-information/#7262-intent","text":"The date when the package was built is helpful for strict identification of the prerequisite assumptions of usage. Ideally it should be recorded from build system tools directly or the creation date of the package itself.","title":"7.26.2 Intent"},{"location":"package-information/#7263-examples","text":"EXAMPLE 1 Tag: BuiltDate: BuiltDate: 2010-01-29T18:30:22Z EXAMPLE 2 RDF: Property spdx:builtDate in class spdx:Package <Package rdf:about=\"...\"> <builtDate> 2010-01-29T18:30:22Z </builtDate> </Package>","title":"7.26.3 Examples"},{"location":"package-information/#727-valid-until-date","text":"","title":"7.27 Valid Until Date "},{"location":"package-information/#7271-description","text":"This field provides a place for recording the end of the support period for a package from the supplier. Table 39 \u2014 Metadata for the valid until date Attribute Value Required No Cardinality 0..1 Format YYYY-MM-DDThh:mm:ssZ where: YYYY is year MM is month with leading zero DD is day with leading zero T is delimiter for time hh is hours with leading zero in 24 hour time mm is minutes with leading zero ss is seconds with leading zero Z is universal time indicator","title":"7.27.1 Description"},{"location":"package-information/#7272-intent","text":"The date when support for the package ends from the supplier. Usage is considered valid until this date.","title":"7.27.2 Intent"},{"location":"package-information/#7273-examples","text":"EXAMPLE 1 Tag: ValidUntilDate: ValidUntilDate: 2030-12-30T18:00:00Z EXAMPLE 2 RDF: Property spdx:validUntilDate in class spdx:Package <Package rdf:about=\"...\"> <validUntilDate> 2030-12-30T18:00:00Z </validUntilDate> </Package>","title":"7.27.3 Examples"},{"location":"relationships-between-SPDX-elements/","text":"11 Relationships between SPDX elements information section 11.1 Relationship field 11.1.1 Description This field provides information about the relationship between two SPDX elements. For example, you can represent a relationship between two different Files, between a Package and a File, between two Packages, or between one SPDXDocument and another SPDXDocument. In cases where there are \"known unknowns\", the use of the keyword NOASSERTION can be used on the right hand side of a relationship to indicate that the author is not asserting whether there are other SPDX elements (package/file/snippet) that are connected by relationships or not. That is, there could be some, but the author is not asserting one way or another. Similarly, the use of the keyword NONE can be used to indicate that an SPDX element (package/file/snippet) has no other elements connected by some relationship to it. The use of NOASSERTION or NONE is not mandatory for any relationship. If no relationship of a particular type is specified, then the document author is not presumed to be asserting whether or not there are relationships of that type. If some relationships of a particular type are specified, then the document author is not presumed to be asserting whether there are more possible relationships of that type. The relationships between two SPDX elements that are supported are shown in Table 68. Table 68 \u2014 Relationships between two SPDX elements that are supported Relationship Description Example DESCRIBES Is to be used when SPDXRef-DOCUMENT describes SPDXRef-A. An SPDX document WildFly.spdx describes package \u2018WildFly\u2019. Note this is a logical relationship to help organize related items within an SPDX document that is mandatory if more than one package or set of files (not in a package) is present. DESCRIBED_BY Is to be used when SPDXRef-A is described by SPDXREF-Document. The package \u2018WildFly\u2019 is described by SPDX document WildFly.spdx . CONTAINS Is to be used when SPDXRef-A contains SPDXRef-B. An ARCHIVE file bar.tgz contains a SOURCE file foo.c . CONTAINED_BY Is to be used when SPDXRef-A is contained by SPDXRef-B. A SOURCE file foo.c is contained by ARCHIVE file bar.tgz DEPENDS_ON Is to be used when SPDXRef-A depends on SPDXRef-B. Package A depends on the presence of package B in order to build and run DEPENDENCY_OF Is to be used when SPDXRef-A is dependency of SPDXRef-B. A is explicitly stated as a dependency of B in a machine-readable file. Use when a package manager does not define scopes. DEPENDENCY_MANIFEST_OF Is to be used when SPDXRef-A is a manifest file that lists a set of dependencies for SPDXRef-B. A file package.json is the dependency manifest of a package foo . Note that only one manifest should be used to define the same dependency graph. BUILD_DEPENDENCY_OF Is to be used when SPDXRef-A is a build dependency of SPDXRef-B. A is in the compile scope of B in a Maven project. DEV_DEPENDENCY_OF Is to be used when SPDXRef-A is a development dependency of SPDXRef-B. A is in the devDependencies scope of B in a Maven project. OPTIONAL_DEPENDENCY_OF Is to be used when SPDXRef-A is an optional dependency of SPDXRef-B. Use when building the code will proceed even if a dependency cannot be found, fails to install, or is only installed on a specific platform. For example, A is in the optionalDependencies scope of npm project B. PROVIDED_DEPENDENCY_OF Is to be used when SPDXRef-A is a to be provided dependency of SPDXRef-B. A is in the provided scope of B in a Maven project, indicating that the project expects it to be provided, for instance, by the container or JDK. TEST_DEPENDENCY_OF Is to be used when SPDXRef-A is a test dependency of SPDXRef-B. A is in the test scope of B in a Maven project. RUNTIME_DEPENDENCY_OF Is to be used when SPDXRef-A is a dependency required for the execution of SPDXRef-B. A is in the runtime scope of B in a Maven project. EXAMPLE_OF Is to be used when SPDXRef-A is an example of SPDXRef-B. The file or snippet that illustrates how to use an application or library. GENERATES Is to be used when SPDXRef-A generates SPDXRef-B. A SOURCE file makefile.mk generates a BINARY file a.out GENERATED_FROM Is to be used when SPDXRef-A was generated from SPDXRef-B. A BINARY file a.out has been generated from a SOURCE file makefile.mk . A BINARY file foolib.a is generated from a SOURCE file bar.c . ANCESTOR_OF Is to be used when SPDXRef-A is an ancestor (same lineage but pre-dates) SPDXRef-B. A SOURCE file makefile.mk is a version of the original ancestor SOURCE file \u2018makefile2.mk\u2019 DESCENDANT_OF Is to be used when SPDXRef-A is a descendant of (same lineage but postdates) SPDXRef-B. A SOURCE file makefile2.mk is a descendant of the original SOURCE file \u2018makefile.mk\u2019 VARIANT_OF Is to be used when SPDXRef-A is a variant of (same lineage but not clear which came first) SPDXRef-B. A SOURCE file makefile2.mk is a variant of SOURCE file makefile.mk if they differ by some edit, but there is no way to tell which came first (no reliable date information). DISTRIBUTION_ARTIFACT Is to be used when distributing SPDXRef-A requires that SPDXRef-B also be distributed. A BINARY file foo.o requires that the ARCHIVE file bar-sources.tgz be made available on distribution. PATCH_FOR Is to be used when SPDXRef-A is a patch file for (to be applied to) SPDXRef-B. A SOURCE file foo.diff is a patch file for SOURCE file foo.c . PATCH_APPLIED Is to be used when SPDXRef-A is a patch file that has been applied to SPDXRef-B. A SOURCE file foo.diff is a patch file that has been applied to SOURCE file \u2018foo-patched.c\u2019. COPY_OF Is to be used when SPDXRef-A is an exact copy of SPDXRef-B. A BINARY file alib.a is an exact copy of BINARY file a2lib.a . FILE_ADDED Is to be used when SPDXRef-A is a file that was added to SPDXRef-B. A SOURCE file foo.c has been added to package ARCHIVE bar.tgz . FILE_DELETED Is to be used when SPDXRef-A is a file that was deleted from SPDXRef-B. A SOURCE file foo.diff has been deleted from package ARCHIVE bar.tgz . FILE_MODIFIED Is to be used when SPDXRef-A is a file that was modified from SPDXRef-B. A SOURCE file foo.c has been modified from SOURCE file foo.orig.c . EXPANDED_FROM_ARCHIVE Is to be used when SPDXRef-A is expanded from the archive SPDXRef-B. A SOURCE file foo.c , has been expanded from the archive ARCHIVE file xyz.tgz . DYNAMIC_LINK Is to be used when SPDXRef-A dynamically links to SPDXRef-B. An APPLICATION file \u2018myapp\u2019 dynamically links to BINARY file zlib.so . STATIC_LINK Is to be used when SPDXRef-A statically links to SPDXRef-B. An APPLICATION file \u2018myapp\u2019 statically links to BINARY zlib.a . DATA_FILE_OF Is to be used when SPDXRef-A is a data file used in SPDXRef-B. An IMAGE file \u2018kitty.jpg\u2019 is a data file of an APPLICATION \u2018hellokitty\u2019. TEST_CASE_OF Is to be used when SPDXRef-A is a test case used in testing SPDXRef-B. A SOURCE file testMyCode.java is a unit test file used to test an APPLICATION MyPackage. BUILD_TOOL_OF Is to be used when SPDXRef-A is used to build SPDXRef-B. A SOURCE file makefile.mk is used to build an APPLICATION \u2018zlib\u2019. DEV_TOOL_OF Is to be used when SPDXRef-A is used as a development tool for SPDXRef-B. Any tool used for development such as a code debugger. TEST_OF Is to be used when SPDXRef-A is used for testing SPDXRef-B. Generic relationship for cases where it's clear that something is used for testing but unclear whether it's TEST_CASE_OF or TEST_TOOL_OF. TEST_TOOL_OF Is to be used when SPDXRef-A is used as a test tool for SPDXRef-B. Any tool used to test the code such as ESlint. DOCUMENTATION_OF Is to be used when SPDXRef-A provides documentation of SPDXRef-B. A DOCUMENTATION file readme.txt documents the APPLICATION \u2018zlib\u2019. OPTIONAL_COMPONENT_OF Is to be used when SPDXRef-A is an optional component of SPDXRef-B. A SOURCE file fool.c (which is in the contributors directory) may or may not be included in the build of APPLICATION \u2018atthebar\u2019. METAFILE_OF Is to be used when SPDXRef-A is a metafile of SPDXRef-B. A SOURCE file pom.xml is a metafile of the APPLICATION \u2018Apache Xerces\u2019. PACKAGE_OF Is to be used when SPDXRef-A is used as a package as part of SPDXRef-B. A Linux distribution contains an APPLICATION package gawk as part of the distribution MyLinuxDistro. AMENDS Is to be used when (current) SPDXRef-DOCUMENT amends the SPDX information in SPDXRef-B. (Current) SPDX document A version 2 contains a correction to a previous version of the SPDX document A version 1. Note the reserved identifier SPDXRef-DOCUMENT for the current document is required. PREREQUISITE_FOR Is to be used when SPDXRef-A is a prerequisite for SPDXRef-B. A library bar.dll is a prerequisite or dependency for APPLICATION foo.exe HAS_PREREQUISITE Is to be used when SPDXRef-A has as a prerequisite SPDXRef-B. An APPLICATION foo.exe has prerequisite or dependency on bar.dll REQUIREMENT_DESCRIPTION_FOR Is to be used when SPDXRef-A describes, illustrates, or specifies a requirement statement for SPDXRef-B. A PDF document that describes a list of disallowed licences to inherit in certain build-subtrees. SPECIFICATION_FOR Is to be used when SPDXRef-A describes, illustrates, or defines a design specification for SPDXRef-B. A UML diagram illustrating a directed requirement graph for a discernible set of software components in a software package. OTHER Is to be used for a relationship which has not been defined in the formal SPDX specification. A description of the relationship should be included in the Relationship comments field. The metadata for the relationship field is shown in Table 69. Table 69 \u2014 Metadata for the relationship field Attribute Value Required No Cardinality 0..* see DESCRIBES relationship for one mandatory case. Format [\"DocumentRef-\"[idstring]\":\"]SPDXID \\<relationship> [\"DocumentRef-\"[idstring]\":\"] SPDXID | NONE | NOASSERTION where \"DocumentRef-\" [idstring] \":\" is an optional reference to an external SPDX document as described in 6.6 where SPDXID is a string containing letters, numbers, . and/or - . as described in 6.3 , 7.2 , 8.2 . where <relationship> is one of the documented relationship types in Table 68. where NONE can be used to explicitly indicate there are NO other relationships. where NOASSERTION can be used to explicitly indicate it is not clear if there are relationships that may apply or not. 11.1.2 Intent Here, this field is a reasonable estimation of the relation between two identified elements (i.e. files or packages, or documents), from a developer perspective. 11.1.3 Examples EXAMPLE 1 Tag: Relationship: Relationship: SPDXRef-grep CONTAINS SPDXRef-make RelationshipComment: Package grep contains file make Relationship: SPDXRef-DOCUMENT AMENDS DocumentRef-SPDXA:SPDXRef-DOCUMENT RelationshipComment: This current document is an amendment of the SPDXA document. Relationship: SPDXRef-CarolCompression DEPENDS_ON NONE RelationshipComment: The package CarolCompression can be considered as a root with no dependencies. Relationship: SPDXRef-BobBrowser CONTAINS NOASSERTION RelationshipComment: The package BobBrowser may have other packages embedded in it, but the author has insufficient information to treat this as other than unknown at this point in time. EXAMPLE 2 RDF: Property spdx:relationship in any spdx:SpdxDocument , spdx:Package , spdx:File or spdx:Snippet <File rdf:about=\"#SPDXRef-45\"> <relationship> <Relationship> <relatedSpdxElement> <File rdf:about=\"http://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89-41D3-9A0C-0305E82...\"/> </relatedSpdxElement> <relationshipType>http://spdx.org/rdf/terms#relationshipType_contains </relationshipType> </Relationship> </relationship> ... </File> 11.2 Relationship comment field 11.2.1 Description This field provides a place for the SPDX document creator to record any general comments about the relationship. The metadata for the relationship comment field is shown in Table 70. Table 70 \u2014 Metadata for the relationship comment field Attribute Value Required No Cardinality 0..1 Format Free form text that may span multiple lines, refers only to the immediately preceding relationship. 11.2.2 Intent Here, the intent is to provide the recipient of the SPDX document with more information determined after careful analysis of the relationship between two elements in an SPDX document. 11.2.3 Examples EXAMPLE 1 Tag: RelationshipComment: In tag:value format multiple lines are delimited by <text> .. </text> . A RelationshipComment: shall be the line immediately after a \u201cRelationship:\u201d RelationshipComment: <text>The package foo.tgz is a pre-requisite for building executable bar.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:Relationship <Relationship rdf:about=\"...\"> <rdfs:comment> The package foo.tgz is a pre-requisite for building executable bar. </rdfs:comment> ... </Relationship>","title":"Clause 11: Relationship between SPDX Elements Information"},{"location":"relationships-between-SPDX-elements/#11-relationships-between-spdx-elements-information-section","text":"","title":"11 Relationships between SPDX elements information section"},{"location":"relationships-between-SPDX-elements/#111-relationship-field","text":"","title":"11.1 Relationship field "},{"location":"relationships-between-SPDX-elements/#1111-description","text":"This field provides information about the relationship between two SPDX elements. For example, you can represent a relationship between two different Files, between a Package and a File, between two Packages, or between one SPDXDocument and another SPDXDocument. In cases where there are \"known unknowns\", the use of the keyword NOASSERTION can be used on the right hand side of a relationship to indicate that the author is not asserting whether there are other SPDX elements (package/file/snippet) that are connected by relationships or not. That is, there could be some, but the author is not asserting one way or another. Similarly, the use of the keyword NONE can be used to indicate that an SPDX element (package/file/snippet) has no other elements connected by some relationship to it. The use of NOASSERTION or NONE is not mandatory for any relationship. If no relationship of a particular type is specified, then the document author is not presumed to be asserting whether or not there are relationships of that type. If some relationships of a particular type are specified, then the document author is not presumed to be asserting whether there are more possible relationships of that type. The relationships between two SPDX elements that are supported are shown in Table 68. Table 68 \u2014 Relationships between two SPDX elements that are supported Relationship Description Example DESCRIBES Is to be used when SPDXRef-DOCUMENT describes SPDXRef-A. An SPDX document WildFly.spdx describes package \u2018WildFly\u2019. Note this is a logical relationship to help organize related items within an SPDX document that is mandatory if more than one package or set of files (not in a package) is present. DESCRIBED_BY Is to be used when SPDXRef-A is described by SPDXREF-Document. The package \u2018WildFly\u2019 is described by SPDX document WildFly.spdx . CONTAINS Is to be used when SPDXRef-A contains SPDXRef-B. An ARCHIVE file bar.tgz contains a SOURCE file foo.c . CONTAINED_BY Is to be used when SPDXRef-A is contained by SPDXRef-B. A SOURCE file foo.c is contained by ARCHIVE file bar.tgz DEPENDS_ON Is to be used when SPDXRef-A depends on SPDXRef-B. Package A depends on the presence of package B in order to build and run DEPENDENCY_OF Is to be used when SPDXRef-A is dependency of SPDXRef-B. A is explicitly stated as a dependency of B in a machine-readable file. Use when a package manager does not define scopes. DEPENDENCY_MANIFEST_OF Is to be used when SPDXRef-A is a manifest file that lists a set of dependencies for SPDXRef-B. A file package.json is the dependency manifest of a package foo . Note that only one manifest should be used to define the same dependency graph. BUILD_DEPENDENCY_OF Is to be used when SPDXRef-A is a build dependency of SPDXRef-B. A is in the compile scope of B in a Maven project. DEV_DEPENDENCY_OF Is to be used when SPDXRef-A is a development dependency of SPDXRef-B. A is in the devDependencies scope of B in a Maven project. OPTIONAL_DEPENDENCY_OF Is to be used when SPDXRef-A is an optional dependency of SPDXRef-B. Use when building the code will proceed even if a dependency cannot be found, fails to install, or is only installed on a specific platform. For example, A is in the optionalDependencies scope of npm project B. PROVIDED_DEPENDENCY_OF Is to be used when SPDXRef-A is a to be provided dependency of SPDXRef-B. A is in the provided scope of B in a Maven project, indicating that the project expects it to be provided, for instance, by the container or JDK. TEST_DEPENDENCY_OF Is to be used when SPDXRef-A is a test dependency of SPDXRef-B. A is in the test scope of B in a Maven project. RUNTIME_DEPENDENCY_OF Is to be used when SPDXRef-A is a dependency required for the execution of SPDXRef-B. A is in the runtime scope of B in a Maven project. EXAMPLE_OF Is to be used when SPDXRef-A is an example of SPDXRef-B. The file or snippet that illustrates how to use an application or library. GENERATES Is to be used when SPDXRef-A generates SPDXRef-B. A SOURCE file makefile.mk generates a BINARY file a.out GENERATED_FROM Is to be used when SPDXRef-A was generated from SPDXRef-B. A BINARY file a.out has been generated from a SOURCE file makefile.mk . A BINARY file foolib.a is generated from a SOURCE file bar.c . ANCESTOR_OF Is to be used when SPDXRef-A is an ancestor (same lineage but pre-dates) SPDXRef-B. A SOURCE file makefile.mk is a version of the original ancestor SOURCE file \u2018makefile2.mk\u2019 DESCENDANT_OF Is to be used when SPDXRef-A is a descendant of (same lineage but postdates) SPDXRef-B. A SOURCE file makefile2.mk is a descendant of the original SOURCE file \u2018makefile.mk\u2019 VARIANT_OF Is to be used when SPDXRef-A is a variant of (same lineage but not clear which came first) SPDXRef-B. A SOURCE file makefile2.mk is a variant of SOURCE file makefile.mk if they differ by some edit, but there is no way to tell which came first (no reliable date information). DISTRIBUTION_ARTIFACT Is to be used when distributing SPDXRef-A requires that SPDXRef-B also be distributed. A BINARY file foo.o requires that the ARCHIVE file bar-sources.tgz be made available on distribution. PATCH_FOR Is to be used when SPDXRef-A is a patch file for (to be applied to) SPDXRef-B. A SOURCE file foo.diff is a patch file for SOURCE file foo.c . PATCH_APPLIED Is to be used when SPDXRef-A is a patch file that has been applied to SPDXRef-B. A SOURCE file foo.diff is a patch file that has been applied to SOURCE file \u2018foo-patched.c\u2019. COPY_OF Is to be used when SPDXRef-A is an exact copy of SPDXRef-B. A BINARY file alib.a is an exact copy of BINARY file a2lib.a . FILE_ADDED Is to be used when SPDXRef-A is a file that was added to SPDXRef-B. A SOURCE file foo.c has been added to package ARCHIVE bar.tgz . FILE_DELETED Is to be used when SPDXRef-A is a file that was deleted from SPDXRef-B. A SOURCE file foo.diff has been deleted from package ARCHIVE bar.tgz . FILE_MODIFIED Is to be used when SPDXRef-A is a file that was modified from SPDXRef-B. A SOURCE file foo.c has been modified from SOURCE file foo.orig.c . EXPANDED_FROM_ARCHIVE Is to be used when SPDXRef-A is expanded from the archive SPDXRef-B. A SOURCE file foo.c , has been expanded from the archive ARCHIVE file xyz.tgz . DYNAMIC_LINK Is to be used when SPDXRef-A dynamically links to SPDXRef-B. An APPLICATION file \u2018myapp\u2019 dynamically links to BINARY file zlib.so . STATIC_LINK Is to be used when SPDXRef-A statically links to SPDXRef-B. An APPLICATION file \u2018myapp\u2019 statically links to BINARY zlib.a . DATA_FILE_OF Is to be used when SPDXRef-A is a data file used in SPDXRef-B. An IMAGE file \u2018kitty.jpg\u2019 is a data file of an APPLICATION \u2018hellokitty\u2019. TEST_CASE_OF Is to be used when SPDXRef-A is a test case used in testing SPDXRef-B. A SOURCE file testMyCode.java is a unit test file used to test an APPLICATION MyPackage. BUILD_TOOL_OF Is to be used when SPDXRef-A is used to build SPDXRef-B. A SOURCE file makefile.mk is used to build an APPLICATION \u2018zlib\u2019. DEV_TOOL_OF Is to be used when SPDXRef-A is used as a development tool for SPDXRef-B. Any tool used for development such as a code debugger. TEST_OF Is to be used when SPDXRef-A is used for testing SPDXRef-B. Generic relationship for cases where it's clear that something is used for testing but unclear whether it's TEST_CASE_OF or TEST_TOOL_OF. TEST_TOOL_OF Is to be used when SPDXRef-A is used as a test tool for SPDXRef-B. Any tool used to test the code such as ESlint. DOCUMENTATION_OF Is to be used when SPDXRef-A provides documentation of SPDXRef-B. A DOCUMENTATION file readme.txt documents the APPLICATION \u2018zlib\u2019. OPTIONAL_COMPONENT_OF Is to be used when SPDXRef-A is an optional component of SPDXRef-B. A SOURCE file fool.c (which is in the contributors directory) may or may not be included in the build of APPLICATION \u2018atthebar\u2019. METAFILE_OF Is to be used when SPDXRef-A is a metafile of SPDXRef-B. A SOURCE file pom.xml is a metafile of the APPLICATION \u2018Apache Xerces\u2019. PACKAGE_OF Is to be used when SPDXRef-A is used as a package as part of SPDXRef-B. A Linux distribution contains an APPLICATION package gawk as part of the distribution MyLinuxDistro. AMENDS Is to be used when (current) SPDXRef-DOCUMENT amends the SPDX information in SPDXRef-B. (Current) SPDX document A version 2 contains a correction to a previous version of the SPDX document A version 1. Note the reserved identifier SPDXRef-DOCUMENT for the current document is required. PREREQUISITE_FOR Is to be used when SPDXRef-A is a prerequisite for SPDXRef-B. A library bar.dll is a prerequisite or dependency for APPLICATION foo.exe HAS_PREREQUISITE Is to be used when SPDXRef-A has as a prerequisite SPDXRef-B. An APPLICATION foo.exe has prerequisite or dependency on bar.dll REQUIREMENT_DESCRIPTION_FOR Is to be used when SPDXRef-A describes, illustrates, or specifies a requirement statement for SPDXRef-B. A PDF document that describes a list of disallowed licences to inherit in certain build-subtrees. SPECIFICATION_FOR Is to be used when SPDXRef-A describes, illustrates, or defines a design specification for SPDXRef-B. A UML diagram illustrating a directed requirement graph for a discernible set of software components in a software package. OTHER Is to be used for a relationship which has not been defined in the formal SPDX specification. A description of the relationship should be included in the Relationship comments field. The metadata for the relationship field is shown in Table 69. Table 69 \u2014 Metadata for the relationship field Attribute Value Required No Cardinality 0..* see DESCRIBES relationship for one mandatory case. Format [\"DocumentRef-\"[idstring]\":\"]SPDXID \\<relationship> [\"DocumentRef-\"[idstring]\":\"] SPDXID | NONE | NOASSERTION where \"DocumentRef-\" [idstring] \":\" is an optional reference to an external SPDX document as described in 6.6 where SPDXID is a string containing letters, numbers, . and/or - . as described in 6.3 , 7.2 , 8.2 . where <relationship> is one of the documented relationship types in Table 68. where NONE can be used to explicitly indicate there are NO other relationships. where NOASSERTION can be used to explicitly indicate it is not clear if there are relationships that may apply or not.","title":"11.1.1 Description"},{"location":"relationships-between-SPDX-elements/#1112-intent","text":"Here, this field is a reasonable estimation of the relation between two identified elements (i.e. files or packages, or documents), from a developer perspective.","title":"11.1.2 Intent"},{"location":"relationships-between-SPDX-elements/#1113-examples","text":"EXAMPLE 1 Tag: Relationship: Relationship: SPDXRef-grep CONTAINS SPDXRef-make RelationshipComment: Package grep contains file make Relationship: SPDXRef-DOCUMENT AMENDS DocumentRef-SPDXA:SPDXRef-DOCUMENT RelationshipComment: This current document is an amendment of the SPDXA document. Relationship: SPDXRef-CarolCompression DEPENDS_ON NONE RelationshipComment: The package CarolCompression can be considered as a root with no dependencies. Relationship: SPDXRef-BobBrowser CONTAINS NOASSERTION RelationshipComment: The package BobBrowser may have other packages embedded in it, but the author has insufficient information to treat this as other than unknown at this point in time. EXAMPLE 2 RDF: Property spdx:relationship in any spdx:SpdxDocument , spdx:Package , spdx:File or spdx:Snippet <File rdf:about=\"#SPDXRef-45\"> <relationship> <Relationship> <relatedSpdxElement> <File rdf:about=\"http://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89-41D3-9A0C-0305E82...\"/> </relatedSpdxElement> <relationshipType>http://spdx.org/rdf/terms#relationshipType_contains </relationshipType> </Relationship> </relationship> ... </File>","title":"11.1.3 Examples"},{"location":"relationships-between-SPDX-elements/#112-relationship-comment-field","text":"","title":"11.2 Relationship comment field "},{"location":"relationships-between-SPDX-elements/#1121-description","text":"This field provides a place for the SPDX document creator to record any general comments about the relationship. The metadata for the relationship comment field is shown in Table 70. Table 70 \u2014 Metadata for the relationship comment field Attribute Value Required No Cardinality 0..1 Format Free form text that may span multiple lines, refers only to the immediately preceding relationship.","title":"11.2.1 Description"},{"location":"relationships-between-SPDX-elements/#1122-intent","text":"Here, the intent is to provide the recipient of the SPDX document with more information determined after careful analysis of the relationship between two elements in an SPDX document.","title":"11.2.2 Intent"},{"location":"relationships-between-SPDX-elements/#1123-examples","text":"EXAMPLE 1 Tag: RelationshipComment: In tag:value format multiple lines are delimited by <text> .. </text> . A RelationshipComment: shall be the line immediately after a \u201cRelationship:\u201d RelationshipComment: <text>The package foo.tgz is a pre-requisite for building executable bar.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:Relationship <Relationship rdf:about=\"...\"> <rdfs:comment> The package foo.tgz is a pre-requisite for building executable bar. </rdfs:comment> ... </Relationship>","title":"11.2.3 Examples"},{"location":"review-information-deprecated/","text":"13 Review information section (deprecated) 13.1 Reviewer field (deprecated) This field has been deprecated since SPDX 2.0. 13.1.1 Description This field identifies the person, organization or tool that has reviewed the SPDX document. This field is optional and thus there is no requirement for any reviewer to add a set of review information to the SPDX document. This can be considered as an equivalent to \u201csigned off\u201d or \u201creviewed by.\u201d Additional reviewers can be added after the original version of the SPDX document is created and be appended to the original SPDX document. The metadata for the reviewer field is shown in Table 76. Table 76 \u2014 Metadata for the reviewer field Attribute Value Required No Cardinality 0..1 Format Single line of text with the following keywords. \"Person: person name\" and optional \"(email)\" \"Organization: organization\" and optional \"(email)\" \"Tool: tool identifier - version\" 13.1.2 Intent Here, as time progresses certain reviewers will begin to gain credibility as reliable. This field intends to make such information transparent. It may also be important for participants in the software supply chain to validate whether upstream providers have reviewed the SPDX document. 13.1.3 Examples EXAMPLE 1 Tag: Reviewer: Reviewer: Person: Jane Doe () EXAMPLE 2 RDF: Property spdx:reviewer in class spdx:Review <Review> <reviewer> Person: Jane Doe () </reviewer> </Review> 13.2 Review date field (deprecated) This field has been deprecated since SPDX 2.0. 13.2.1 Description Identify when the review was done. This shall be specified according to the combined date and time in the UTC format, as specified in the ISO 8601 standard. The metadata for the review date field is shown in Table 77. Table 77 \u2014 Metadata for the review date field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one), if there is a Reviewer. Format YYYY-MM-DDThh:mm:ssZ where: YYYY is year MM is month with leading zero DD is day with leading zero T is delimiter for time hh is hours with leading zero in 24-hour time mm is minutes with leading zero ss is seconds with leading zero Z is universal time indicator 13.2.2 Intent Here, the ReviewDate can serve as a verification as to when the actual review was done. 13.2.3 Examples EXAMPLE 1 Tag: ReviewDate: ReviewDate: 2010-01-29T18:30:22Z EXAMPLE 2 RDF: Property spdx:reviewDate in class spdx:Review <Review> <reviewDate> 2010-01-29T18:30:22Z </reviewDate> </Review> 13.3 Review comment field (deprecated) This field is deprecated since SPDX 2.0. 13.3.1 Description This optional free form text field permits the reviewer to provide commentary on the analysis. The metadata for the review comment field is shown in Table 78. Table 78 \u2014 Metadata for the review comment field Attribute Value Required No Cardinality 0..1 Format Free form text that may span multiple lines. 13.3.2 Intent This allows the reviewer to provide independent assessment and note any points where there is disagreement with the analysis. 13.3.3 Examples EXAMPLE 1 Tag: ReviewComment: In tag:value format multiple lines are delimited by <text> .. </text> . ReviewComment: <text>All of the licenses seen in the file, are matching what was seen during manual inspection. There are some terms that can influence the concluded license, and some alternatives may be possible, but the concluded license is one of the options.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:Review <Review> <rdfs:comment>All of the licenses seen in the file, are matching what was seen during manual inspection. There are some terms that can influence the concluded license, and some alternatives may be possible, but the concluded license is one of the options.</rdfs:comment> </Review>","title":"Clause 13: Review Information (deprecated)"},{"location":"review-information-deprecated/#13-review-information-section-deprecated","text":"","title":"13 Review information section (deprecated)"},{"location":"review-information-deprecated/#131-reviewer-field-deprecated","text":"This field has been deprecated since SPDX 2.0.","title":"13.1 Reviewer field (deprecated) "},{"location":"review-information-deprecated/#1311-description","text":"This field identifies the person, organization or tool that has reviewed the SPDX document. This field is optional and thus there is no requirement for any reviewer to add a set of review information to the SPDX document. This can be considered as an equivalent to \u201csigned off\u201d or \u201creviewed by.\u201d Additional reviewers can be added after the original version of the SPDX document is created and be appended to the original SPDX document. The metadata for the reviewer field is shown in Table 76. Table 76 \u2014 Metadata for the reviewer field Attribute Value Required No Cardinality 0..1 Format Single line of text with the following keywords. \"Person: person name\" and optional \"(email)\" \"Organization: organization\" and optional \"(email)\" \"Tool: tool identifier - version\"","title":"13.1.1 Description"},{"location":"review-information-deprecated/#1312-intent","text":"Here, as time progresses certain reviewers will begin to gain credibility as reliable. This field intends to make such information transparent. It may also be important for participants in the software supply chain to validate whether upstream providers have reviewed the SPDX document.","title":"13.1.2 Intent"},{"location":"review-information-deprecated/#1313-examples","text":"EXAMPLE 1 Tag: Reviewer: Reviewer: Person: Jane Doe () EXAMPLE 2 RDF: Property spdx:reviewer in class spdx:Review <Review> <reviewer> Person: Jane Doe () </reviewer> </Review>","title":"13.1.3 Examples"},{"location":"review-information-deprecated/#132-review-date-field-deprecated","text":"This field has been deprecated since SPDX 2.0.","title":"13.2 Review date field (deprecated) "},{"location":"review-information-deprecated/#1321-description","text":"Identify when the review was done. This shall be specified according to the combined date and time in the UTC format, as specified in the ISO 8601 standard. The metadata for the review date field is shown in Table 77. Table 77 \u2014 Metadata for the review date field Attribute Value Required Conditional Cardinality 0..1 conditional (Mandatory, one), if there is a Reviewer. Format YYYY-MM-DDThh:mm:ssZ where: YYYY is year MM is month with leading zero DD is day with leading zero T is delimiter for time hh is hours with leading zero in 24-hour time mm is minutes with leading zero ss is seconds with leading zero Z is universal time indicator","title":"13.2.1 Description"},{"location":"review-information-deprecated/#1322-intent","text":"Here, the ReviewDate can serve as a verification as to when the actual review was done.","title":"13.2.2 Intent"},{"location":"review-information-deprecated/#1323-examples","text":"EXAMPLE 1 Tag: ReviewDate: ReviewDate: 2010-01-29T18:30:22Z EXAMPLE 2 RDF: Property spdx:reviewDate in class spdx:Review <Review> <reviewDate> 2010-01-29T18:30:22Z </reviewDate> </Review>","title":"13.2.3 Examples"},{"location":"review-information-deprecated/#133-review-comment-field-deprecated","text":"This field is deprecated since SPDX 2.0.","title":"13.3 Review comment field (deprecated) "},{"location":"review-information-deprecated/#1331-description","text":"This optional free form text field permits the reviewer to provide commentary on the analysis. The metadata for the review comment field is shown in Table 78. Table 78 \u2014 Metadata for the review comment field Attribute Value Required No Cardinality 0..1 Format Free form text that may span multiple lines.","title":"13.3.1 Description"},{"location":"review-information-deprecated/#1332-intent","text":"This allows the reviewer to provide independent assessment and note any points where there is disagreement with the analysis.","title":"13.3.2 Intent"},{"location":"review-information-deprecated/#1333-examples","text":"EXAMPLE 1 Tag: ReviewComment: In tag:value format multiple lines are delimited by <text> .. </text> . ReviewComment: <text>All of the licenses seen in the file, are matching what was seen during manual inspection. There are some terms that can influence the concluded license, and some alternatives may be possible, but the concluded license is one of the options.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:Review <Review> <rdfs:comment>All of the licenses seen in the file, are matching what was seen during manual inspection. There are some terms that can influence the concluded license, and some alternatives may be possible, but the concluded license is one of the options.</rdfs:comment> </Review>","title":"13.3.3 Examples"},{"location":"scope/","text":"1 Scope This Software Package Data Exchange\u00ae (SPDX\u00ae) specification defines a standard data format for communicating the component and metadata information associated with software packages. An SPDX document can be associated with a set of software packages, files or snippets and contains information about the software in the SPDX format described in this specification.","title":"Clause 1: Scope"},{"location":"scope/#1-scope","text":"This Software Package Data Exchange\u00ae (SPDX\u00ae) specification defines a standard data format for communicating the component and metadata information associated with software packages. An SPDX document can be associated with a set of software packages, files or snippets and contains information about the software in the SPDX format described in this specification.","title":"1 Scope"},{"location":"snippet-information/","text":"9 Snippet information section 9.1 Snippet SPDX identifier field 9.1.1 Description Uniquely identify any element in an SPDX document which may be referenced by other elements. These may be referenced internally and externally with the addition of the SPDX document identifier. The metadata for the snippet SPDX identifier field is shown in Table 52. Table 52 \u2014 Metadata for the snippet SPDX identifier field Attribute Value Required Yes Cardinality 1..1 Format SPDXRef-[idstring] where [idstring] is a unique string containing letters, numbers, . and/or - . 9.1.2 Intent There may be several instances of a snippet within an SPDX document. Each snippet is an element which needs to be able to be referred to uniquely so that relationships between it and other elements can be clearly articulated. 9.1.3 Examples EXAMPLE 1 Tag: SnippetSPDXID: SnippetSPDXID: SPDXRef-1 EXAMPLE 2 RDF: The URI for the element shall follow the form: [SpdxDocumentURI]#SPDXRef-[idstring] where [SpdxDocumentURI] is the URI for the SPDX document containing the element. Using xml:base: <rdf:RDF xml:base=\"http://acme.com/spdxdocs/acmeproj/v1.2/1BE2A4FF-5F1A-48D3-8483-28A9B0349A1B\" ... <Snippet rdf:about=\"#SPDXRef-1\"> ... </Snippet> Using document URI: <Snippet rdf:about=\"http://acme.com/spdxdocs/acmeproj/v1.2/1BE2A4FF-5F1A-48D3-8483-28A9B0349A1B#SPDXRef-1\"> ... </Snippet> 9.2 Snippet from file SPDX identifier field 9.2.1 Description Uniquely identify the file in an SPDX document which this snippet is associated with. The metadata for the snippet from file SPDX identifier field is shown in Table 53. Table 53 \u2014 Metadata for the snippet from file SPDX identifier field Attribute Value Required Yes Cardinality 1..1 Format [\"DocumentRef-\"[idstring]\":\"] SPDXID where DocumentRef-[idstring] : is an optional reference to an external SPDX document as described in 6.6 where SPDXID is a string containing letters, numbers, . and/or - . as described in ( 6.3 , 7.2 , 8.2 ). 9.2.2 Intent There may be several versions of the same file within an SPDX document. Each element needs to be able to be referred to uniquely so that relationships between elements can be clearly articulated. 9.2.3 Examples EXAMPLE 1 Tag: SnippetFromFileSPDXID: Snippet from a File in local SPDX Doc: SnippetFromFileSPDXID: SPDXRef-filecontainingsnippet Snippet from a File in an External SPDX Doc: SnippetFromFileSPDXID: DocumentRef-ExternalDoc1:SPDXRef-filecontainingsnippet EXAMPLE 2 RDF: Property spdx:snippetFromFile in class spdx:Snippet Snippet from a File in local SPDX Doc: <Snippet rdf:ID=\"SPDXRef-1\"> <snippetFromFile rdf:about=\"#SPDXRef-filecontainingsnippet\"> ... </Snippet> Snippet from a File in an External SPDX Doc: <Snippet rdf:ID=\"SPDXRef-1\"> <snippetFromFile rdf:about=\"http://foo.org/ExternalDocument1#SPDXRef-filecontainingsnippet\"> ... </Snippet> 9.3 Snippet byte range field 9.3.1 Description This field defines the byte range in the original host file (in 9.2 ) that the snippet information applies to. The metadata for the snippet byte range field is shown in Table 54. Table 54 \u2014 Metadata for the snippet byte range field Attribute Value Required Yes Cardinality 1..1 Format number1:number2 where: number1 is greater than or equal to 1 and less or equal to number2 , AND number2 is less than or equal to the total number of bytes in file. The byte at position number1 and position number2 are included in the range. 9.3.2 Intent A range of bytes is independent of various formatting concerns, and the most accurate way of referring to the differences. The choice was made to start the numbering of the byte range at 1 to be consistent with the W3C pointer method vocabulary (see http://www.w3.org/TR/Pointers-in-RDF10/ ). 9.3.3 Examples EXAMPLE 1 Tag: SnippetByteRange: SnippetByteRange: 310:420 EXAMPLE 2 RDF: Property spdx:Range in class spdx:Snippet . The RDF uses the W3C proposed pointer method vocabulary (see http://www.w3.org/TR/Pointers-in-RDF10/ Supported classes from the pointer method vocabulary are StartEndPointer and ByteOffsetPointer . Supported properties from the pointer method vocabulary include: startPointer endPointer reference offset <Snippet rdf:about=\"...\"> <range> <ptr:StartEndPointer> <ptr:startPointer> <ptr:ByteOffsetPointer> <ptr:reference rdf:resource=\"#SPDXRef-fileReference/> <ptr:offset>310</ptr:offset> </ptr:ByteOffsetPointer> </ptr:startPointer> <ptr:endPointer> <ptr:ByteOffsetPointer> <ptr:reference rdf:resource=\"#SPDXRef-fileReference/> <ptr:offset>420</ptr:offset> </ptr:ByteOffsetPointer> </ptr:endPointer> </ptr: StartEndPointer> </range> </Snippet> This specification uses the prefix ptr: to refer to the W3C Pointers namespace: xmlns:ptr=http://www.w3.org/2009/pointers# 9.4 Snippet line range field 9.4.1 Description This optional field defines the line range in the original host file (see 9.2 ) that the snippet information applies to. If there is a disagreement between the byte range and line range, the byte range values will take precedence. The metadata for the snippet line range field is shown in Table 55. Table 55 \u2014 Metadata for the snippet line range field Attribute Value Required No Cardinality 0..1 Format number1:number2 where: number1 is greater than or equal to 1 and less than or equal to number2 , AND number2 is less than or equal to the total number of lines in file. 9.4.2 Intent A range of lines is a convenient reference for those files where there is a known line delimiter. The choice was made to start the numbering of the lines at 1 to be consistent with the W3C pointer method vocabulary (see http://www.w3.org/TR/Pointers-in-RDF10/ ). 9.4.3 Examples EXAMPLE 1 Tag: SnippetLineRange: SnippetLineRange: 5:23 EXAMPLE 2 RDF: Properties spdx:Range in class spdx:Snippet . The RDF uses the W3C proposed pointer method vocabulary (see http://www.w3.org/TR/Pointers-in-RDF10/ ). Supported classes from the pointer method vocabulary are StartEndPointer and LineCharPointer . Supported properties from the pointer method vocabulary include: startPointer endPointer reference lineNumber <Snippet rdf:about=\"...\"> <range> <ptr:StartEndPointer> <ptr:startPointer> <ptr:LineCharPointer> <ptr:reference rdf:resource=\"#SPDXRef-fileReference\"/> <ptr:lineNumber>5</ptr:lineNumber> </ptr:LineCharPointer> </ptr:startPointer> <ptr:endPointer> <ptr:LineCharPointer> <ptr:reference rdf:resource=\"#SPDXRef-fileReference\"/> <ptr:lineNumber>23</ptr:lineNumber> </ptr:LineCharPointer> </ptr: StartEndPointer> </range> </Snippet> 9.5 Snippet concluded license field 9.5.1 Description This field contains the license the SPDX document creator has concluded as governing the snippet or alternative values if the governing license cannot be determined. The options to populate this field are limited to: A valid SPDX License Expression as defined in Annex D . NONE should be used if there is no licensing information from which to conclude a license for the snippet. NOASSERTION should be used if for the snippet: the SPDX document creator has attempted to, but cannot reach a reasonable objective determination of the Concluded License; the SPDX document creator is uncomfortable concluding a license, despite some license information being available; the SPDX document creator has made no attempt to determine a Concluded License; the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If the Concluded License is not the same as the License Information in Snippet, a written explanation should be provided in the Comments on License field (see 9.7 ). With respect to NOASSERTION , a written explanation in the Comments on License field (see 9.7 ) is preferred. If the Snippet Concluded License field is not present for a snippet, it implies an equivalent meaning to NOASSERTION . The metadata for the snippet concluded license field is shown in Table 56. Table 56 \u2014 Metadata for the snippet concluded license field Attribute Value Required No Cardinality 0..1 Format <SPDX License Expression> | NONE | NOASSERTION where: <SPDX License Expression> is a valid SPDX License Expression as defined in Annex D . 9.5.2 Intent Here, the intent is for the SPDX document creator to reconcile the license information known about the snippet, what license information is in the snippet itself and other objective information for a package, along with the results from any scanning tools, to arrive at a reasonably objective conclusion as to what license governs the snippet. 9.5.3 Examples EXAMPLE 1 Tag: SnippetLicenseConcluded: SnippetLicenseConcluded: GPL-2.0-only SnippetLicenseConcluded: (LGPL-2.0-only OR LicenseRef-2) EXAMPLE 2 RDF: Property spdx:licenseConcluded in class spdx:Snippet <Snippet rdf:about=\"...\"> ... <licenseConcluded>GPL-2.0-only</licenseConcluded> ... </Snippet> <Snippet rdf:about=\"...\"> <licenseConcluded> <DisjunctiveLicenseSet> <member rdf:resource =\"http://spdx.org/licenses/LGPL-2.0-only\"/> <member rdf:resource=\"#LicenseRef-2\"/> </DisjunctiveLicenseSet> </licenseConcluded> </Snippet> 9.6 License information in snippet field 9.6.1 Description This field contains the license information actually found in the snippet, if any. Any license information not actually in the snippet itself, e.g., header of the file the snippet belongs in, \u201cCOPYING.txt\u201d file in a top level directory, should not be reflected in this field. The options to populate this field are limited to: A valid SPDX License Expression as defined in Annex D . NONE , if the snippet contains no license information whatsoever; or NOASSERTION , if: the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If license information for more than one license is contained in the snippet or if the license information offers a choice of licenses, then each of the choices should be listed as a separate entry. If the License Information in Snippet field is not present for a snippet, it implies an equivalent meaning to NOASSERTION . The metadata for the license information in snippet field is shown in Table 57. Table 57 \u2014 Metadata for the license information in snippet field Attribute Value Required No Cardinality 0..* Format <SPDX License Expression> | NONE | NOASSERTION where: <SPDX License Expression> is a valid SPDX License Expression as defined in Annex D . 9.6.2 Intent Here, the intent is to provide the license information actually in the snippet, as compared to the Concluded License field. 9.6.3 Examples EXAMPLE 1 Tag: LicenseInfoInSnippet: LicenseInfoInSnippet: LGPL-2.0-only LicenseInfoInSnippet: LicenseRef-2 EXAMPLE 2 RDF: Property spdx:licenseInfoInSnippet in class spdx:Snippet <Snippet rdf:about=\"...\"> <licenseInfoInSnippet rdf:resource =\"http://spdx.org/licenses/GPL-2.0-only\" /> <licenseInfoInSnippet rdf:resource=\"#LicenseRef-2\" /> </Snippet> 9.7 Snippet comments on license field 9.7.1 Description This field provides a place for the SPDX document creator to record any relevant background references or analysis that went in to arriving at the Concluded License for a snippet. The metadata for the snippet comments on license field is shown in Table 58. Table 58 \u2014 Metadata for the snippet comments on license field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines 9.7.2 Intent Here, the intent is to provide the recipient of the SPDX document with a detailed explanation of how the Concluded License was determined for a Snippet if it does not match the License Information in Snippet, is marked NOASSERTION , or other helpful information relevant to determining the license of the snippet in a file. 9.7.3 Examples EXAMPLE 1 Tag: SnippetLicenseComments: In tag:value format multiple lines are delimited by <text> .. </text> . SnippetLicenseComments: <text>The concluded license was taken from package xyz, from which the snippet was copied into the current file. The concluded license information was found in the COPYING.txt file in package xyz.</text> EXAMPLE 2 RDF: Property spdx:licenseComments in class spdx:Snippet <Snippet rdf:about=\"...\"> ... <licenseComments> The concluded license was taken from package xyz, from which the snippet was copied into the current file. The concluded license information was found in the COPYING.txt file in package xyz. </licenseComments> ... </Snippet> 9.8 Snippet copyright text field 9.8.1 Description Identify the copyright holder of the snippet, as well as any dates present. This shall be a free form text field, ideally extracted from the actual snippet. The options to populate this field are limited to: any text relating to a copyright notice, even if not complete; NONE , if the snippet contains no copyright information whatsoever; or NOASSERTION , if the SPDX document creator has not examined the contents of the actual snippet or if the SPDX document creator has intentionally provided no information (no meaning should be implied from the absence of an assertion). If the Snippet Copyright Text field is not present for a snippet, it implies an equivalent meaning to NOASSERTION . The metadata for the snippet copyright text field is shown in Table 59. Table 59 \u2014 Metadata for the snippet copyright text field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines | NONE | NOASSERTION 9.8.2 Intent Record any copyright notice associated with the snippet. 9.8.3 Examples EXAMPLE 1 Tag: SnippetCopyrightText: In tag:value format multiple lines are delimited by <text> .. </text> . SnippetCopyrightText: <text> Copyright 2008-2010 John Smith </text> EXAMPLE 2 RDF: Property spdx:copyrightText in class spdx:Snippet <Snippet rdf:about=\"...\"> ... <copyrightText> Copyright 2008-2010 John Smith </copyrightText> ... </Snippet> 9.9 Snippet comment field 9.9.1 Description This field provides a place for the SPDX document creator to record any general comments about the snippet. The metadata for the snippet comment field is shown in Table 60. Table 60 \u2014 Metadata for the snippet comment field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines 9.9.2 Intent Here, the intent is to provide the recipient of the SPDX document with more information determined after careful analysis of a snippet. 9.9.3 Examples EXAMPLE 1 Tag: SnippetComment: In tag:value format multiple lines are delimited by <text> .. </text> . SnippetComment: <text>This snippet was identified as significant and highlighted in this Apache-2.0 file, when a commercial scanner identified it as being derived from file foo.c in package xyz which is licensed under GPL-2.0.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:Snippet <Snippet rdf:about=\"...\"> ... <rdfs:comment> This snippet was identified as significant and highlighted in this Apache-2.0 file, when a commercial scanner identified it as being derived from file foo.c in package xyz which is licensed under GPL-2.0. </rdfs:comment> ... </Snippet> 9.10 Snippet name field 9.10.1 Description Identify a specific snippet in a human convenient manner. The metadata for the snippet name field is shown in Table 61. Table 61 \u2014 Metadata for the snippet name field Attribute Value Required No Cardinality 0..1 Format Single line of text 9.10.2 Intent To aid in identifying a snippet under discussion that might be used in multiple locations, and for consistency with the ability to refer to any copyrightable SPDX Element by name. 9.10.3 Examples EXAMPLE 1 Tag: SnippetName: SnippetName: from Linux kernel EXAMPLE 2 RDF: Property spdx:name in class spdx:Snippet <Snippet rdf:about=\"...\"> <name>from Linux kernel</name> </Snippet> 9.11 Snippet attribution text field 9.11.1 Description This field provides a place for the SPDX document creator to record, at the snippet level, acknowledgements that may be required to be communicated in some contexts. This is not meant to include the snippet's actual complete license text (see SnippetLicenseConcluded and LicenseInfoInSnippet ), and might or might not include copyright notices (see also SnippetCopyrightText ). The SPDX document creator may use this field to record other acknowledgements, such as particular clauses from license texts, which might be necessary or desirable to reproduce. The metadata for the snippet attribution text field is shown in Table 62. Table 62 \u2014 Metadata for the snippet attribution text field Attribute Value Required No Cardinality 0..* Format Free form text that can span multiple lines. 9.11.2 Intent The intent is to provide the recipient of the SPDX document with acknowledgement content at a snippet level, to assist redistributors of the file with reproducing those acknowledgements. This field does not necessarily indicate where, or in which contexts, the acknowledgements need to be reproduced (such as end-user documentation, advertising materials, etc.) and the SPDX document creator might or might not explain elsewhere how they intend for this field to be used. 9.11.3 Examples EXAMPLE 1 Tag: SnippetAttributionText: In tag:value format multiple lines are delimited by <text> .. </text> . SnippetAttributionText: <text> All advertising materials mentioning features or use of this software must display the following acknowledgement: This product includes software developed by the AT&T. </text> EXAMPLE 2 RDF: Property spdx:attributionText in class spdx:Snippet <Snippet rdf:about=\"...\"> <attributionText> All advertising materials mentioning features or use of this software must display the following acknowledgement: This product includes software developed by the AT&T. </attributionText> </Snippet>","title":"Clause 9: Snippet Information"},{"location":"snippet-information/#9-snippet-information-section","text":"","title":"9 Snippet information section"},{"location":"snippet-information/#91-snippet-spdx-identifier-field","text":"","title":"9.1 Snippet SPDX identifier field "},{"location":"snippet-information/#911-description","text":"Uniquely identify any element in an SPDX document which may be referenced by other elements. These may be referenced internally and externally with the addition of the SPDX document identifier. The metadata for the snippet SPDX identifier field is shown in Table 52. Table 52 \u2014 Metadata for the snippet SPDX identifier field Attribute Value Required Yes Cardinality 1..1 Format SPDXRef-[idstring] where [idstring] is a unique string containing letters, numbers, . and/or - .","title":"9.1.1 Description"},{"location":"snippet-information/#912-intent","text":"There may be several instances of a snippet within an SPDX document. Each snippet is an element which needs to be able to be referred to uniquely so that relationships between it and other elements can be clearly articulated.","title":"9.1.2 Intent"},{"location":"snippet-information/#913-examples","text":"EXAMPLE 1 Tag: SnippetSPDXID: SnippetSPDXID: SPDXRef-1 EXAMPLE 2 RDF: The URI for the element shall follow the form: [SpdxDocumentURI]#SPDXRef-[idstring] where [SpdxDocumentURI] is the URI for the SPDX document containing the element. Using xml:base: <rdf:RDF xml:base=\"http://acme.com/spdxdocs/acmeproj/v1.2/1BE2A4FF-5F1A-48D3-8483-28A9B0349A1B\" ... <Snippet rdf:about=\"#SPDXRef-1\"> ... </Snippet> Using document URI: <Snippet rdf:about=\"http://acme.com/spdxdocs/acmeproj/v1.2/1BE2A4FF-5F1A-48D3-8483-28A9B0349A1B#SPDXRef-1\"> ... </Snippet>","title":"9.1.3 Examples"},{"location":"snippet-information/#92-snippet-from-file-spdx-identifier-field","text":"","title":"9.2 Snippet from file SPDX identifier field "},{"location":"snippet-information/#921-description","text":"Uniquely identify the file in an SPDX document which this snippet is associated with. The metadata for the snippet from file SPDX identifier field is shown in Table 53. Table 53 \u2014 Metadata for the snippet from file SPDX identifier field Attribute Value Required Yes Cardinality 1..1 Format [\"DocumentRef-\"[idstring]\":\"] SPDXID where DocumentRef-[idstring] : is an optional reference to an external SPDX document as described in 6.6 where SPDXID is a string containing letters, numbers, . and/or - . as described in ( 6.3 , 7.2 , 8.2 ).","title":"9.2.1 Description"},{"location":"snippet-information/#922-intent","text":"There may be several versions of the same file within an SPDX document. Each element needs to be able to be referred to uniquely so that relationships between elements can be clearly articulated.","title":"9.2.2 Intent"},{"location":"snippet-information/#923-examples","text":"EXAMPLE 1 Tag: SnippetFromFileSPDXID: Snippet from a File in local SPDX Doc: SnippetFromFileSPDXID: SPDXRef-filecontainingsnippet Snippet from a File in an External SPDX Doc: SnippetFromFileSPDXID: DocumentRef-ExternalDoc1:SPDXRef-filecontainingsnippet EXAMPLE 2 RDF: Property spdx:snippetFromFile in class spdx:Snippet Snippet from a File in local SPDX Doc: <Snippet rdf:ID=\"SPDXRef-1\"> <snippetFromFile rdf:about=\"#SPDXRef-filecontainingsnippet\"> ... </Snippet> Snippet from a File in an External SPDX Doc: <Snippet rdf:ID=\"SPDXRef-1\"> <snippetFromFile rdf:about=\"http://foo.org/ExternalDocument1#SPDXRef-filecontainingsnippet\"> ... </Snippet>","title":"9.2.3 Examples"},{"location":"snippet-information/#93-snippet-byte-range-field","text":"","title":"9.3 Snippet byte range field "},{"location":"snippet-information/#931-description","text":"This field defines the byte range in the original host file (in 9.2 ) that the snippet information applies to. The metadata for the snippet byte range field is shown in Table 54. Table 54 \u2014 Metadata for the snippet byte range field Attribute Value Required Yes Cardinality 1..1 Format number1:number2 where: number1 is greater than or equal to 1 and less or equal to number2 , AND number2 is less than or equal to the total number of bytes in file. The byte at position number1 and position number2 are included in the range.","title":"9.3.1 Description"},{"location":"snippet-information/#932-intent","text":"A range of bytes is independent of various formatting concerns, and the most accurate way of referring to the differences. The choice was made to start the numbering of the byte range at 1 to be consistent with the W3C pointer method vocabulary (see http://www.w3.org/TR/Pointers-in-RDF10/ ).","title":"9.3.2 Intent"},{"location":"snippet-information/#933-examples","text":"EXAMPLE 1 Tag: SnippetByteRange: SnippetByteRange: 310:420 EXAMPLE 2 RDF: Property spdx:Range in class spdx:Snippet . The RDF uses the W3C proposed pointer method vocabulary (see http://www.w3.org/TR/Pointers-in-RDF10/ Supported classes from the pointer method vocabulary are StartEndPointer and ByteOffsetPointer . Supported properties from the pointer method vocabulary include: startPointer endPointer reference offset <Snippet rdf:about=\"...\"> <range> <ptr:StartEndPointer> <ptr:startPointer> <ptr:ByteOffsetPointer> <ptr:reference rdf:resource=\"#SPDXRef-fileReference/> <ptr:offset>310</ptr:offset> </ptr:ByteOffsetPointer> </ptr:startPointer> <ptr:endPointer> <ptr:ByteOffsetPointer> <ptr:reference rdf:resource=\"#SPDXRef-fileReference/> <ptr:offset>420</ptr:offset> </ptr:ByteOffsetPointer> </ptr:endPointer> </ptr: StartEndPointer> </range> </Snippet> This specification uses the prefix ptr: to refer to the W3C Pointers namespace: xmlns:ptr=http://www.w3.org/2009/pointers#","title":"9.3.3 Examples"},{"location":"snippet-information/#94-snippet-line-range-field","text":"","title":"9.4 Snippet line range field "},{"location":"snippet-information/#941-description","text":"This optional field defines the line range in the original host file (see 9.2 ) that the snippet information applies to. If there is a disagreement between the byte range and line range, the byte range values will take precedence. The metadata for the snippet line range field is shown in Table 55. Table 55 \u2014 Metadata for the snippet line range field Attribute Value Required No Cardinality 0..1 Format number1:number2 where: number1 is greater than or equal to 1 and less than or equal to number2 , AND number2 is less than or equal to the total number of lines in file.","title":"9.4.1 Description"},{"location":"snippet-information/#942-intent","text":"A range of lines is a convenient reference for those files where there is a known line delimiter. The choice was made to start the numbering of the lines at 1 to be consistent with the W3C pointer method vocabulary (see http://www.w3.org/TR/Pointers-in-RDF10/ ).","title":"9.4.2 Intent"},{"location":"snippet-information/#943-examples","text":"EXAMPLE 1 Tag: SnippetLineRange: SnippetLineRange: 5:23 EXAMPLE 2 RDF: Properties spdx:Range in class spdx:Snippet . The RDF uses the W3C proposed pointer method vocabulary (see http://www.w3.org/TR/Pointers-in-RDF10/ ). Supported classes from the pointer method vocabulary are StartEndPointer and LineCharPointer . Supported properties from the pointer method vocabulary include: startPointer endPointer reference lineNumber <Snippet rdf:about=\"...\"> <range> <ptr:StartEndPointer> <ptr:startPointer> <ptr:LineCharPointer> <ptr:reference rdf:resource=\"#SPDXRef-fileReference\"/> <ptr:lineNumber>5</ptr:lineNumber> </ptr:LineCharPointer> </ptr:startPointer> <ptr:endPointer> <ptr:LineCharPointer> <ptr:reference rdf:resource=\"#SPDXRef-fileReference\"/> <ptr:lineNumber>23</ptr:lineNumber> </ptr:LineCharPointer> </ptr: StartEndPointer> </range> </Snippet>","title":"9.4.3 Examples"},{"location":"snippet-information/#95-snippet-concluded-license-field","text":"","title":"9.5 Snippet concluded license field "},{"location":"snippet-information/#951-description","text":"This field contains the license the SPDX document creator has concluded as governing the snippet or alternative values if the governing license cannot be determined. The options to populate this field are limited to: A valid SPDX License Expression as defined in Annex D . NONE should be used if there is no licensing information from which to conclude a license for the snippet. NOASSERTION should be used if for the snippet: the SPDX document creator has attempted to, but cannot reach a reasonable objective determination of the Concluded License; the SPDX document creator is uncomfortable concluding a license, despite some license information being available; the SPDX document creator has made no attempt to determine a Concluded License; the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If the Concluded License is not the same as the License Information in Snippet, a written explanation should be provided in the Comments on License field (see 9.7 ). With respect to NOASSERTION , a written explanation in the Comments on License field (see 9.7 ) is preferred. If the Snippet Concluded License field is not present for a snippet, it implies an equivalent meaning to NOASSERTION . The metadata for the snippet concluded license field is shown in Table 56. Table 56 \u2014 Metadata for the snippet concluded license field Attribute Value Required No Cardinality 0..1 Format <SPDX License Expression> | NONE | NOASSERTION where: <SPDX License Expression> is a valid SPDX License Expression as defined in Annex D .","title":"9.5.1 Description"},{"location":"snippet-information/#952-intent","text":"Here, the intent is for the SPDX document creator to reconcile the license information known about the snippet, what license information is in the snippet itself and other objective information for a package, along with the results from any scanning tools, to arrive at a reasonably objective conclusion as to what license governs the snippet.","title":"9.5.2 Intent"},{"location":"snippet-information/#953-examples","text":"EXAMPLE 1 Tag: SnippetLicenseConcluded: SnippetLicenseConcluded: GPL-2.0-only SnippetLicenseConcluded: (LGPL-2.0-only OR LicenseRef-2) EXAMPLE 2 RDF: Property spdx:licenseConcluded in class spdx:Snippet <Snippet rdf:about=\"...\"> ... <licenseConcluded>GPL-2.0-only</licenseConcluded> ... </Snippet> <Snippet rdf:about=\"...\"> <licenseConcluded> <DisjunctiveLicenseSet> <member rdf:resource =\"http://spdx.org/licenses/LGPL-2.0-only\"/> <member rdf:resource=\"#LicenseRef-2\"/> </DisjunctiveLicenseSet> </licenseConcluded> </Snippet>","title":"9.5.3 Examples"},{"location":"snippet-information/#96-license-information-in-snippet-field","text":"","title":"9.6 License information in snippet field "},{"location":"snippet-information/#961-description","text":"This field contains the license information actually found in the snippet, if any. Any license information not actually in the snippet itself, e.g., header of the file the snippet belongs in, \u201cCOPYING.txt\u201d file in a top level directory, should not be reflected in this field. The options to populate this field are limited to: A valid SPDX License Expression as defined in Annex D . NONE , if the snippet contains no license information whatsoever; or NOASSERTION , if: the SPDX document creator has made no attempt to determine this field; or the SPDX document creator has intentionally provided no information (no meaning should be implied by doing so). If license information for more than one license is contained in the snippet or if the license information offers a choice of licenses, then each of the choices should be listed as a separate entry. If the License Information in Snippet field is not present for a snippet, it implies an equivalent meaning to NOASSERTION . The metadata for the license information in snippet field is shown in Table 57. Table 57 \u2014 Metadata for the license information in snippet field Attribute Value Required No Cardinality 0..* Format <SPDX License Expression> | NONE | NOASSERTION where: <SPDX License Expression> is a valid SPDX License Expression as defined in Annex D .","title":"9.6.1 Description"},{"location":"snippet-information/#962-intent","text":"Here, the intent is to provide the license information actually in the snippet, as compared to the Concluded License field.","title":"9.6.2 Intent"},{"location":"snippet-information/#963-examples","text":"EXAMPLE 1 Tag: LicenseInfoInSnippet: LicenseInfoInSnippet: LGPL-2.0-only LicenseInfoInSnippet: LicenseRef-2 EXAMPLE 2 RDF: Property spdx:licenseInfoInSnippet in class spdx:Snippet <Snippet rdf:about=\"...\"> <licenseInfoInSnippet rdf:resource =\"http://spdx.org/licenses/GPL-2.0-only\" /> <licenseInfoInSnippet rdf:resource=\"#LicenseRef-2\" /> </Snippet>","title":"9.6.3 Examples"},{"location":"snippet-information/#97-snippet-comments-on-license-field","text":"","title":"9.7 Snippet comments on license field "},{"location":"snippet-information/#971-description","text":"This field provides a place for the SPDX document creator to record any relevant background references or analysis that went in to arriving at the Concluded License for a snippet. The metadata for the snippet comments on license field is shown in Table 58. Table 58 \u2014 Metadata for the snippet comments on license field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines","title":"9.7.1 Description"},{"location":"snippet-information/#972-intent","text":"Here, the intent is to provide the recipient of the SPDX document with a detailed explanation of how the Concluded License was determined for a Snippet if it does not match the License Information in Snippet, is marked NOASSERTION , or other helpful information relevant to determining the license of the snippet in a file.","title":"9.7.2 Intent"},{"location":"snippet-information/#973-examples","text":"EXAMPLE 1 Tag: SnippetLicenseComments: In tag:value format multiple lines are delimited by <text> .. </text> . SnippetLicenseComments: <text>The concluded license was taken from package xyz, from which the snippet was copied into the current file. The concluded license information was found in the COPYING.txt file in package xyz.</text> EXAMPLE 2 RDF: Property spdx:licenseComments in class spdx:Snippet <Snippet rdf:about=\"...\"> ... <licenseComments> The concluded license was taken from package xyz, from which the snippet was copied into the current file. The concluded license information was found in the COPYING.txt file in package xyz. </licenseComments> ... </Snippet>","title":"9.7.3 Examples"},{"location":"snippet-information/#98-snippet-copyright-text-field","text":"","title":"9.8 Snippet copyright text field "},{"location":"snippet-information/#981-description","text":"Identify the copyright holder of the snippet, as well as any dates present. This shall be a free form text field, ideally extracted from the actual snippet. The options to populate this field are limited to: any text relating to a copyright notice, even if not complete; NONE , if the snippet contains no copyright information whatsoever; or NOASSERTION , if the SPDX document creator has not examined the contents of the actual snippet or if the SPDX document creator has intentionally provided no information (no meaning should be implied from the absence of an assertion). If the Snippet Copyright Text field is not present for a snippet, it implies an equivalent meaning to NOASSERTION . The metadata for the snippet copyright text field is shown in Table 59. Table 59 \u2014 Metadata for the snippet copyright text field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines | NONE | NOASSERTION","title":"9.8.1 Description"},{"location":"snippet-information/#982-intent","text":"Record any copyright notice associated with the snippet.","title":"9.8.2 Intent"},{"location":"snippet-information/#983-examples","text":"EXAMPLE 1 Tag: SnippetCopyrightText: In tag:value format multiple lines are delimited by <text> .. </text> . SnippetCopyrightText: <text> Copyright 2008-2010 John Smith </text> EXAMPLE 2 RDF: Property spdx:copyrightText in class spdx:Snippet <Snippet rdf:about=\"...\"> ... <copyrightText> Copyright 2008-2010 John Smith </copyrightText> ... </Snippet>","title":"9.8.3 Examples"},{"location":"snippet-information/#99-snippet-comment-field","text":"","title":"9.9 Snippet comment field "},{"location":"snippet-information/#991-description","text":"This field provides a place for the SPDX document creator to record any general comments about the snippet. The metadata for the snippet comment field is shown in Table 60. Table 60 \u2014 Metadata for the snippet comment field Attribute Value Required No Cardinality 0..1 Format Free form text that can span multiple lines","title":"9.9.1 Description"},{"location":"snippet-information/#992-intent","text":"Here, the intent is to provide the recipient of the SPDX document with more information determined after careful analysis of a snippet.","title":"9.9.2 Intent"},{"location":"snippet-information/#993-examples","text":"EXAMPLE 1 Tag: SnippetComment: In tag:value format multiple lines are delimited by <text> .. </text> . SnippetComment: <text>This snippet was identified as significant and highlighted in this Apache-2.0 file, when a commercial scanner identified it as being derived from file foo.c in package xyz which is licensed under GPL-2.0.</text> EXAMPLE 2 RDF: Property rdfs:comment in class spdx:Snippet <Snippet rdf:about=\"...\"> ... <rdfs:comment> This snippet was identified as significant and highlighted in this Apache-2.0 file, when a commercial scanner identified it as being derived from file foo.c in package xyz which is licensed under GPL-2.0. </rdfs:comment> ... </Snippet>","title":"9.9.3 Examples"},{"location":"snippet-information/#910-snippet-name-field","text":"","title":"9.10 Snippet name field "},{"location":"snippet-information/#9101-description","text":"Identify a specific snippet in a human convenient manner. The metadata for the snippet name field is shown in Table 61. Table 61 \u2014 Metadata for the snippet name field Attribute Value Required No Cardinality 0..1 Format Single line of text","title":"9.10.1 Description"},{"location":"snippet-information/#9102-intent","text":"To aid in identifying a snippet under discussion that might be used in multiple locations, and for consistency with the ability to refer to any copyrightable SPDX Element by name.","title":"9.10.2 Intent"},{"location":"snippet-information/#9103-examples","text":"EXAMPLE 1 Tag: SnippetName: SnippetName: from Linux kernel EXAMPLE 2 RDF: Property spdx:name in class spdx:Snippet <Snippet rdf:about=\"...\"> <name>from Linux kernel</name> </Snippet>","title":"9.10.3 Examples"},{"location":"snippet-information/#911-snippet-attribution-text-field","text":"","title":"9.11 Snippet attribution text field "},{"location":"snippet-information/#9111-description","text":"This field provides a place for the SPDX document creator to record, at the snippet level, acknowledgements that may be required to be communicated in some contexts. This is not meant to include the snippet's actual complete license text (see SnippetLicenseConcluded and LicenseInfoInSnippet ), and might or might not include copyright notices (see also SnippetCopyrightText ). The SPDX document creator may use this field to record other acknowledgements, such as particular clauses from license texts, which might be necessary or desirable to reproduce. The metadata for the snippet attribution text field is shown in Table 62. Table 62 \u2014 Metadata for the snippet attribution text field Attribute Value Required No Cardinality 0..* Format Free form text that can span multiple lines.","title":"9.11.1 Description"},{"location":"snippet-information/#9112-intent","text":"The intent is to provide the recipient of the SPDX document with acknowledgement content at a snippet level, to assist redistributors of the file with reproducing those acknowledgements. This field does not necessarily indicate where, or in which contexts, the acknowledgements need to be reproduced (such as end-user documentation, advertising materials, etc.) and the SPDX document creator might or might not explain elsewhere how they intend for this field to be used.","title":"9.11.2 Intent"},{"location":"snippet-information/#9113-examples","text":"EXAMPLE 1 Tag: SnippetAttributionText: In tag:value format multiple lines are delimited by <text> .. </text> . SnippetAttributionText: <text> All advertising materials mentioning features or use of this software must display the following acknowledgement: This product includes software developed by the AT&T. </text> EXAMPLE 2 RDF: Property spdx:attributionText in class spdx:Snippet <Snippet rdf:about=\"...\"> <attributionText> All advertising materials mentioning features or use of this software must display the following acknowledgement: This product includes software developed by the AT&T. </attributionText> </Snippet>","title":"9.11.3 Examples"},{"location":"terms-and-definitions/","text":"3 Terms and definitions For the purposes of this document, the following terms and definitions apply. ISO and IEC maintain terminological databases for use in standardization at the following addresses: ISO Online browsing platform: available at https://www.iso.org/obp IEC Electropedia: available at http://www.electropedia.org/ 3.1 annotations information section section (3.9) type, an instance of which contains comments about an SPDX document, SPDX file, SPDX package, or SPDX snippet 3.2 field a piece of information contained in a section (3.9) 3.3 file information section section (3.9) type, an instance of which contains facts specific to files 3.4 other licensing information detected section section (3.9) type, an instance of which contains a way to capture information about and refer to licenses that are not on the SPDX license List 3.5 package any unit of content that can be associated with a distribution of software 3.6 package information section section (3.9) type, an instance of which contains facts that are common properties of a package 3.7 relationships between SPDX elements information section section (3.9) type, an instance of which contains information on how documents, packages (3.5), files and snippets relate to each other 3.8 review information section section (3.9) type, an instance of which contains information about persons, organizations or tools that have reviewed a document 3.9 section a part of this SPDX specification 3.10 snippet information section section (3.9) type, an instance of which contains facts that are specific to a part of a file 3.11 SPDX document collection of section (3.8) instances each of which contains information about software organized using the SPDX format (3.11) 3.12 SPDX document creation information section section (3.9) type, an instance of which contains metadata that associates analysis results with a specific version of an SPDX document (3.11) and license for use, and provides information on how, when, and by whom the SPDX document was created 3.13 SPDX format the data format defined by this document 3.14 sub-package a package which is embedded in a larger package","title":"Clause 3: Terms and definitions"},{"location":"terms-and-definitions/#3-terms-and-definitions","text":"For the purposes of this document, the following terms and definitions apply. ISO and IEC maintain terminological databases for use in standardization at the following addresses: ISO Online browsing platform: available at https://www.iso.org/obp IEC Electropedia: available at http://www.electropedia.org/ 3.1 annotations information section section (3.9) type, an instance of which contains comments about an SPDX document, SPDX file, SPDX package, or SPDX snippet 3.2 field a piece of information contained in a section (3.9) 3.3 file information section section (3.9) type, an instance of which contains facts specific to files 3.4 other licensing information detected section section (3.9) type, an instance of which contains a way to capture information about and refer to licenses that are not on the SPDX license List 3.5 package any unit of content that can be associated with a distribution of software 3.6 package information section section (3.9) type, an instance of which contains facts that are common properties of a package 3.7 relationships between SPDX elements information section section (3.9) type, an instance of which contains information on how documents, packages (3.5), files and snippets relate to each other 3.8 review information section section (3.9) type, an instance of which contains information about persons, organizations or tools that have reviewed a document 3.9 section a part of this SPDX specification 3.10 snippet information section section (3.9) type, an instance of which contains facts that are specific to a part of a file 3.11 SPDX document collection of section (3.8) instances each of which contains information about software organized using the SPDX format (3.11) 3.12 SPDX document creation information section section (3.9) type, an instance of which contains metadata that associates analysis results with a specific version of an SPDX document (3.11) and license for use, and provides information on how, when, and by whom the SPDX document was created 3.13 SPDX format the data format defined by this document 3.14 sub-package a package which is embedded in a larger package","title":"3 Terms and definitions"},{"location":"using-SPDX-short-identifiers-in-source-files/","text":"Annex E Using SPDX license list short identifiers in source files (Informative) E.1 Introduction Identifying the license for open source software is critical for both reporting purposes and license compliance. However, determining the license can sometimes be difficult due to a lack of information or ambiguous information. Even when licensing information is present, a lack of consistent notation can make automating the task of license detection very difficult, thus requiring vast amounts of human effort. Short identifiers from the SPDX License List can be used to indicate license info at the file level. The advantages of doing this are numerous but include: It is precise. It is concise. It is language neutral. It is easy and more reliable to machine process. Leads to code that is easier to reuse. The license information travels with the file (as sometimes not entire projects are used or license files are removed). It is a standard and can be universal. There is no need for variation. An SPDX short identifier is immutable. Easy look-ups and cross-references to the SPDX License List website. If using SPDX short identifiers in individual files, it is recommended to reproduce the full license in the projects LICENSE file and indicate that SPDX short identifiers are being used to refer to it. For links to projects illustrating these scenarios, see https://spdx.dev/ids-where . E.2 Format for SPDX-License-Identifier The SPDX-License-Identifier tag declares the license the file is under and should be placed at or near the top of the file in a comment. The SPDX License Identifier syntax may consist of a single license (represented by a short identifier from the SPDX license list ) or a compound set of licenses (represented by joining together multiple licenses using the license expression syntax). The tag should appear on its own line in the source file, generally as part of a comment. SPDX-License-Identifier: <SPDX License Expression> E.3 Representing single license A single license is represented by using the short identifier from SPDX license list , optionally with a unary \"+\" operator following it to indicate \"or later\" versions may be applicable. Examples: SPDX-License-Identifier: CDDL-1.0+ SPDX-License-Identifier: MIT E.4 Representing multiple licenses Multiple licenses can be represented using an SPDX license expression as defined in Annex D . A set of licenses may optionally be enclosed in parentheses, but are not required to be enclosed. As further described there: When there is a choice between licenses (\"disjunctive license\"), they should be separated with \"OR\". If presented with a choice between two or more licenses, use the disjunctive binary \"OR\" operator to construct a new license expression. Similarly when multiple licenses need to be simultaneously applied (\"conjunctive license\"), they should be separated with \"AND\". If required to simultaneously comply with two or more licenses, use the conjunctive binary \"AND\" operator to construct a new license expression. In some cases, a set of license terms apply except under special circumstances, in this case, use the \"WITH\" operator followed by one of the recognized exception identifiers . The expression MUST be on a single line, and MUST NOT include a line break in the middle of the expression. Examples: SPDX-License-Identifier: GPL-2.0-only OR MIT SPDX-License-Identifier: LGPL-2.1-only AND BSD-2-Clause SPDX-License-Identifier: GPL-2.0-or-later WITH Bison-exception-2.2 Please see Annex D for more examples and details of the license expression specific syntax. If you can\u2019t express the license(s) as an expression using identifiers from the SPDX list, it is probably best to just put the text of your license header in the file (if there is a standard header), or refer to a neutral site URL where the text can be found. To request a license be added to the SPDX License List, please follow the process described here: https://github.com/spdx/license-list-XML/blob/master/CONTRIBUTING.md . Alternatively, you can use a LicenseRef- custom license identifier to refer to a license that is not on the SPDX License List, such as the following: SPDX-License-Identifier: LicenseRef-my-special-license The LicenseRef- format is defined in Annex D . When using a custom LicenseRef- identifier, you will also need to provide a way for others to determine what license text corresponds to it. Version 3.0 of the REUSE Software Specification provides a standardized format that can optionally be used for providing the corresponding license text for these identifiers.","title":"Annex E: Using SPDX short identifiers in Source Files"},{"location":"using-SPDX-short-identifiers-in-source-files/#annex-e-using-spdx-license-list-short-identifiers-in-source-files-informative","text":"","title":"Annex E Using SPDX license list short identifiers in source files (Informative)"},{"location":"using-SPDX-short-identifiers-in-source-files/#e1-introduction","text":"Identifying the license for open source software is critical for both reporting purposes and license compliance. However, determining the license can sometimes be difficult due to a lack of information or ambiguous information. Even when licensing information is present, a lack of consistent notation can make automating the task of license detection very difficult, thus requiring vast amounts of human effort. Short identifiers from the SPDX License List can be used to indicate license info at the file level. The advantages of doing this are numerous but include: It is precise. It is concise. It is language neutral. It is easy and more reliable to machine process. Leads to code that is easier to reuse. The license information travels with the file (as sometimes not entire projects are used or license files are removed). It is a standard and can be universal. There is no need for variation. An SPDX short identifier is immutable. Easy look-ups and cross-references to the SPDX License List website. If using SPDX short identifiers in individual files, it is recommended to reproduce the full license in the projects LICENSE file and indicate that SPDX short identifiers are being used to refer to it. For links to projects illustrating these scenarios, see https://spdx.dev/ids-where .","title":"E.1 Introduction "},{"location":"using-SPDX-short-identifiers-in-source-files/#e2-format-for-spdx-license-identifier","text":"The SPDX-License-Identifier tag declares the license the file is under and should be placed at or near the top of the file in a comment. The SPDX License Identifier syntax may consist of a single license (represented by a short identifier from the SPDX license list ) or a compound set of licenses (represented by joining together multiple licenses using the license expression syntax). The tag should appear on its own line in the source file, generally as part of a comment. SPDX-License-Identifier: <SPDX License Expression>","title":"E.2 Format for SPDX-License-Identifier "},{"location":"using-SPDX-short-identifiers-in-source-files/#e3-representing-single-license","text":"A single license is represented by using the short identifier from SPDX license list , optionally with a unary \"+\" operator following it to indicate \"or later\" versions may be applicable. Examples: SPDX-License-Identifier: CDDL-1.0+ SPDX-License-Identifier: MIT","title":"E.3 Representing single license "},{"location":"using-SPDX-short-identifiers-in-source-files/#e4-representing-multiple-licenses","text":"Multiple licenses can be represented using an SPDX license expression as defined in Annex D . A set of licenses may optionally be enclosed in parentheses, but are not required to be enclosed. As further described there: When there is a choice between licenses (\"disjunctive license\"), they should be separated with \"OR\". If presented with a choice between two or more licenses, use the disjunctive binary \"OR\" operator to construct a new license expression. Similarly when multiple licenses need to be simultaneously applied (\"conjunctive license\"), they should be separated with \"AND\". If required to simultaneously comply with two or more licenses, use the conjunctive binary \"AND\" operator to construct a new license expression. In some cases, a set of license terms apply except under special circumstances, in this case, use the \"WITH\" operator followed by one of the recognized exception identifiers . The expression MUST be on a single line, and MUST NOT include a line break in the middle of the expression. Examples: SPDX-License-Identifier: GPL-2.0-only OR MIT SPDX-License-Identifier: LGPL-2.1-only AND BSD-2-Clause SPDX-License-Identifier: GPL-2.0-or-later WITH Bison-exception-2.2 Please see Annex D for more examples and details of the license expression specific syntax. If you can\u2019t express the license(s) as an expression using identifiers from the SPDX list, it is probably best to just put the text of your license header in the file (if there is a standard header), or refer to a neutral site URL where the text can be found. To request a license be added to the SPDX License List, please follow the process described here: https://github.com/spdx/license-list-XML/blob/master/CONTRIBUTING.md . Alternatively, you can use a LicenseRef- custom license identifier to refer to a license that is not on the SPDX License List, such as the following: SPDX-License-Identifier: LicenseRef-my-special-license The LicenseRef- format is defined in Annex D . When using a custom LicenseRef- identifier, you will also need to provide a way for others to determine what license text corresponds to it. Version 3.0 of the REUSE Software Specification provides a standardized format that can optionally be used for providing the corresponding license text for these identifiers.","title":"E.4 Representing multiple licenses "}]}